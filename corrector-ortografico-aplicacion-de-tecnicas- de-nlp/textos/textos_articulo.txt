
"HTTP: Diferencias entre GET y POST "
2020-10-21
"Vea las diferencias entre los métodos GET y POST de HTTP. Consulta la funcionalidad de cada uno y cuándo usarlos en la web."
"yuri-oliveira"
"yuri.oliveira@alura.com.br"
"front-end"

Cuando vamos a acceder a un sistema web, es bastante común pasar por una pantalla de inicio de sesión, en la que ponemos nuestras credenciales para acceder al sistema.
Estas informaciones deben ser confidenciales, sin embargo, cuando intenté iniciar sesión en una aplicación web que estaba desarrollando, obtuve el siguiente resultado:

imagen

Vea que nuestros parámetros (correo electrónico y contraseña) fueron pasados por la URI, que no es muy seguro, ¿verdad? Por lo general, cuando iniciamos sesión en algunos sitios, no sucede, al menos en la mayoría de ellos.
Estas informaciones en la URL están expuestas, no solo si alguien está cerca y ve lo que escribió. Pero también cuando estas informaciones viajan por Internet. Qué es una vulnerabilidad de seguridad.
Lo que define el lugar donde se pasan los parámetros es el Protocolo de comunicación de la web, HTTP.
Conociendo al HTTP
El HTTP es el protocolo responsable de la comunicación de sitios en la web. Cuando accedemos a un sitio web, utilizamos este protocolo. Este protocolo tiene algunos métodos o, como también se les llama, verbos.
Los verbos HTTP definen qué acción se debe realizar y, según el verbo, el servidor puede dar una respuesta diferente.
Conociendo los verbos
Uno de los verbos más comunes de HTTP es el GET. Cuando usamos el GET, los parámetros se pasan en el encabezado de la solicitud. Por lo tanto, se pueden ver por la URI, como en el caso de nuestro formulario de inicio de sesión.
Este verbo es el estándar para enviar datos cuando enviamos un formulario HTTP. Entonces, en el ejemplo anterior, se usó GET. Sin embargo, podemos cambiar este comportamiento al decirle al formulario cuál del método (method) usará.
En el caso de formularios web, es muy común que este método sea el POST:
&lt;form action="/logar" method="post"&gt;
El POST, a diferencia del GET, envía los parámetros en el cuerpo de la solicitud HTTP. Escondiéndolos de la URI:

imagen

Eso significa que si usamos el POST ¿protegemos los datos enviados por el formulario, ya que no aparecen en la URI?
No exactamente. Lo único que POST hace es enviar los parámetros en el cuerpo de la solicitud. Si inspeccionamos la requisición, tenemos acceso a ellos.
Si realmente queremos proteger nuestra aplicación, debemos utilizar la "versión segura" de HTTP, HTTPS. Con ella, podemos cifrar los datos enviados.
Ambos verbos se usan ampliamente en formularios en la web y tienen otras diferencias más entre sí.
Como el GET envía los datos en el encabezado de la solicitud, tiende a ser, no una regla, un poco más performático que el POST.
Sin embargo, al enviar los datos en el encabezado de la solicitud, el GET tiene un tamaño máximo de datos que se puede enviar, que en general es 255 caracteres. Con POST, podemos enviar informaciones un poco más grandes, como imágenes. Es decir, si intentamos pasar una gran cantidad de información a través de GET, algunas partes se pueden perder en el camino.
Con esto, puedes estar pensando que usar el POST es la mejor manera, ya que encapsula los datos en el cuerpo de la solicitud y consigue transportar más datos que el GET, por lo tanto, usaremos el POST en todo lugar.
Sin embargo, si hay dos verbos diferentes, es porque están destinados a usarse en diferentes lugares.
Solicitudes de tipo GET se recomiendan para obtener datos de un recurso determinado. Como en un formulario de búsqueda o en un listado de todos los productos registrados.
Las requisiciones POST se utilizan principalmente para enviar información a procesar, como al crear algún recurso, como un producto o un cliente.
Conociendo otros verbos
Además del GET y del POST, hay otros verbos HTTP que se pueden utilizar. Por ejemplo, si queremos eliminar algún recurso, podemos usar el verbo DELETE.
Si queremos actualizar los datos, podemos utilizar el PUT, que reemplaza todas las informaciones de un recurso en particular, por ejemplo, un producto. O usar el verbo PATCH que actualiza parcialmente los datos de un producto.
Todos estos verbos se utilizan ampliamente en el mundo web. Especialmente cuando usamos el modelo REST.
Conocer el protocolo HTTP y sus verbos es muy valioso para un desarrollador web. Alura ofrece cursos y formaciones completas para que aprendas nuevas tecnologías del mundo de negocios. A través de nuestra comunidad activa, clases de video de alta calidad y ejercicios prácticos, ¡Estarás preparado en poco tiempo!---
"Empezando con el desarrollo web Front-end "
2020-12-07
"Conozca el paso a paso para conocer los caminos del desarrollo web Front-end y gane tu lugar en el mercado laboral."
"felipe-nascimento3"
"felipe.nascimento@caelum.com.br
"front-end"

Después de algún tiempo en la universidad escribiendo códigos y programas que funcionaban a través de la terminal, siempre tuve la impresión de que faltaba algo.
Comencé a escribir programas donde el usuario respondía a través de la terminal, pero mientras tanto el mundo ya usa el navegador y los sitios web para interactuar con los sistemas. Esta capa final de interacción con el usuario es la puerta principal de los programas en la web, por eso la llamamos de Front-end.
Suponiendo que prácticamente todas las empresas están en la web hoy. Es cada vez más importante la creación de interfaces amigables y accesibles para todas las personas, y el rol del desarrollador Front-end se vuelve cada vez más importante en estos escenarios.
Entonces, ¿cuáles son los pasos para aprender Front-end y conseguir un trabajo en el mercado laboral?
La base del desarrollo web
Para crear las páginas que quería, comencé con los Conceptos básicos de HTML5 y CSS3, con estas tecnologías podemos indicarle al navegador qué mostrar y cómo mostrar. 
Después de algunas semanas estudiando, aprendí a estructurar las páginas de forma semántica, para que los buscadores y lectores de pantalla pudieran hacer nuestro contenido más accesible al usuario final. Aprendí los conceptos básicos sobre posicionamiento y también sobre <a href="https://www.aluracursos.com/blog/nombre-de-clases-en-css">importancia de escribir código CSS</a> limpio, flexible y reutilizable.
El siguiente paso fue profundizarme más en mis estudios, aprender sobre algunos <a href="https://www.aluracursos.com/curso-online-html5-css3-posicionamiento-listas-navegacion">temas más avanzados</a> como seudoclases, seudoelementos, transiciones, animaciones, cómo crear formularios y tablas semánticas y cómo usar algunos selectores más avanzados.
Después de algunas semanas más de estudio, llegó el momento de aprender sobre la diferencia entre la medida relativa y absoluta, y dónde y cómo deberíamos usar cada <a href="https://www.aluracursos.com/blog/guia-de-unidades-en-css">unidad de medida</a>, como em, rem y el famoso pixel y cómo <a href="https://www.aluracursos.com/blog/como-organizar-el-css-en-tu-proyecto">organizar mi código CSS</a>.
Por último, estudié las ventajas y desventajas de usarframworks CSS, como el famoso BootStrap. Fue entonces cuando me di cuenta de que el CSS ya había dejado de ser sencillon y se podría usar para realizar muchas otras funciones, no solo para diseñar texto.
Ahora que podemos diseñar nuestras páginas y estructurar nuestro HTML, aprenderemos a darle vida a nuestra página, dejándola con un comportamiento dinámico e interactivo.
Haciendo nuestras páginas dinámicas
Hoy en día uno de los lenguajes más populares y comentados del mundo es <a href="https://www.aluracursos.com/curso-online-javascript-primeros-pasos">JavaScript</a> y es con su ayuda que optimizaremos y crearemos interactividad en nuestras páginas.
Mi plan para encontrarnos el reino encantado de JavaScript fue centrarse en temas básicos del lenguaje como variables, operadores, arrays, bucles y estilos. Para practicar esta parte hice varios <a href="https://www.aluracursos.com/curso-online-logica-de-programacion-primeros-pasos">ejercicios de lógica</a>.
Después de un tiempo comencé a estudiar temas relacionados con la interacción con el usuario como la creación de eventos, manipulación de elementos, creación de filtros, validación de formularios, incluso cómo utilizar <a href="https://www.aluracursos.com/blog/llenando-un-formulario-html-automaticamente-con-ajax">AJAX</a> para completar automáticamente formularios HTML.
Como ya estaba escribiendo mucho código, me di cuenta de que era hora de aprender cómo organizar mi código JavaScript de forma más sencilla.
Después de estudiar JavaScript puro, llegó el momento de aprender un poco sobre JQuery, una de las bibliotecas más conocidas en el mundo front-end. Además de tener varias funciones y plugins creadas para ayudar a nuestro desarrollo diario, durante mis estudios aprendí que JQuery facilita nuestro trabajo con AJAX y cómo hacer solicitudes HTTP como GET y POST y animaciones.
Por fin aprendí a usar otras técnicas con JavaScript para sortear la difícil tarea de complacer las distintas versiones y tipos de navegadores, mientras se utilizan los recursos más modernos de HTML5 y CSS3.
Como hemos aprendido mucho sobre la base del front-end, es hora de estudiar técnicas más avanzadas para refinar nuestro desarrollo.
Evolucionando nuestro Front-end UI
Ahora que hemos creado una buena base en los fundamentos de la web, es hora de estudiar temas más avanzados en desarrollo front-end.
Empecé entendiendo qué son preprocesadores y cómo simplificar el CSS. También aprendí qué son y qué 10 mixins en Saas debería utilizar en mis proyectos.
Una de mis mayores dificultades durante mi aprendizaje fue posicionarme y aprender sobre Flexbox hizo este proceso mucho más fácil. Al igual que estudiar CSS Grid Layout me ayudó a crear diseños de manera más rápida y eficiente. Un consejo que dejo para escapar de la sobrescrita de estilos es crear componentes CSS utilizando el estándar BEM.
Por fin, estudiaremos algunos de los temas más importantes de hoy, cómo desarrollar páginas que se adaptan a cualquier tipo de dispositivo, cómo nos ocupamos con los límites de resolución en sitios web responsivos y por qué usar 'em' en CSS.
Ahora que hemos simplificado nuestro CSS con la ayuda de preprocesadores y ya sabemos cómo hacer que nuestra página sea responsiva, volvamos a JavaScript y veamos qué han aportado las nuevas especificaciones.
JavaScript Moderno
A lo largo de los años, nuestro lenguaje favorito ha sufrido varios cambios y, como ingenieros front-end, no podemos dejar de seguir la evolución y las especificaciones de JavaScript moderno.
La nueva especificación de JavaScript simplificó nuestro trabajo con <a href="https://www.aluracursos.com/curso-online-javascript-introduccion-orientacion-objetos">programación orientada a objetos</a> y trajo recursos como arrow functions, spread operator, template strings y funciones como map y reduce. Además de estudiar las nuevas funciones, también aprendí más sobre algunos estándares de diseños como Proxy y Factory.
Hasta ahora hemos aprendido a utilizar buenas prácticas durante el desarrollo de nuestras páginas, pero inevitablemente irán creciendo, por lo que necesitamos conocer algunas técnicas y herramientas que nos ayudarán a afrontar esta complejidad, sin afectar al usuario.
SPA y React
Una arquitectura muy famosa y usada hoy en día es Single Page Application, con ella creamos una sola página que le da al usuario la sensación de estar en una aplicación.
Tenemos algunas opciones de frameworks para crear SPA, como por ejemplo, Vue.js y Angular.js. Sin embargo, opté por elegir al React, ya sea por la facilidad que ofrece para al manipular y actualizar el estado de nuestra aplicación, como por su amplia adopción en el mercado de trabajo.
Para tener una mejor comprensión de este framework, primero estudiemos cómo React realiza la navegación y la comunicación entre los componentes, entonces, ¿cómo funciona la creación de los container components y el ciclo de vida de React, hasta que alcances la arquitectura flux, implementación de Redux y el server side rendering.
Si te interesa este tema, aquí en Alura tenemos capacitaciones de front-end, para principiantes y para aquellos que ya son desarrolladores web. En ellas, verás cómo programar en Javascript, HTML y CSS para construir sitios web.---
"Empezando con Spring Framework"
2020-10-29
"Conoce el framework Spring, para qué sirve y da tus primeros pasos con él dentro del entorno Java"
"elias.ribeiro@alura.com.br"
"Elias Ribeiro"
"programacao"

Se nos pidió implementar un sistema en una tienda de productos electrónicos que ayudará a controlar las cantidades de productos que tenemos en la tienda.
Comenzamos alineando las operaciones que el cliente esperaba poder realizar en este control de productos.
Según él, primero era necesario insertar un producto, enseguida necesitaban poder siempre ver cuántos productos había.
Entonces comenzamos desarrollando este código para agregar un producto.
public void agregarProducto(Producto producto) {
        try {
            String sql = "insert into productos (nombre,cantidad) values (?,?)";
            PreparedStatement stmt = connection.prepareStatement(sql);
            stmt.setString(1, producto.getNombre());
            stmt.setString(2, producto.getCantidad());
            stmt.execute();
            stmt.close();
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
    }
En este caso, usamos Servlets, pero nos dimos cuenta de que el código resultó ser muy grande y ni siquiera hicimos la mitad de las cosas que pidió el cliente. Solo solucionamos la parte de inserción de productos, pero aún faltan las features para ver, actualizar y eliminar.
Si tenemos en cuenta eso, al final tendríamos un código enorme y, en consecuencia, perjudicaríamos la legibilidad y el mantenimiento.
¿Y cómo podríamos solucionar este problema?
Usando Spring Framework
Una forma más elegante de solucionar este problema de códigos largos y poco legibles puede ser utilizando Spring.
Spring es un <a href="https://spring.io/">framework</a> que facilita mucho el desarrollo, es decir, usándolo tenemos una mayor legibilidad de código, implementaciones con menos código, facilidad en el mantenimiento de código. Con eso, también tendremos una entrega más rápida.
Para comenzar, primero necesitamos crear un proyecto.
Creando el proyecto
Para crear nuestro proyecto tenemos que acceder <a href="https://start.spring.io/">al sitio web de spring</a> y colocar las dependencias que queramos, pero ¿cuáles queremos?
Nuestra aplicación tiene que ser web para que sea un acceso más dinámico, es decir, podemos acceder desde cualquier dispositivo.
Como cualquier aplicación web, tiene datos, y estos datos se deben guardar en algún lugar, por lo que necesitamos una base de datos.
Tienes que mapear las clases al banco para acelerar el proceso en relación al banco.
Entonces usemos la dependencia Web para que sea una aplicación web que contenga tomcat ya incluido para que no tengamos que hacer toda la configuración.
Mysql será la base de datos que usaremos en esta aplicación, porque tengo que guardar los datos en alguna parte. Con esto, además de guardar, podemos cambiar, eliminar o buscar datos que se encuentran dentro de la base.
JPA para que persistan nuestras clases en la base de datos, de modo que mapearemos nuestras clases y las crearemos automáticamente.
Vamos a nombrar al grupo como .com.sistema para que sea el grupo de nuestra aplicación y definiremos artifact como usuarios. 
Hecho esto generamos el proyecto haciendo click en Generate Project y se generará un zip, pero ¿qué debemos hacer con él? Necesitamos extraerlo para tomar el proyecto que acabamos de crear e importarlo a algún lugar. Lo importaremos a IDE.
Configurando el proyecto
Con esta importación ya realizada, ejecutaremos el proyecto para ver si todo está bien. Pero al ejecutarlo tuvimos un error.
¿Por qué ocurre este error, si configuramos nuestro proyecto correctamente? Tenga en cuenta que, el error se produjo al configurar el DataSource, ya que faltaron algunos datos.
Sucede porque cuando ponemos la dependencia del Mysql tenemos que configurarlo en nuestra aplicación. Pero, ¿dónde deberíamos realizar esta configuración?
Tenemos que hacerla en application.properties, aquí es donde se encuentran todas las configuraciones de propiedades de la aplicación.
Ahora tomemos un ejemplo similar al que se encuentra en la documentación del <a href="https://spring.io/guides/gs/accessing-data-mysql/">spring</a>. Lo primero que se debe hacer es pasar la url.
En nuestra url pasaremos el tipo de la base, que es mysql, y el puerto donde se ejecuta la base, y haremos un parámetro llamado createDatabaseIfNotExist como true, de modo que cree la base si no existiera.
También tenemos el tema de los horarios, así que dejemos el serverTimezone cómo UTC para que no ocurra ningún error.
Hasta ahora tenemos el archivo application.properties así:
spring.datasource.url = jdbc: mysql:// localhost: 3306 / productos? createDatabaseIfNotExist = true &amp; serverTimezone = UTC
Iniciemos el proyecto para ver si todo está bien. Bueno, al ejecutarlo tendremos otro error, este error nos dice que se nos niega el permiso.
Todavía tenemos que pasar el nombre de usuario y la contraseña para iniciar sesión, de modo que tengamos acceso a la base, sin eso siempre se denegará el acceso. ¿Cómo pasamos el nombre de usuario y la contraseña?
Tendremos que editar el application.properties y pasar nuestro nombre de usuario y contraseña de la base de datos. En mi caso, no tengo contraseña en la base, así que dejo el campo vacío.
spring.datasource.username = elias
spring.datasource.password =
Además de seguir actualizando nuestras entidades tenemos que definir la propiedad del ddl-auto. Bueno, vamos a establecer la propiedad de update, de modo que cada vez que se actualicen nuestras entidades, la base también se actualice.
spring.jpa.hibernate.ddl-auto = actualizar
Pero, ¿qué son estas entidades?
Entidades
Entidades son modelos de nuestra tabla que estarán en la base de datos. Pero, ¿cómo un modelo será una tabla en nuestra base de datos?  Cuando configuramos el hibernate en nuestra aplicación, el hace la persistencia de los datos en la base de datos, es decir, los atributos que creamos en la clase.
Sin embargo, ¿cómo es posible saber que una clase es una entidad? Sabemos que en Java hay <a href="https://www.oracle.com/technetwork/middleware/ias/toplink-jpa-annotations-096251.html">anotaciones</a>, entonces busquemos una anotación que diga que la clase es una entidad. Cuando abrimos el enlace de documentación, inmediatamente miramos la anotación @Entity.
¿Cómo funciona el @Entity? Él mapea la clase para la base, pero cuando hacemos esta anotación debemos mapear el ID de la clase. Pero, ¿cómo se hace este ID? Para generar el id pasamos otra anotación llamada @Id. Pero, ¿cómo se hace este Id? ¿Uno en uno, dos en dos?
Para saber la cantidad de incremento que vamos a pasar, tendremos que usar otra anotación llamada @GeneraredValue que nos generará un valor, pero esto aún no soluciona nuestro problema, porque no sabemos cuánto incrementa, para solucionar esto, usaremos el parámetro (strategy= GenerationType.IDENTITY) que aumenta en uno, por lo que la identificación no se repite.
Sabiendo todo esto, necesitamos algo para mapear los atributos de Nombre y Cantidad, como nombre y cantidad están vinculados a un producto, entonces creemos un paquete llamado modelo. Dentro de este paquete también crearemos una clase producto con estos atributos y mapearemos como una entidad.

Código

Ahora hemos creado estos atributos en la base de datos, pero aún no hemos insertado, buscado o cambiado nada hasta ahora. ¿Y cómo se puede hacer esto? ¿Es posible hacerlo directamente en la Entidad?
Repositorio
Cuando pensamos en insertar, buscar, cambiar datos, inmediatamente pensamos en DAOS o incluso en comandos SQL, esto es mucho trabajo. Pero entonces, ¿cómo haremos la persistencia de los datos? ¿En la clase entidad?
Haremos esto en los <a href="https://docs.spring.io/spring-data/data-commons/docs/1.6.1.RELEASE/reference/html/repositories.html">repositorios</a>, porque facilita el proceso de CRUD. Por buenas prácticas no lo haremos dentro de la clase Entidad.
El repositorio tiene una interfaz llamada <a href="https://docs.spring.io/spring-data/commons/docs/current/api/org/springframework/data/repository/CrudRepository.html">CrudRepository</a> que nos permite hacer un CRUD de nuestros datos, sin que tengamos que escribir ninguna línea de código.
Necesitamos crear un paquete llamado repositorio y una interfaz llamada ProdutosRepository.
En esta interfaz, ¿qué necesitamos para hacer con que ella haga esta persistencia de datos? Tenemos que extender la interfaz CrudRepository y pasar la entidad que queremos y su tipo de ID. Con esto, nuestro CRUD está listo.
público interfaz ProductosRepositorio extiende CrudRepository&lt;Producto, Largo&gt; {}
Pero, ¿cómo controlamos la aplicación para saber qué vamos a hacer?
Control
Los controles son el intermediario de nuestra aplicación, es decir, hacen la comunicación con la parte frontal de nuestra aplicación y con la base de datos. Luego, pueden hacer inserciones en la base de datos. Controlamos la aplicación según el protocolo <a href="https://www.aluracursos.com/blog/diferencias-entre-get-y-post">http</a>. ¿Cómo podemos ver el http tiene los métodos: POST, GET. ¿Los vamos a utilizar para controlar nuestra aplicación?
Haremos este control a través de <a href="https://www.baeldung.com/spring-mvc-annotations">anotaciones</a>, mapeando con @GetMapping, @PostMapping para seguir el protocolo http. Bien, ahora sabemos para qué sirven estas anotaciones y el protocolo http. Pero, ¿cómo podemos hacer esto en la aplicación?
Bueno, podemos crear un paquete llamado controller y una clase llamada ProductoController para controlar el flujo de nuestra aplicación. Pero, si usamos la anotación @Entity para decir que la clase Producto es una entidad, ¿tenemos que usar alguna anotación para el control?
Podemos hacer dos anotaciones @Controller y el @RestController.  El @Controller se usa para señalar que es una clase de Spring MVC y se usa ampliamente para redirigir views. Ya el @RestController hace automáticamente todo lo que @Controller hace, devuelve todo en JSON y no necesitamos usar la anotación @ResponseBody, porque ya está contenido en él, así que usemos @RestController.
Tenemos que mapear nuestra clase con @RestController quedando de esta manera.

Código

Si ejecutamos el proyecto, todavía no pasa nada, ya que no hemos mapeado la URL del controller, ¿cómo debemos hacer esto?
Si pensó que una anotación era correcta, tenemos que usar una anotación para hacer esto, esta anotación será @RequestMapping (“url que queremos”).
En nuestro caso lo haremos en la url (/ api / producto) siendo el siguiente:

Código

Hacerlo de esta manera todavía no nos devolverá nada, ya que no hemos realizado ningún tipo de mapeo de retorno. ¿Cómo hacer este mapeo? Usando http a nuestra ventaja y haciendo el mapeo con las anotaciones @GetMapping, @PostMapping.
@RequestMapping("/ api / product /")
@RestController
público clase ProductController{
    @GetMapping()
    @PostMapping()
}
Pero al igual que con el RequestMapping tenemos que pasar una ruta para cada anotación, solo que tienen algo diferente, es decir, en lugar de pasarlo directamente, tenemos que usar el parámetro value y su mapeo.

Código

Hecho esto nos damos cuenta de que tenemos errores que ocurren debido a que no tenemos nada para hacer uso de estas anotaciones, ¿qué podemos hacer para usarlas?
Una buena idea sería usar métodos con retornos para que sea más fácil de usar, pues si tenemos que listar usuarios es crear un método que contenga un retorno de una lista de usuarios.

Código

¿Pero qué vamos a devolver? Pues recuerda nuestro repositorio, allí tenemos muchos métodos y uno de ellos es findAll que busca todos los elementos que hay en la base.
Tenemos que hacer la inyección de dependencia del repositorio, podemos hacer esta inyección por el constructor, pero elegiremos hacerlo con una anotación llamada @Autowired y utilizar los métodos del repositorio.
@Autowired
privado ProductRepository productRepository;
Bueno, probemos esto, usemos el método findAll para ver si nos devuelve los registros de la base de datos.
@GetMapping(valor = "lista de productos")
público Lista &lt;Produto&gt; lista de productos() {
    regreso productRepositorio.findAll ();
 }
Bueno, pero cuando vayamos a probar queremos que regresemos un JSON, pero, ¿cómo se puede hacer esto?
Está el produces que es el valor que vamos a producir y el consumes que es el valor que vamos a consumir. Para nuestro GetMapping produciremos el valor en JSON, de esta manera.
@GetMapping(valor = "listProducts", produce = MediaType.APPLICATION_JSON_VALUE)
público Lista &lt;Produto&gt; lista de productos() {
    regreso  (Lista &lt;Produto&gt; ) productRepositorio.findAll ();
 }
Ahora que sabemos esto en nuestro @PostMapping, ¿cómo sería?  Con el PostMapping  sería diferente, porque en él tendríamos que consumir los datos de la parte frontal para insertarlo en la base de datos, pero para poder enviar estos datos desde la parte frontal de la aplicación a su control, ¿qué tenemos que hacer?
Tenemos una anotación llamada @RequestBody para enviar los datos por el cuerpo de la requisición, y la usaremos.
Pero, ¿qué tipo de método creo para eso? Bueno, creemos una ResponseEntity para devolver las respuestas como  <a href="https://developer.mozilla.org/pt-BR/docs/Web/HTTP/Status">http status code</a> que es una de las mejores prácticas que debemos seguir.
@PostMapping(valor = "insertProducts", consumes = MediaType.APPLICATION_JSON_VALUE)
público ResponseEntity Anadir Producto(Producto @RequestBody Product) {
    productRepository.save (usuario);
regreso ResponseEntity.status (201) .construir ();
}
Conclusión
Tuvimos el problema en relación a los DAOS de ser muy largos y decidimos usar Spring de otra manera.
Cuando usamos Spring tenemos las ventajas del framework y logramos hacer un CRUD con rapidez.
Entonces, ¿qué te pareció la publicación? Ahora es incluso más fácil trabajar con Spring, ¿verdad? Si quieres seguir estudiando sobre el tema, ¡mira nuestros cursos de Java en Alura!---
"En SQL, null es null, vacío está vacío"
2020-10-16
"En SQL, es bueno tener cuidado con los campos nulos y vacíos en las tablas de tu base de datos."
guilherme-silveira
"guilherme.silveira@caelum.com.br"
"data-science"

Considerando una tabla de datos de Estudiantes, con el campo nombre y el campo empresa, vamos a traer a aquellos que no han completado el campo empresa. Una solución es buscar la string vacía:

Código

</blockquote>
Pero sé que tengo más de 1000 estudiantes que aún no han completado este campo, ¿dónde están?

Código

</blockquote>
¿Qué sucede que algunos estudiantes están en blanco, otros son nulos?
Tenga mucho cuidado al crear sus tablas. En general, hacemos lo mismo que con cualquier lenguaje de programación: definimos una variable y no le damos un valor predeterminado. Esto sucede mucho en la orientación a objetos, definimos variables miembro sin valor predeterminado. ¿Resultado?
Algunas personas no editaron el perfil y continúan con el valor predeterminado del banco (NULL). Otros editaron pero no completaron y ahora están en blanco. Y ahora cada query que harás en tu vida tienes que verificar:
sql
select * from Estudiantes where empresa = ‘ ’
  or empresa is null and registro &gt; '20150101';
Peor, además del hecho de que ya hemos visto que OR es un horror en la Tierra, debemos recordar ponerlo entre paréntesis para no dar un resultado incorrecto:
sql
select * from Estudiantes 
where (empresa = ' ' or compania is null)
  and registro &gt; '20150101';
Utiliza el valor predeterminado. Usa default y deja de preocuparte:
sql
alter table Estudiantes modify column empresa
  varchar (200) default ' ' not null;
Ahora está seguro de que todas las consultas solo necesitan verificar valores vacíos. ¿La posibilidad de cometer errores? ¡Mucho más pequeña!
Para continuar desarrollandote, ¡mira nuestros cursos de Data Science aquí en Alura!---
"Funciones de agregación con GROUP BY en SQL, ¿cómo utilizarlas?"
2020-09-23
"Sepa como agrupar todas las lineas de una tabla y retornar apenas una única linea con el resultado de la operación solicitada en SQL"
"alexfelipe"
"alexfelipevieira@gmail.com"
"data-science"

Conocer las funciones predefinidas de SQL nos ayuda a tener más productividad en el día a día, en este artículo mostraré cómo utilizar las funciones de agregación con GROUP BY.
Creé una tabla libros e inserté todas las compras que realicé:
SELECT * FROM libros;

Código


¡Excelente! Los libros que compré están bien ordenados. Hasta puedo hacer queries para verificar, por ejemplo, cuáles fueron los libros que pagué más que R$ 30,00:
SELECT * FROM libros 
WHERE valor &gt; 30;
SELECT * FROM libros;

Código

Sin embargo, ahora quería saber cuánto gasté con todos los libros que pagué más que R$ 30,00. Es decir, ¡quiero hacer una suma! ¿Cómo podemos hacer eso en SQL? Es muy sencillo: ya existen funciones predefinidas por las bases de datos para realizar cálculos. Podemos, por ejemplo, usar la función SUM para sumar:
SELECT SUM(valor) AS total
FROM libros WHERE valor &gt; 30;
total  | 125.70
Estas funciones se llaman <a href="https://en.wikipedia.org/wiki/Aggregate_function">funciones de agregación</a>. Ellas agrupan todas las líneas encontradas y devuelven solo una única línea con el resultado de la operación requerida. En este caso, una suma :)
Conseguí verificar cuánto gasté con libros sobre los R$ 30,00, pero ahora necesito saber ¡cuánto gasté por mes! En mi tabla, las fechas son completas, es decir: tiene día, mes y año. Pero, en este caso, solo necesito del mes... ¿cómo podemos devolver solo el mismo de una fecha? ¡Sencillo! De la misma forma que la base de datos facilitó una función para sumar, ¡también facilita una función para devolver el mes de una fecha! Utilizamos MONTH() que extrae el mes de una determinada fecha:
SELECT nombre, valor, MONTH(fecha_compra) AS mes FROM libros;

Código

Entonces, ahora que sabemos cómo sumar y como tomar el mes, ¡basta juntar las dos funciones! Vamos a hacer nuestra nueva query:
SELECT SUM(valor) AS total, MONTH(fecha_compra) AS mes FROM libros;
total  | 125.70
Oye, ¿solo mes 12? ¿Y R$ 202,40 solo en el mes 12? Estoy casi seguro que no fue tanto así. Filtremos esta query para que devuelva solo los libros comprados en el mes 12:
SELECT SUM(valor) AS total, MONTH(fecha_compra) AS mes FROM libros WHERE MONTH(fecha_compra) = 12;
total: 135.60
mes: 12
¿Qué está pasando? ¿No podemos exhibir más de una línea con una función de agregación? Muy raro eso. Como vimos, las funciones de agregación en principio devuelven solo una única línea. Lo que tenemos que hacer es informar que queremos agrupar las líneas por mes, ¡sumarlas! Para ello utilizaremos la instrucción GROUP BY informando qué columna queremos agrupar:
SELECT SUM(valor) AS total, MONTH(fecha_compra) AS mes 
FROM libros 
GROUP BY MONTH(fecha_compra);
total: 66.80
mes: 1
total: 135.60
mes: 12
¡Excelente, mira que ahora podemos comprobar cuanto se ha gastado al mes!
Vimos que cuando usamos funciones de agregación (como SUM()) por estándar el blanco nos devuelve solo una única línea con el resultado de todas las líneas que se encontraron. Pero, si queremos que la función agrupe por diferente de otra columna (como el mes), debemos informar que esta columna será agrupada usando la instrucción GROUP BY.
Entonces, ¿le gustó la función SUM() y el GROUP BY? ¿Estás listo para usarla en su base de datos? Para continuar desarrollandote, ¡mira nuestros cursos de Data Science aquí en Alura!---
"Google Colab: ¿qué es y cómo usarlo?"
2020-10-25
thiago-gsantos03
"data-science"
"Google Colab es una poderosa herramienta utilizada por científicos de datos de todo el mundo, ¡venga a conocer más sobre ella en este artículo!"

En este artículo entenderemos qué es Colab, cómo funciona, cómo abrir archivos externos y cómo escribir código y textos en markdown. <a href="https://colab.research.google.com/notebooks/intro.ipynb">Google Collaboratory</a>, cariñosamente llamado Colab, es un servicio gratuito de nube alojado por Google para fomentar la investigación sobre Aprendizaje de Máquina e inteligencia Artificial.
Ahora que tenemos una introducción a lo que es colab, veamos cómo usarlo. Similar al famoso <a href="https://jupyter.org/">jupyter notebook</a>, el Colab es una lista de celdas que pueden contener textos explicativos o códigos ejecutables y sus respectivas salidas.
¿Cómo usar el Colab?
Lo primero que debemos hacer para utilizar el google Colab es acceder a la siguiente dirección:
<a href="https://colab.research.google.com/notebooks/intro.ipynb">https://colab.research.google.com/notebooks/intro.ipynb</a>
Pronto seremos dirigidos a un notebook llamado Welcome to Colaboratory:

imagen

Este notebook explica algunas características del Colab y le muestra cómo empezar (recomiendo leer). Algunas de las principales características del Colab son:

Dado que se ejecuta en una máquina de Google, no es necesario realizar ninguna configuración.
Google proporciona acceso gratuito a las GPU.
Es fácil de compartir, como cualquier archivo en el drive.

Ok, he leído y entendido qué es Colaboratory, pero ¡quiero crear mi propio notebook! Para hacer esto, debemos hacer clic en &gt;File, en la parte superior izquierda, y enseguida en &gt;New Notebook. Vea la figura siguiente:

imagen

Después de este proceso, si no has iniciado sesión en una cuenta de Google, aparece la siguiente ventana emergente (pop-up):

imagen

Haga clic en OK para ir a la pantalla de inicio de sesión de gmail. Si no tienes una cuenta gmail, pulsa en Crear una cuenta y sigue los pasos de registro:

imagen

Listo, ahora tienes acceso a tu google colab. ¡Hagamos algunas pruebas en este notebook!
Tu primer código en el Colab.
Estando en tu notebook, quiero explicar los tres puntos destacados en la siguiente imagen:

imagen

Empecemos por el corte 01, aquí tenemos lo que llamamos una celda. La celda es donde escribes códigos o texto. Comencemos con la celda de código, que puedes probar ahí en tu notebook. Así que para empezar escribe en 01:
print(“Hello World”)
Para ejecutar este código tenemos algunas opciones: puedes hacer clic en el signo de reproducción al comienzo de la celda o puedes usar el acceso directo SHIFT+ENTER (hay varios otros atajos para ejecutar una celda, puedes encontrar detalles en este <a href="https://colab.research.google.com/notebooks/basic_features_overview.ipynb">documento</a>).
Tenga en cuenta que cuando se ejecuta, aparece impreso Hello World. Ahora probemos con otro código, ¿qué tal si realizamos una operación y almacenamos ese valor en una variable? Usa tu notebook para ejecutar el siguiente código:
suma_dos_numeros = 1232 + 2314
Cuando se ejecuta, a diferencia de la celda anterior, no se imprime nada. Esto se debe a que la asignación de variables no tiene retorno en python. Otro punto que debes haber notado es que, al ejecutar la primera celda, el tiempo de ejecución era mayor, ya que, al ejecutar por primera vez, el colab necesita crear una máquina en los servidores de google, por lo que ese tiempo extra es solo para la creación de esta máquina.
Hasta ahora, hemos creado solo celdas de código, pero como dijimos, los notebooks nos permiten mezclar estas celdas de código y texto en formato markdown. En la figura anterior tenemos el corte 02, estos "botones" son para agregar nuevas celdas a su notebook.
+ Code agrega celdas de código y +Text agrega celdas en las que puedes ingresar texto con las configuraciones markdown. Esta característica nos permite desarrollar explicaciones e informes sobre los propios notebooks. Pruébelo en tu notebook, ¡crea algunos textos en formato markdown!
Ya sabemos cómo escribir código, que será primordial a la hora de realizar análisis de datos. También aprendimos que es posible escribir textos, lo que nos ayuda a sacar conclusiones y elaborar informes. Sin embargo, para que el Colab se convierta en una herramienta funcional, falta el elemento principal: la base de datos.
Tenemos varias formas de obtener acceso a una base de datos, incluido el uso de una biblioteca que lee un archivo directamente desde un URI, por ejemplo. Aquí hay una sugerencia sobre cómo podemos leer el dataset MovieLeans guardado en el github de Alura:
import pandas as pd
base_de_datos = pd.read_csv(“https://raw.githubusercontent.com/alura-cursos/formacao-data-science/master/movies.csv”)
Entonces, tenemos el dataset guardado en la variable base_de_datos y podemos explorar los datos.
La forma que presentamos es útil cuando tenemos datos públicos, pero a menudo la base de datos está en nuestra computadora y no podemos hacerla disponible en Internet. ¿Cómo podemos hacer para enviar estos datos al Colab?
En el punto de destaque 03, última figura, tenemos un icono de carpeta, haga clic en él. Vea en la siguiente imagen, se abre una view que muestra una estructura de directorios.

imagen

Si explora las carpetas, encontrará que es muy similar a la estructura de un sistema operativo Linux.
En la parte superior de la view tenemos algunas opciones: si haces clic en input, puedes elegir enviar un archivo desde tu máquina a google. De esta forma, puede acceder a la base de datos pasando como parámetro la función pd.read() la ubicación del archivo, por ejemplo:
base_de_datos = pd.read_csv ("base_de_datos_que_subiste.csv")
La desventaja de este método es que al cerrar y acceder tu notebook en otro momento, debes realizar nuevamente la inserción de los datos, un proceso que puede tomar mucho tiempo. Otra forma de acceder a los datos es guardarlos en tu Drive y accederlos directamente desde el notebook, para hacerlo haga cloc en Mount Drive, que aparece en la imagen anterior.
Conclusión
Vimos que usar el google colab hace con que sea simple nuestro ingreso al área de datos, después de todo no necesitamos instalar nada, no necesitamos realizar ninguna configuración ni tener una máquina potente. Google le ofrece todo esto listo y con calidad, ¡basta con acceder a un notebook y comenzar la diversión!
Ahora que conoces las principales funcionalidades de los notebooks y sabes utilizar el colaboratory, ¿qué tal crear tu análisis en el colab y compartirlo con nosotros en las redes sociales?
Te gustó este tema y quieres profundizarte en la ciencia de datos,  ¡Mira nuestros cursos de Data Science aquí en Alura!---
"Guía de Unidades en el CSS"
2020-10-24
"En esta guía cubriremos todas las unidades actuales presentes en el CSS. También veremos casos de uso interesantes."
"paulo-scalercio"
"paulo.scalercio@caelum.com.br"
"front-end"

Cuando comenzamos a ocuparnos del desarrollo web, más específicamente HTML y CSS, es muy común que nos quedemos atrapados con las herramientas que ya conocemos y con las que estamos familiarizados.
Sin embargo, esto puede convertirse en un problema en virtud del gran crecimiento de la Web y, con ello, a la aparición de nuevos problemas y, consecuentemente, nuevas soluciones. Esta es una situación común cuando se trata de unidades de medida en el CSS, debido a la gran variedad, terminamos dejando de lado parte de las existentes y, de hecho, no usamos toda la potencia que tenemos a mano.
Hay algunas unidades a las que probablemente estés acostumbrado, ¡como el famoso píxel! En esta publicación, abordaremos todas las unidades de medida actualmente vigentes y cómo nos pueden ayudar durante tu jornada como desarrollador web. Antes de seguir, debemos entender cuál es la diferencia entre medida absoluta y medida relativa.
Medidas Absolutas
Estas son las más comunes que vemos a diario. Son medidas que no están referenciadas a ninguna otra unidad, es decir, no dependen de un valor de referencia. Son unidades de medidas definidas por la física, como el píxel, centímetro, metro, etc. …
Estas medidas son fijas y no cambian según las especificaciones del dispositivo. Este tipo de medición está indicado para cuando conocemos a la perfección las características físicas y las configuraciones de las medias donde se exhibirán nuestros proyectos.
<em>Ya te lanzaré aquí un spoiler, ¿En el "mundo real" conoceremos toda la información de todos los dispositivos? ¡Sostén ese pensamiento!</em>
Medidas Relativas
Estas son las que normalmente no estamos acostumbrados. Estas medidas se calculan en base a otra unidad de medida definida, por ejemplo em y rem (Veremos más sobre estas dos medidas a lo largo de la publicación). El uso de ellas es más apropiado para que podamos hacer ajustes en diferentes dispositivos asegurando un layout consistente y fluido en distintas medias.
Debido a que estas medidas las calcula el navegador en base a otra unidad, suelen ser bastante flexibles. Es decir, podemos tener resultados diferentes según el entorno.
Para empezar a caminar con las medidas existentes, opté por empezar con las medidas absolutas, ya que habitualmente estamos más familiarizados con éstas. Como diría mi amigo Flávio Almeida, empezado bien, ¡mitad hecho!
Medidas absolutas en el CSS
Píxeles (px)
Probablemente ya conozca o haya oído hablar de este chico llamado Píxel. Píxel no es más que los pequeños puntitos luminosos en la pantalla de tu monitor, móvil, televisión, etc. ... Por lo tanto, ¡el píxel es el elemento más pequeño en un dispositivo de exhibición!
Esta es una medida muy famosa para los diseñadores web, la mayoría de los desarrolladores web utilizan el píxel como la unidad principal de sus proyectos.
Un detalle que pocos conocen es que, de hecho, el píxel del CSS NO es realmente un píxel de la pantalla del dispositivo (hardware), pero lo que llamamos <a href="https://alistapart.com/article/a-pixel-identity-crisis/">píxel de referencia</a> que suele ser más grande que el píxel real. Lo que termina convirtiéndolo en una medida abstracta donde es necesario controlar el mapeo de este píxel de referencia al píxel de hardware (¡sucede detrás de las cortinas!).
La definición del píxel de referencia en el CSS es el ángulo visual (0.0213 deg) de un píxel en un dispositivo con una densidad de 96 dpi a una distancia de un brazo del lector (28 pulgadas), vea la imagen a continuación:

imagen

El beneficio de este píxel de referencia es que tiene en cuenta la proximidad de la pantalla, al usar un móvil que tengamos cerca de nosotros, el píxel de referencia será similar en tamaño al de un monitor más alejado de nosotros, por ejemplo.  
Por lo tanto, no existe ese cuento de que el píxel sea "perfecto". Solo si estamos desarrollando un sitio web para un mismo dispositivo, con un mismo tamaño de pantalla y que usa el mismo navegador, pero, ¡sabemos que no es así como funciona en el mundo real!
Un punto interesante para comentar es que, recientemente el boostrap 4 dejó de usar PX y migró a REM, además, el uso del píxel nos da la sensación de que es lo mismo que el píxel del hardware, lo que puede causar confusión a los nuevos desarrolladores.
Uno de los aspectos más importantes para estos Diseñadores Web es la escalabilidad y adaptabilidad de un layout, es decir, a medida que las unidades aumentan de forma predecible y razonable, su disposición debe poder adaptarse a estos cambios.
Por un lado, la idea de mantener el mismo aspecto (tamaño) en diferentes dispositivos puede parecer atractiva (¡cuidado con el píxel de referencia!), pero por otro lado, tenemos consecuencias negativas cuando estamos tratando con dispositivos de baja resolución (blurry rendering).  

imagen

Points (pt)
La siguiente unidad es Point. Esta unidad es definitivamente más conocida por los diseñadores, especialmente aquellos que estudian tipografía.
Esta medida se usa generalmente en propiedades relacionadas con la fuente de su proyecto. Su abreviatura está marcada con pt y su uso no es tan común, probablemente verás esta unidad muy raramente.
En general, se espera que esta medida se utilice en hojas de estilo para impresiones, cuando necesite estar seguro del tamaño de fuente utilizado. ¡No se recomienda para la estilización en pantalla!
in (inches/pulgadas)
Pulgada o inch en inglés, es otra unidad de medida que conocemos del mundo de las medidas absolutas; normalmente las vemos cuando queremos comprar un nuevo televisor o monitor, pero esa unidad también existe en el mundo Web.
Aunque existen, no se suelen utilizar en proyectos, ya que no tienen ningún uso práctico (podemos conseguir los mismos resultados utilizando otras unidades).
Centímetro y Milímetro (cm/mm)
Nosotros, que hemos adoptado el sistema métrico, conocemos bien estas dos medidas, muy utilizadas en la vida cotidiana. Aunque es muy común, tanto el centímetro como el milímetro se usan poco en el CSS. Así como el pt, se espera el uso de estos dos para hojas de estilo para impresiones (medidas más precisas), evitando que se apliquen a las exhibiciones en pantalla.
Paica (pc)
También es una unidad poco utilizada en el mundo web, la Paica también llega al CSS, heredada de la tipografía. Por no ser una unidad muy conocida termina siendo olvidada, pero siempre es importante conocer todas las herramientas que tenemos a nuestra disposición. La relación entre unidades absolutas es:
<em>1 in = 2,54 cm = 25,4 mm = 72 pt = 6 pc</em>
Medidas Relativas en el CSS
Ems (em)
Nuestra primera unidad relativa es muy famosa en el mundo CSS. Difícilmente encontrarás algún navegador que no admita esta medida, que ha estado presente desde el principio. Incluso para IE, tendríamos que usar la versión anterior a la 3.0 para tener algún problema.
Este es definitivamente uno de los puntos que hacen que el em sea muy popular. El segundo punto es sin duda, la facilidad para crear layouts fluidos y responsivos.
<em>Pero, ¿cómo funciona este tal </em><em>em</em><em>?</em> 
Esta unidad cambia a los elementos hijos de acuerdo con el tamaño de fuente (font-size) del elemento padre, así que aquí vamos. Digamos que tenemos el siguiente html, lo que me permite la licencia poética para usar la tag style:

Código

Arriba, tenemos una div padre donde estoy definiendo un font-size de 16px, dentro de ese div, tenemos una única div hija. Como había mencionado, el tamaño definido para la fuente afectará en el em de los elementos hijos.
En este caso, para la div más interna (id = hijo), 1em será igual a 16px, siguiendo la lógica, 2em será igual a 32px y así sucesivamente. ¡También podemos poner valores como 1.5! En nuestro caso, 1.5em será igual a 24px. Al expresar tamaños como margin y padding utilizando em, esto significa que estarán relacionados con el tamaño de fuente del elemento padre.
Por lo tanto, de acuerdo con el tamaño de la fuente utilizada en un determinado elemento, ¡los elementos hijos cambiarán de tamaño para obedecer la referencia a ese tamaño de fuente!
Una técnica muy utilizada consiste precisamente en hacer uso de este poder del em componentizando nuestros elementos. La idea es que al cambiar el tamaño de fuente del elemento padre hace que todo el componente se modifique y cambie de tamaño en función de este nuevo valor.
A pesar de ser divertido, la razón por la que usamos esta técnica no es para que el usuario tenga un slider y cambie el tamaño de la fuente jajaja. Sino para facilitar el mantenimiento del componente en su conjunto, sin tener que sufrir cambios de valores de todas las partes del componente. Genial, ¿verdad?
El último punto que debemos tener en cuenta al usar el em es que cuando usamos esta medida, tenemos que considerar el font-size de todos los elementos padre. Por ejemplo, si tuviéramos una tercera div más interna en nuestro ejemplo anterior y configuramos el tamaño de fuente en 2em, en este caso, estos 2em serían 64px, ¡una vez que el font-size del elemento padre se ha establecido en 32px (2em)! ¿Atrapaste la idea?
Esto tiende a complicarse cuando hablamos de 5, 6, 7 divs anidadas, ¡probablemente no será muy entretenido calcular esto! Pero, la buena noticia es que tenemos una unidad que nos ayuda a resolver este pequeño problema.
Rems (rem, "root em")
El REM viene como sucesor del EM y ambos comparten la misma lógica operativa (font-size), pero la forma de implementación es diferente.  Mientras que el em está directamente relacionado con el tamaño de fuente del elemento padre, el rem está relacionado con el tamaño de fuente del elemento root (raíz), en este caso, la tag.
El hecho de que el rem se relaciona con el elemento raíz soluciona ese problema que teníamos con varias divs (elementos) anidados, ya que no habrá esta "herencia" de tamaños, ¿recuerdas? Es decir, no necesitaremos tener dolor de cabeza al tener que realizar cálculos, ya que estamos basados en la etiqueta raíz.
Por ejemplo, sabemos que la tag html es la tag raíz de todo documento html. Dicho esto, si definimos que el font-size de este elemento será de 18 px, por lo que 1rem = 18px, 2rem = 36px y así sucesivamente... Por lo general, los navegadores especifican el tamaño de fuente predeterminado para el elemento root (raíz), 16px, ¡así que guárdelo en su corazón! Aun siendo esta unidad más tranquila para trabajar, no se usaba mucho para el diseño responsivo, que al principio puede sonar un poco extraño...
La razón de esto es el apoyo a esta medida. Chrome y Firefox son compatibles sin problemas, así como Opera y Safari; sin embargo, en el pasado, la mayoría de los usuarios usaban IE, más específicamente IE 8, y este navegador no manejaba muy bien los rems, esto significaba que los desarrolladores tenían que elegir una unidad diferente, en muchos casos, el em.
Como dije anteriormente, el valor base es de 16px, y esto puede terminar causandonos dificultades para encontrar algunos tamaños estándar que se usan habitualmente. Por ejemplo, ¿cómo haríamos para lograr un tamaño de 10px utilizando rem? Necesitamos calcular.
BASE 16PX
10px = 0.625rem
12px = 0.75rem
14px = 0.875rem
16px = 1rem
18px = 1.125rem
y así sucesivamente, realmente no son números muy "amigables" o convenientes. Sin embargo, podemos usar un pequeño truco para ayudarnos (62.5%).

Código

Tenga en cuenta que, de esta manera, ¡el valor de píxel siempre será el valor definido en rem por 10! Se vuelve más conveniente, ¿de acuerdo?
Si bien esto suena como una buena idea, debemos tener cuidado con estos enfoques, ya que lo obligará a reescribir todos los font-size de tu sitio, ¡así que tenga cuidado!
Hay una tercera opinión sobre todo esto. Esta solución usa px, em y rem de una manera bien definida. La idea es definir el font-size del elemento root en píxeles, módulos usando rem y elementos interiores a los módulos usando em, facilitando la manipulación del tamaño global que naturalmente escalará el tamaño de los módulos (usando rem) y estos a su vez, escalarán los elementos interiores (que usan em y se refieren al elemento padre). 
Porcentaje (%)
A pesar de no ser una unidad de medida, el porcentaje se usa a menudo cuando se trata de un layout responsivo y fluido, por lo que no podría dejarlo pasar.
El porcentaje nos permite crear módulos que siempre serán readaptados para ocupar la cantidad especificada. Por ejemplo, si definimos un elemento que tiene un tamaño de 50%, independientemente del dispositivo en cuestión, este módulo ocupará siempre la mitad del espacio que le corresponde (si se encuentra dentro de cualquier otro elemento).
Tenga en cuenta que si cambiamos el tamaño de la div contenedor, ¡el elemento dentro de él cambiará de tamaño para que siempre ocupe el porcentaje especificado en el CSS!
También tenga en cuenta que el slider está cambiando tanto el ancho como la altura del elemento, pero si cambiamos cada uno por separado, ¡también funcionará! Dado este ejemplo, podemos decir que el porcentaje se comporta algo similar a nuestro ya conocido em, ya que se relaciona directamente con el tamaño de la propiedad del elemento padre.
Por lo tanto, al trabajar con el porcentaje, tenemos el mismo problema que teníamos con el em, cuantos más elementos anidados, más complicado será definir exactamente el tamaño, ¡así que ten cuidado al usarlo!
Ex
Puede que nunca hayas oído hablar de esta unidad del CSS, pero existe. A diferencia de la forma en que EM y el REM funcionaban, esta unidad no está relacionada con el tamaño de la fuente (font-size), sino con qué fuente se está utilizando en ese momento (font-family), más específicamente con el tamaño del carácter x de esta fuente en cuestión (x-height).
¿Cómo sabe el navegador este valor? Este valor puede venir directamente con la fuente, el navegador puede medir el carácter en minúscula (lower case) y si estos dos no funcionan, el navegador estipula un valor de 0.5em para 1ex.  

imagen

Con eso, si cuando cambiamos el tamaño de fuente (depende del elemento) el em y el rem cambian, de esta vez cuando cambiamos completamente la fuente, el ex cambiará. El uso de esta unidad está más presente en los ajustes tipográficos, dándonos un control más preciso cuando el estándar definido para algunas tags no encaja correctamente en nuestro layout.
Ch
También una unidad poco conocida, la ch (carácter unit) se define en la documentación como la "medida avanzada" del ancho del carácter cero ("0").
Existe una vieja discusión donde hubo mucho debate sobre esta unidad y lo que realmente sería una "medida avanzada", <a href="http://meyerweb.com/eric/thoughts/2012/05/15/defining-ch/">puedes acompañar aquí</a>. La idea es que un elemento con, por ejemplo 100ch de ancho puede contener una string de 100 caracteres de esa fuente en particular, si esa fuente es monospace (todos los caracteres tienen el mismo tamaño).
Es común encontrar definiciones que dicen que la frase anterior se aplica a cualquier fuente, pero esto es incorrecto. Como mencioné anteriormente, la regla de 1ch = 1 carácter se aplica sólo si la fuente utilizada es monospace (ancho fijo). Fuentes con ancho variable, cualquier carácter puede ser más ancho o menos ancho que cero ("0"), como podemos ver en la siguiente imagen:  

imagen

Como podemos analizar, la tipografía Courier (monospace) obedece a la regla anterior, ¡pero las otras dos no! Lo que podemos tomar después de las observaciones es que normalmente 1ch es 20% - 30% más amplio, pero esto no es una verdad absoluta y debe observarse para cada fuente que desees aplicar. ¡Así que ten cuidado con el uso!
Vw (viewport widht)
Esta medida es parte de las medidas más actuales y futuras del CSS. Viewport units.
Como está escrito en el título, vw significa viewport width, pero ¿qué es viewport?
Viewport no es más que el área visible de una página web para su usuario, este viewport puede variar según el dispositivo, siendo más pequeña en móviles y más grande en computadoras desktops.
En el pasado, cuando no existían tabletas y teléfonos móviles capaces de acceder a sitios web, todas las páginas web estaban diseñadas para una pantalla de computadora, con un tamaño fijo y diseño estático. Con la llegada de estos dispositivos móviles, estas páginas eran demasiado grandes para mostrarse en estos dispositivos, lo que dificultaba mucho la navegación.
La primera solución vino de los navegadores de estos dispositivos, adoptaron el comportamiento de quitar el zoom para que todo el sitio quepa en la pantalla del dispositivo, definitivamente no era lo ideal, pero una solución rápida. En HTML5, se introdujo una forma para que los desarrolladores pudieran cambiar la viewport a través de la tag, solucionando este problema de usabilidad relacionado con dispositivos móviles, ¡pero ese es un tema para otra publicación!
Volviendo a nuestro querido vw, esta unidad está directamente relacionada con el ancho de la viewport, donde 1vw representa 1% del tamaño del ancho de esa área visible. La diferencia entre vw y el % es muy similar a la diferencia entre em y rem, dónde el % es relativo al contexto local del elemento y el vw es relativo al tamaño total del ancho de la viewport del usuario.
Vh (viewport height)
Esta unidad funciona de la misma forma que la vw, pero esta vez, la referencia será la altura y no el ancho. Hay varios ejemplos prácticos e interesantes del uso de estas dos unidades. Puedes ver algunos usos en este <a href="https://css-tricks.com/fun-viewport-units/">enlace</a>.
Vmin (viewport minimun)
Esta unidad también se relaciona con las dimensiones de la viewport, pero con un pero. Anteriormente cuando vimos vh y vw teníamos que elegir si nos gustaría basarnos en la altura (vh) o en el ancho (vw) de la viewport.
A diferencia de los anteriores, el vmin usará como base la dimensión más pequeña de la viewport (altura x ancho), veamos el ejemplo.
Imagine que estamos trabajando con una viewport de 1600 px de altura y 900 px de ancho. En ese caso, 1vmin tendrá el valor de 9px (¡1% de la dimensión más pequeña!); si tenemos 100vmin, ¡esto será igual a 900px! Interesante ¿verdad?
En el caso anterior, la dimensión más pequeña era el ancho, pero si tuviéramos 300px de altura y 1400px de ancho, ¡nuestro valor de referencia sería 300px! ¡Siempre la menor dimensión!
Vmax (viewport maximum)
Siguiendo la misma base lógica que la unidad anterior, el vmax tendrá como valor de referencia la dimensión más grande de la viewport. Es decir, usando el mismo ejemplo, si tenemos 1600 px de altura y 900 px de ancho,¡1vmax será equivalente a 16px!
En el segundo ejemplo, ocurrirá la misma inversión, con 300px de altura y 1400px de ancho, 1vmax será equivalente a 14px. Esta vez, ¡siempre será la mayor dimensión!
¡¡Alerta!!
En la versión 9.0 del IE, el vmin se implementó con un nombre distinto (vm). Algunas versiones del IE aún no ofrecen soporte al vmax, en las nuevas versiones esto se ha solucionado.
Algunas plataformas como Windows tienden a ser inconsistentes en la forma en que cuentan el tamaño de la barra de desplazamiento de los navegadores (disminuye o bi la viewport). Siempre verifique el soporte de estas medidas, siempre tenga <a href="https://caniuse.com/#search=vw">este enlace</a> en el cinturón de herramientas.
Conclusión
Como podemos ver, hay varias unidades que podemos usar en el mundo web, pero siempre surgen aquellas preguntas como ¿cuándo tengo que usarlas? ¿Cuál es la mejor? etc …
No hay una respuesta correcta o incorrecta a estas preguntas, lamentablemente no tenemos una regla de oro para todas las situaciones. El uso de estas unidades depende de varios factores como el equipo, la preferencia, la familiaridad, etc.
Sin embargo, es importante que tú, como desarrollador web, tengas todas estas herramientas en tu cinturón, ya que nunca sabemos cuándo tendremos que utilizarlas.
Definitivamente la inclusión de las unidades de viewport fue positiva para la web cuando se trata de un diseño flexible, ¡depende de ti comenzar a ponerlas en uso durante tú día a día!
Además, espero sinceramente que esta publicación haya agregado algo de conocimiento y facilitado su jornada hacia el saber.
Si te interesa este tema, aquí en Alura tenemos capacitaciones de front-end, para principiantes y para aquellos que ya son desarrolladores web. En ellas, verás cómo programar en Javascript, HTML y CSS para construir sitios web.---
"Intercambiando caracteres de una String en Java"
2020-10-26
"Aprenda como intercambiar caracteres de String en Java"
"mario.alvial"
"mario.alvial@alura.com.br"
"programacao"

Tenemos un registro que recibe datos como número de NIT y el código postal del usuario, pero estamos teniendo ciertos problemas en nuestro sistema, ya que todos los usuarios registrados están ingresando sus datos de manera diferente, como se muestra en la siguiente tabla:

Código

El NIT de cada usuario se envía en varios formatos y nuestro sistema está programado para recibir solo los dígitos del documento, sin ningún "." o "-".
Algunas direcciones no se encuentran, porque para buscar la dirección del usuario es necesario que el código postal no tenga ningún formato, es decir, solo tenga los dígitos.
Necesitamos estandarizar esto para que todos se salven de la misma manera.
Para ello crearemos un método que toma los datos del usuario y los formatea, eliminando todo lo innecesario, antes de que sean enviados a alguna lógica de negocio.
Todos los datos que recibiremos serán del tipo String, así que creemos un método que reciba una String, lo formatea y lo devuelve:
public static String formateaDatos(String dato){
   //lógica de formato aqui
   return dato;
}
Comencemos con el NIT. Un NIT se compone de 11 dígitos, que pueden estar separados por "." y "-". Entonces, ¿cómo eliminamos estos caracteres no deseados?
Método replaceAll()
Necesitamos deshacernos de los caracteres no deseados sin quitar ningún dígito o cambiar el orden de los caracteres en nuestro String. Para eso podemos usar el método <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#replaceAll-java.lang.String-java.lang.String-">replaceAll()</a> de clase String.
Este método nos permite reemplazar todas las ocurrencias del carácter que pasamos por otro carácter.
Así que primero vamos a eliminar todos los ".". Así tenemos:
public static String formateaDatos(String daro){
   dato = dato.replaceAll(".","");
   return dato;
}
Tenga en cuenta que el primer argumento que pasamos fue ".", porque es el carácter que queremos reemplazar. Después, pasamos una String vacía representada por las comillas dobles juntas.
Con eso estamos diciendo que cualquier punto que encuentre en nuestra String será reemplazado por nada, por lo que será eliminado.
Para probar, llamemos a este método insertando cualquier NIT:
public static void main(String[] args) {
   System.out.println(formateaDatos("157.108.950-08"));
}
Como resultado tenemos:

imagen

Nada... ¿Dónde está nuestra String formateada? Esto ocurrió porque el replaceAll() también acepta expresiones regulares (regex).
En este caso, consideró el punto como una expresión regular. Este regex representa cualquier carácter excepto \ n, que representa una nueva línea. Con eso todos los caracteres de nuestra String se han eliminado.
Necesitamos hacer con que Java interprete el punto como solo un punto y no como un regex, para eso agregaremos dos barras invertidas antes del punto, esto indica al compilador que el punto tiene un significado diferente al estándar, que en este caso, es un regex. Pronto considerará el punto como un carácter normal, así:
public static String formateaDatos(String dato){
   dato = dato.replaceAll("\\.","");
   return dato;
}
Probemos de nuevo y veamos qué pasa:

imagen

Lo hicimos. Ahora hagamos lo mismo con "-". Esto es más simple porque el guión no coincide con ningún regex. Entonces Java no se confundirá. Solo tenemos que poner un replaceAll() más:
public static String formateaDatos(String dado){
   dato = dato.replaceAll("\\.","");
   dato = dato.replaceAll("-", "");
   return dato;
}
Probemos con el mismo NIT:

imagen

Listo, logramos formatear nuestro NIT y también formateamos el CP.
Si pensamos en un CP tiene esta estructura: "13508-970". Entonces cuando entra en el segundo replaceAll() se eliminará el guión.
Probemos esta teoría insertando un CP verdadero:
public static void main(String[] args) {
   System.out.println(formateaDatos("13508-970"));
}
Y en nuestra consola:

imagen

Problemas con nuestra resolución
Parece estar bien, ¿verdad? Pero un usuario es imprevisible. Por ejemplo, ¿qué pasaría si envío un código postal con "/" o alguna letra? Veamos:
public static void main(String[] args) {
   System.out.println(formateaDatos("13/508-970"));
}
Resultado:

imagen

No manejamos este caso, ¿qué pasa si el dato contiene letras? ¿Tiene otro símbolo extraño? Tendremos que hacer un replaceAll() para cada carácter que pueda burlar nuestro formato?
Date cuenta de que nuestro plan se está volviendo inviable. Es muy difícil poder cubrir todos los casos que pueden romper nuestro método de formateo. Quizás estemos pensando mal.
Lidiando con datos imprevisibles
¿Qué tal si en lugar de decir los caracteres que no permitimos, decimos los caracteres que permitimos para nuestro método replaceAll()? Esto eliminaría todo lo que fuera innecesario o inválido.
Pensando en un NIT o un CP, ¿qué permiten tener? Solo dígitos, ¿correcto? Entonces, hablemos con el replaceAll() que queremos reemplazar todo lo que no sea un dígito por nada, es decir, queremos quitar todo lo que no sea un dígito:
´´´
public static String formateaDatos(String dato){
   return dato.replaceAll("[^0-9]+", "");
}
´´´
Este regex representa cualquier cosa que no sea un número del 0 al 9. Para probar, insertaremos un NIT lleno de errores, con ".", ”-”, ”/” y letras:
público estático vacío principal(String [] args) {
   System.out.println (formateaDatos ("15 / * 7.1DAS08.950-08 / A?% D"));
}
Nuestro método nos devuelve:

imagen

¡Funcionó! Pudimos hacer nuestro formato de método correctamente.
Conclusión
El formateo de datos es muy común. Se debe tener cuidado al tratar con datos que provienen del usuario, ya que nunca se sabe lo que envía el usuario. Además, al involucrarse en un problema como este, donde cada vez es más difícil crear o hacer el mantenimiento en una funcionalidad, es muy válido detenerse y ver el problema desde otro ángulo, como fue nuestro caso.
Es muy importante saber construir código limpio y poder percibir un problema en nuestro propio código. En Alura tenemos toda una formación con varios cursos de Java, desde lo más básico con el lenguaje hasta conceptos más avanzados como clases, poliformismo y herencia. Pero no te asustes con esos términos, ellos son abordados con un proyecto práctico que junto con nuestra metodología y didáctica hacen que el contenido sea mucho más fácil de ser aprendido.---
"La carrera de programador: ¿qué curso tomar primero?"
2020-10-22
"¿Qué idioma estudiar? ¿Qué curso tomar primero? Consulte este artículo para obtener consejos para aquellos que recién se inician en el mundo de la programación."
"guilherme-silveira"
"guilherme.silveira@caelum.com.br"
"programacao"

Una de las preguntas que más me gusta responder es ayudar a alguien a encontrar un primer camino en su carrera de desarrollo de software.
Me gusta programar, empecé a los 9, y siempre pude tener a mi hermano Paulo, fundador de Caelum y de GUJ, como guía. Pero, ¿y quién no tuvo esta suerte? Intento repasar un poco de lo que he aprendido con él en los últimos 25 años.
Tenemos Java, .NET, PHP, Ruby, Python, Javascript y otros más. El mercado de desarrollo más grande hoy en día es web (los sitios web y las aplicaciones móviles utilizan aplicaciones web) y todos estos lenguajes encajan en este nicho.
Paso 1 - ¿Aún no sabes programación?
El primer paso es un curso de lógica, pero no de diagramas, evite cursos de diagramas puros. Ni tu ni yo vemos diagramas a diario, en el mundo real. No es natural. Repito: evite aprender a través de diagramas sin práctica de código - son válidos, pero limitados.
Así que vamos a aprender lógica directamente en la práctica.
Empiece con algo real al aprender lógica al desarrollar un juego de adivinanzas en Ruby, un juego del ahorcado, y terminando con un curso donde creamos un Pacman en modo texto. No solo verás conceptos de lógica, sino que comprenderás cómo funciona la computadora y los desafíos de crear un programa en el mundo real.
¿Prefieres otra alternativa? Aprenda lógica con Javascript para resolver problemas reales. Y enseguida refuerce esta base al crear un juego que involucre gráficos también con Javascript.
Paso 2 - La base para la web
Para los que ya saben programar o los que ya hicieron estos cursos anteriores, la gama de oportunidades se abre mucho.
Aprenda ahora lo básico de HTML y CSS construyendo un sitio en la práctica, y enseguida lo básico de base de datos relacionales con MySQL nuevamente resolviendo problemas reales.
Paso 3a - Programar y ganar dinero rápido y desde casa
¿Quieres empezar a trabajar de inmediato desde casa, creando algunos sitios web para familiares o conocidos? Si hiciste el curso de lógica en Ruby, ya puedes aprender Ruby on Rails 5 para implementar un sistema real.
Si hiciste los cursos de lógica en Javascript, puedes aprender PHP y Mysql con fundamentos para crear un sistema Web cookies, sesiones y más recursos.
Tanto Ruby on Rails como PHP son ampliamente utilizados en este nicho.
Paso 3b - Conseguir una pasantía en el mercado
Existe un gran mercado de puestos vacantes para desarrolladores Java y C#. Por supuesto, la mayor demanda es de desarrolladores con más experiencia, pero aun así la demanda es muy alta.
El siguiente paso ahora que ya comprende cómo funciona la creación y los problemas de desarrollar un sitio web es ingresar al mundo Java o C#.

Empiece con los primeros pasos en Java.
Aprenda orientación a objetos con Java.
Entienda las principales API y bibliotecas de base.
Aprenda los fundamentos de C#.
Entienda Orientación a Objetos con C#.
Continúe con tópicos más avanzados de C#.

Ambos caminos son más largos que los de Ruby, PHP e incluso Python, y estos tres cursos presentan la base del lenguaje. Por supuesto, todos los demás lenguajes también tienen puestos vacantes en el mercado, pero según el google trends la demanda por estos dos aún es muy fuerte y es lo que recomiendo.
Paso 4 - Crear un juego en el mundo real
Crear un juego en el mundo real, en el mundo físico, es una tarea muy divertida que hacemos con el Arduíno. El lenguaje está basado en C, así que si quieres seguir por ese lado, primero aprenda lógica y programación con la introducción a C, avanzando en el lenguaje C, y recursos avanzados del lenguaje.
Paso 5 - Cómo seguir
No quería dejar el siguiente paso en blanco... ya aprendí un lenguaje y ya estoy programando para la web. Como todos nuestros cursos y libros, es esencial entender y utilizar buenas prácticas de código. Además, es muy importante tener una buena práctica de estudio y no dejar de estudiar.
Ahora estás libre para seguir el camino que has elegido, por supuesto, siempre buscando buenas prácticas y buenos profesores.
Alura ofrece cursos y formaciones completas para que aprendas nuevas tecnologías del mundo de negocios. A través de nuestra comunidad activa, clases de video de alta calidad y ejercicios prácticos, ¡Estarás preparado en poco tiempo!---
"La diferencia entre las funciones input() y raw_input() en Python "
2020-10-22
"Las funcionesinput y raw_input puedem traer confusion cuando programamos en Python. ¿Donde utilizar cada una?"
"yanorestes"
"yan.orestes@alura.com.br"
"data-science"

Las funciones input y raw_input pueden traer confusión al programar en Python. ¿Dónde usar cada una?
Tengo un programa escrito en Python que necesita de las credenciales de acceso del usuario para funcionar:
usuario = input(‘Ingresea tu nombre de usuario ')
print('Hola, ' + usuario)
Cuando ejecuto en mi computadora, escribo mi nombre de usuario y recibo una respuesta:
Ingresa tu nombre de usuario: yanorestes
Hola, yanorestes
¡Exactamente lo que había escrito, capturado por la variable usuario!
Llevé el programa a la empresa, pero cuando fui a probarlo, escribí mi nombre de usuario y mira lo que surgió:
Ingresa tu nombre de usuario: yanorestes
Traceback (most recent call last):
  File "login.py", line 1, in &lt;module
    usuario = input("Ingrese tu nombre de usuario: ")
  File "&lt;string&gt;", line 1, in &lt;module&gt;
NameError: name 'yanorestes' is not defined
¿Extraño no? ¡<em>funcionó en mi computadora</em>! ¿Qué significa este NameError que tuvimos como respuesta al ejecutar el código en la computadora de la empresa?
Esta excepción indica que estamos tratando de usar una variable que no estaba definida, en este caso, yanorestes. Pero yanorestes es el inicio de sesión en la string, no es una variable, así que ¿por qué sucede esto?
Revisemos las versiones de Python en cada computadora para ver si tiene algo que ver. Primero, en mi computadora:
yan@yan:~&gt; python -V
Python 3.6.4
Ahora, en la computadora de la empresa:
empresa@xyz:~&gt; python -V
Python 2.7.14
¡Ah! Realmente hay una diferencia entre las dos versiones, como sospechábamos.
La función input() en Python 2
¿Por qué nos dio NameError, entonces? La cuestión es que la función input(), en Python 2, no convierte la entrada del usuario en una string, sino que intenta evaluarla:
cuenta = input('Escriba algo para ejecutar: ')
print(cuenta)
Por ejemplo, si enviamos 3 + 5:
Introduzca algo para ser ejecutado: 3 + 5
8
Así que cuando intentamos enviar al usuario de yanorestes al input(), lo trata como una variable. Como esta variable no existe, obtenemos NameError.
Debido al poco uso de este comportamiento, fue eliminado en Python 3. Aún así, podemos simularlo a través de la función de <a href="https://docs.python.org/3/library/functions.html#eval">eval()</a>, de esta manera:
cuenta = eval(input('Introduzca algo para ser ejecutado: '))
print(cuenta)
Entonces, como en el ejemplo anterior obtenemos:
Introduzca algo para ser ejecutado: 3 + 5
8
Pero entonces, ¿cómo podemos hacer en Python 2 lo que la función input() hace en Python 3?
La función raw_input() en Python 2
En Python 2, en lugar de la función input(), usamos la función raw_input() para obtener la entrada del usuario como una string, vea:
usuario = raw_input('Ingresa tu nombre de usuario: ')
print('Hola, ' + usuario)
Ahora sí:
Ingresa tu nombre de usuario: yanorestes
Hola, yanorestes
En Python 3, la función raw_input() fue simplemente renombrada a input().
¿Qué hacer con las diferentes versiones?
Como habrán notado, hay una inconsistencia aquí, si queremos capturar una entrada de usuario como una string, no hay un solo código que simplemente satisfaga ambas versiones 2 y 3 de Python.
En este punto, nosotros como programadores debemos tomar una decisión pensando en los beneficios de cada versión de Python y especialmente en la mayoría de nuestros usuarios.
<em>"¿Pero qué pasa si necesito que mi programa funcione en cualquiera de las dos versiones?"</em>
Si queremos darle la vuelta a la incompatibilidad, es posible comprobar la versión de Python a través del atributo version_info.major del módulo <a href="https://docs.python.org/3/library/sys.html">sys</a>, que nos da la posibilidad de crear una condición if y seguir el camino correcto, como en el ejemplo:

Código

El peligro de ejecutar una entrada de usuario
Es muy importante notar lo peligroso que son las funciones input() en Python 2 y eval() en ambas versiones.
Ejecutar algo escrito por el usuario abre una tremenda brecha en la seguridad del programa e incluso en la computadora en la que se está usando el programa.
Vea <a href="https://nedbatchelder.com/blog/201206/eval_really_is_dangerous.html">en este artículo de Ned Batchelder</a> (en inglés) un poco más sobre los peligros del eval(). Un simple ejemplo:
eval('os.sistema('ls /')")
Esto listará los archivos en el directorio raíz de nuestra computadora.
¿Y si en lugar de listar, usamos el comando de borrar? Todos los archivos y directorios de nuestra computadora serían borrados, ¡así de simple!
Por lo tanto, debemos recordar siempre ser cuidadosos al hacer una entrada de usuario.
Conclusión
En este post, aprendimos las diferencias entre las funciones raw_input() y input(), cómo esto cambia de Python 2 para Python 3 e incluso un poco sobre eval() y sus peligros.
¿Qué tal aprender más sobre Python y sus diversos recursos? Entonces, ¡Mira nuestros cursos de Python para Data Science aquí en Alura!---
"La vida diaria de un profesional que aprende: el calendario de estudio"
2020-10-25
"¿Te falta tiempo y no puedes programar una rutina de estudio? Luego, conozca el calendario de estudios de un profesional de la tecnología."
"guilherme-silveira"
"guilherme.silveira@caelum.com.br"
"inovacao-gestao"

¿Te falta tiempo y no puedes programar una rutina de estudio? Entonces conozca el calendario de estudio de un profesional de tecnología.
Esos días han sido demasiado ocupados... ¿has pasado por esto? La sensación de que no había tiempo para estudiar lo que querías y practicar lo que necesitabas.
A veces tengo la ilusión de que es un día de mi vida que ha marcado una diferencia en mi carrera. Que un día bien estudiado permitirá un gran nuevo salto.
Pero, me pongo a pensar... hoy no puedo estudiar nada... bueno... tengo todo un año por delante para estudiar casi todos los días, para crecer casi todos los días.
La técnica de estudio
En lugar de estudiar mucho durante un solo día, prefiero estudiar un poco casi todos los días. El espaciado y la repetición es una técnica comprobada de estudio y crecimiento profesional. Pero, ¿cómo estudias casi todos los días si casi siempre "te falta tiempo"?
Cada año compro un calendario, esos diarios de papelería, en los que anoto lo que estudiaré cada día. Siempre tengo un mes por delante, anotado, día a día, lo que estudiaré en una sola hora que tengo en cada día de trabajo, cada día algo diferente. Este tipo de estudio incluso tiene un nombre: interleaving.
La consistencia es lo que me hace crecer. Sin embargo, para eso, necesito la oportunidad de estudiar todos los días. Necesito mucho contenido disponible para mí, de una guía, y alguien que seleccione lo que debo y lo que no debo estudiar para no perder el tiempo.
Por eso creé Alura: Tengo contenido de compañeros instructores que puedo estudiar. Y es necesario estudiar mucho para poder crear mis cursos en la plataforma. 
Preparando el calendario de estudio
Me gustaría invitarlo... ingrese a un sitio web de cursos como Alura ahora, o un sitio web de libros. Escriba el nombre de 5 cursos o libros, compre una agenda (o use <a href="https://www.aluracursos.com/blog/organizar-estudio-y-portafolio-con-notion-en-alura">Notion</a>) y anote cada uno en un día de la semana durante las próximas 4 semanas.
Por ejemplo, si hoy es lunes, día 4:

Código

Siguiendo las reglas del calendario
Listo. Todos los días hábiles, a la misma hora, concéntrese en una sola hora para estudiar con lo que se comprometió. No tienes por qué terminar hoy, después de todo, tendrás la próxima semana (spaced repetition) y, hasta entonces, también conectará otros temas (interleaving), para no volverse adicto y con una visión unilateral.
Tampoco tenga dudas: todos los días te preguntas "¿debo estudiar A o B?". Ya está escrito en tu diario: ¡es A, punto! Como yo, si quitas estas dudas del camino, te sientas y disfrutas de esa hora de estudio del principio al fin.
Resultados obtenidos
En un mes habrás leído dos libros y estudiado tres cursos. ¡Esto en tu primer mes, cuando todavía no aplicas otras técnicas que yo uso!
Mi invitación está hecha, compra ahora mismo tu agenda, déjala frente a tu monitor en tu casa, y así no te olvidarás de esa hora diaria.
Pasa los próximos 12 meses estudiando conmigo y creciendo juntos en las áreas más diversas de <a href="https://www.aluracursos.com/cursos-online-programacao">programación</a> y <a href="https://www.aluracursos.com/cursos-online-inovacao-gestao">inovación</a>, utilizando esta y otras técnicas que compartiré.
Y mi invitación va más allá: dentro de 12 meses, veremos cuánto aprendimos y adónde llegamos, tengo curiosidad por saber cuánto aprendiste y qué te pareció esta experiencia de enfocarte en un año de crecimiento profesional.
¿Qué te parece?
Pasos sugeridos para ahora:

Compra una agenda y déjala frente al monitor
Reserva una hora al día
Rellene el próximo mes
¡Dime cuando termines tu primer curso!

Como habrás notado, lo bueno es que puedes usar esta técnica para cualquier tipo de aprendizaje. Ya sea para un curso en línea, como es nuestro caso aquí <a href="https://www.aluracursos.com/">en Alura</a> o uno de nuestros cursos presenciales o a través de un libro. Es sólo cuestión de organizarse.
¿Ya empezaste a elaborar tu calendario?
¡Síguenos en las redes sociales para tener acceso a otros contenidos como este! Estamos en <a href="https://www.facebook.com/aluracursoslatam">Facebook</a> y <a href="https://www.instagram.com/aluralatam/">Instagram</a>.---
"Listas en Python: operaciones básicas"
2020-10-01
"Listas en Python son estructuras que aparecen todo el tiempo en nuestro código. En este artículo aprenderemos algunas formas de manipular elementos dentro de una lista usando Python"
"yanorestes"
"yan.orestes@alura.com.br"
"data-science"

Una profesora de matemáticas desarrolló una técnica de evaluación diferente, en un intento de aumentar la interacción entre los estudiantes para la próxima prueba, la calificación de todos sería la misma, equivalente al promedio de todas las calificaciones.
Todo este proceso lo haría un sistema Python automático. Las calificaciones de los estudiantes en la sala evaluada se archivaron en una estructura de lista:
python
notas = [0, 0, 9.0, 8.0, 5.0, 10.0, 7.0, 7.5, 4.0, 10.0, 7.0, 7.0, 8.0, 8.0, 7.5]
La fórmula para calcular la media aritmética de una lista de números es la suma de los números dividida por la cantidad de números. Luego necesitamos descubrir dos cosas: la suma de las notas y el número de notas.
Sumar todos los elementos de una lista
Para sumar todos los elementos de la lista, comenzaremos inicializando nuestra variable que contendrá el resultado de la suma de las notas con el valor 0, lo que indica que la suma aún no se ha realizado:
python
suma_de_notas = 0
Por lo tanto, un enfoque que podemos seguir es a través de la iteración sobre las notas: para cada nota, su valor se agrega a la variable suma_de grados, de la siguiente manera:

Código

Y el resultado:
python
98.0
Funciona perfectamente! Pero, ¿no hay una forma más sencilla de sumar todos los elementos a una lista? 
Sumar los elementos de una lista con la función sum ()
Sumar todos los elementos de un conjunto es una tarea muy común en la programación. Por lo tanto, Python también tiene una función nativa dedicada a calcular la suma de todos los elementos en una lista: ¡la función <a href="https://docs.python.org/3/library/functions.html#sum">sum ()</a>! 
Usemos este nuevo enfoque:

Código

Y así:
98.0
No solo es más simple usar la función sum () que implementar un algoritmo de suma nosotros mismos, sino que su <a href="https://stackoverflow.com/a/24578976">rendimiento es mucho mejor</a>: un loop for se ejecuta como el <em>bytecode</em> interpretado de Python, mientras que la función sum () se escribe exclusivamente en el lenguaje C. 
Ahora que ya conocemos la suma de las notas, necesitamos averiguar cuántas son. 
Averiguar el tamaño de una lista con la función len ()
El número de notas es el tamaño de la lista. Podemos, por supuesto, contar nostros mismos y almacenar ese recuento en una variable:
python
cuantidad_notas = 15
Bien, pero este enfoque sería problemático si la lista cambia de tamaño, o incluso si la lista es más grande (¡imagínate contando número por número en una lista de más de 100 elementos!) 
Si ya hemos trabajado con otros lenguajes de programación, probablemente hayamos visto que generalmente hay una forma nativa más simple de calcular el tamaño de una lista. ¡En Python esto no es diferente! 
La función <em>built-in</em> <a href="https://docs.python.org/3/library/functions.html#len">len ()</a> devuelve la longitud de un objeto cuya clase implementa el <a href="https://docs.python.org/3/reference/datamodel.html#object.__len__">método len ()</a>, según ejemplo, una cadena o, en nuestro caso, una lista. Probémoslo con nuestras notas:

Código

El resultado:
15
Calcular la media aritmética
Ahora que tenemos los dos valores que necesitábamos, calculemos el promedio usando la fórmula sum_de_los_numeros / cantidad_de_numeros:
python
nota_media = suma_de_notas / cuantidad_notas
print (nota_media)
Ahora tenemos el promedio:
6.5333
El resultado fue revelado a los estudiantes, quienes respondieron con quejas: la calificación fue más baja que lo esperado.
Después de analizar las calificaciones, descubrimos que el promedio se calculaba con la nota 0 de dos estudiantes que estuvieron ausentes el día del examen, ¡lo cual no era justo!
Luego debemos eliminar estas marcas 0 de nuestra lista y volver a calcular el promedio.
Eliminar un elemento de una lista con el método remove ()
Ahora que tenemos nuestra lista completa, ¿cómo podemos eliminar un elemento de ella? Para esto, Python nos trae el método remove (), que toma como parámetro el valor que queremos eliminar de nuestra lista. Vamos a probar:

Código

Logramos eliminar uno de los  0, pero el otro aún permaneció. ¿Porque sera? Resulta que el método remove () elimina solo el primer elemento encontrado cuyo valor es el mismo que el parámetro pasado, no todos los elementos con ese valor. 
¿Necesitamos entonces llamar al método remove () dos veces? Bien, eso funcionaría, pero ¿y si, en lugar de dos, tuviéramos diez notas 0. ¿Realmente tendríamos que repetir la misma línea de código diez veces? Esto no parece ideal. 
Conociendo Python y la lógica de programación, un enfoque intuitivo para este problema sería iterar sobre la lista con un bucle for y eliminar el valor si es igual a 0, para que no tengamos que preocuparnos por el número de notas 0. Probemos:

Código

E o resultado:
[0, 9.0, 8.0, 5.0, 10.0, 7.0, 7.5, 4.0, 10.0, 7.0, 7.0, 8.0, 8.0, 7.5]
¡De nuevo queda un 0! ¿Por qué esta vez? En este caso, lo que sucedió fue una confusión entre el bucle for y el método remove (). 
El for itera sobre los elementos de una lista a través del índice, es decir, comienza con el elemento en la posición 0, se mueve al elemento en la posición 1 y así sucesivamente, hasta que el índice (la posición) alcanza la longitud de la lista. 
El método remove (), a su vez, al eliminar un elemento, reasigna los demás dentro de la lista para que no haya espacio vacío en el lugar donde se eliminó el elemento. Cuando eliminamos un elemento de la lista, la lista en realidad se reduce de tamaño. 
Sabiendo esto, hagamos una simulación paso a paso para tratar de entender lo que sucedió: 
PRIMER LOOP:    índice = 0   lista = [0, 0, 9.0, 8.0, 5.0, 10.0, 7.0, 7.5, 4.0, 10.0, 7.0, 7.0, 8.0, 8.0, 7.5] 
SEGUNDO LOOP:   índice = 1   lista = [0, 9.0, 8.0, 5.0, 10.0, 7.0, 7.5, 4.0, 10.0, 7.0, 7.0, 8.0, 8.0, 7.5] 
Tenga en cuenta que el segundo 0 fue ignorado por for! Cuando for llegó al índice 1, donde ese 0 era inicialmente, 0 ya se había reasignado al índice 0, lo que resultó en este problema. 
Por lo tanto, siempre debemos recordar que se recomienda no cambiar nunca una lista mientras se itera sobre ella. 
Necesitamos una mejor manera de eliminar todas las ocurrencias del mismo valor en una lista.
Filtrar una lista usando <em>list comprehensions</em>
Hay una técnica en Python llamada comprensión de listas. ¿Cómo podemos usarlo para resolver nuestro problema? Queremos una lista de todos los valores en nuestra lista de calificaciones, siempre que el valor sea mayor que 0.
Entonces:

Código

Y así:
[9.0, 8.0, 5.0, 10.0, 7.0, 7.5, 4.0, 10.0, 7.0, 7.0, 8.0, 8.0, 7.5]
Finalmente, es solo recalcular el promedio con esta nueva lista de notas:
media_valida = sum (valid_notes) / len (valid_notes)
print (media_valida)
Esta vez, un mejor promedio para los estudiantes:
7.538461538461538
Después de calcular el promedio y redondearlo a 7.5, la maestra quería verificar si su método de evaluación había sido efectivo, es decir, si la calificación en el aula realmente representaba el desempeño de los estudiantes en la prueba. 
Para hacer esto, necesitaba calcular cuántos estudiantes obtuvieron un puntaje promedio, con una diferencia de 0.5 (es decir, cuántos estudiantes obtuvieron entre 7 y 8).
Contar elementos en una lista con el método count ()
Para contar cuántas veces aparece un elemento en una lista, podemos usar el método count () de esta manera:
cuantidad_sietes = grade.count (7.0)
print (cuantidad_sietes)
Es el resultado:
3
Para realmente hacer lo que queremos, necesitamos usar el método con tres valores: 7, 7.5 y 8:
cuantidad_alumnos_media = notas.count (7.0) + notas.count (7.5) + notas.count (8.0)
print (cuantidad_alumnos_media)
El resultado:
8
¡Correcto! En nuestro caso, esta solución con count () funciona bien, porque sabemos que solo queremos estos tres valores (7.0, 7.5 y 8.0).
Pero, ¿qué pasaría si nuestra lista tuviera, por ejemplo, valores como 7.1, 7.2 ... y así sucesivamente hasta 8.0. ¿Tendríamos que hacer un count() para cada uno de estos valores? Parece complicado, ¿no?
Otro enfoque que podría usarse, que evitaría el problema de tener más valores en el rango que queremos contar, sería usar un bucle for y almacenar el valor de conteo en una variable, como esta:

Código

Tenemos el mismo resultado:
8
Al reunir lo que aprendimos del método sum() y la comprensión de la lista, y sabiendo que en Python la clase bool, que representa los tipos booleanos, hereda de la clase int (True es igual a 1 y False es igual a 0), podemos incluso hazer esto de una manera mucho más sucinta:

Código

Tenemos el mismo resultado:
8
Conclusión
En esta publicación pudimos ver la utilidad de las listas, cuándo podemos usarlas y qué podemos hacer con ellas. 
Pasamos por necesidades como eliminar todas las ocurrencias de un valor en la lista, agregar todos los elementos en la lista, conocer la longitud de la lista e incluso eliminar todas las ocurrencias de un elemento en la lista, y logramos resolverlos uno por uno a través de nuestra lógica y el ¡Las propias características de Python!
¿Qué tal aprender más sobre Python y sus diversos recursos? Entonces, ¡Mira nuestros cursos de Python para Data Science aquí en Alura!---
"Llenando un formulario HTML automáticamente con AJAX"
2020-10-29
"Aprenda como llenar formularios hechos en HTML automaticamente con AJAX"
"christian-velasco"
"christian.velasco@alura.com.br"
"front-end"

Durante el desarrollo de un proyecto web de una clínica, nuestro cliente solicitó que el registro de pacientes lo hagamos de forma automática a través de un archivo JSON que tiene el registro de clientes históricos de la clínica. ¿Cómo podemos hacer eso?
Una solución factible es adicionar un botón botónBuscar y que tenga como responsabilidad conectarse a un servidor externo (API) y realizar una importación de datos del archivo JSON.
Esta importación es realizada a través de una requisición AJAX con JavaScript. Para ello necesitamos de un objeto llamado XMLHttpRequest. Pero antes de continuar vamos a explicar lo que es AJAX. 
Entendiendo AJAX
A través de Javascript conseguimos enviar solicitudes a determinadas URL y obtener sus respuestas sin que se recarguen las páginas, es decir, cuando el usuario haga clic en el botón botónBuscar del formulario, se realizará la búsqueda y se rellenarán las informaciones de los pacientes sin recargar la página.
Este método de solicitud en Javascript se conoce como <a href="https://developer.mozilla.org/en-US/docs/Web/Guide/AJAX">AJAX</a>. Genial, pero ¿cómo podríamos aplicar este AJAX? 
Vamos a crear nuestra propia funcionalidad para buscar esos pacientes de otro servidor y así podremos tener el resultado deseado.
Obtener el formulario HTML
Nuestro primer paso será en realidad, obtener nuestro formulario HTML para que apliquemos el AJAX. Para este ejemplo usaré <a href="https://raw.githubusercontent.com/alura-es-cursos/api-pacientes/artigo-ajax-javascript/conexion-ajax-clinica-vida-y-salud.html">este formulario</a>, que está en el Github de Alura, es decir, si quieres seguir el paso a paso, ¡también puedes descargarlo! ;)

imagen

Con el HTML listo, necesitamos comenzar a implementar la importación de los pacientes desde un servidor externo conforme lo solicitó nuestro cliente. Los datos de los pacientes se encuentran en una API de Git y para acceder a ellos vamos a usar solicitudes con XMLHttpRequest
Creando solicitudes con XMLHttpRequest
Javascript nativo tiene un objeto responsable por realizar solicitudes AJAX conocido como <a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest">XMLHttpRequest</a>, es decir, por medio de él podemos recuperar datos de una URL determinada. A pesar de su nombre, se puede utilizar para recuperar cualquier tipo de datos y brinda soporte a los protocolos HTTP, FILE y FTP.
Si observamos nuestro código HTML, el botón Buscar Pacientes ya vino creado. Y dentro del Script ya tenemos 3 funciones creadas: adicionarPacienteEnLaTabla, construirTr y construirTd. Estas funciones se encargarán de adicionar los pacientes importados a la tabla. 
Antes de crear nuestra solicitud vamos a seleccionar el botón con document.querySelector y colocamos un eventListener del evento clic dentro de él. Hacemos esto al final de la función construirTd.
var botonBuscar = document.querySelector("#buscar-paciente");
botonBuscar.addEventListener("click",function(){
};
Ahora sí, dentro del evento vamos a crear una instancia del objeto para comenzar a usarlo. 
var botonBuscar = document.querySelector("#buscar-paciente");
botonBuscar.addEventListener("click",function(){
    var  xhr = new XMLHttpRequest();
};
Ahora el XMLHttpRequest necesita ser configurado, vamos a definir cuál método queremos utilizar en la requisición y para cual servidor vamos a enviarla. Para configurar el XMLHttpRequest usamos la función .open()
El método open recibe tres parámetros, los cuales son:
<ol>
El verbo HTTP que se usará para realizar la solicitud, y debe seguir el estándar REST.
La URL que pretendemos obtener los datos.
Un argumento booleano que indica si la solicitud debe ser asíncrona o síncrona (por defecto es igual a asíncrono, valor booleano = true)
</ol>
var botonBuscar = document.querySelector("#buscar-paciente");
botonBuscar.addEventListener("click",function(){
    var  xhr = new XMLHttpRequest();
    xhr.open("GET","https://alura-es-cursos.github.io/api-pacientes/pacientes.json");
};
Por último, para enviar la requisición necesitamos llamar al método send():
var botonBuscar = document.querySelector("#buscar-paciente");
botonBuscar.addEventListener("click",function(){
    var  xhr = new XMLHttpRequest();
    xhr.open("GET","https://alura-es-cursos.github.io/api-pacientes/pacientes.json");
    xhr.send;
};
Si en este momento realizamos clic en el botón, la requisición será enviada, sin embargo, no veremos ningún resultado, pues no estamos capturando la respuesta.
Capturando la respuesta del XMLHttpRequest
Para capturar la respuesta cuando la requisición HTTP es retornada, necesitamos colocar un escuchador de eventos en el propio XMLHttpRequest, capturando al evento load.
var botonBuscar = document.querySelector("#buscar-paciente");
botonBuscar.addEventListener("click",function(){
       var xhr = new XMLHttpRequest;
       xhr.open("GET","https://alura-es-cursos.github.io/api-pacientes/pacientes.json");
        xhr.addEventListener("load", function() {
                console.log(xhr.responseText);        
        });
        xhr.send();
};
Ahora si realizamos clic en el botón y vemos en la consola, veremos los datos importados.
Transformado los datos de JSON para un objeto de JavaScript
Si observamos en la consola lo que está siendo impreso, veremos que nos retorna un archivo JSON, que es un formato común para transitar datos en la web. Como no queremos trabajar con texto, vamos a transformar ese texto en un objeto de JavaScript, para ello usamos la función JSON.parse().
var botonBuscar = document.querySelector("#buscar-paciente");
botonBuscar.addEventListener("click",function(){
        var xhr = new XMLHttpRequest;
        xhr.open("GET","https://alura-es-cursos.github.io/api-pacientes/pacientes.json");
        xhr.addEventListener("load", function() {
              var respuesta = xhr.responseText;
              var pacientes = JSON.parse(respuesta);        
        });
        xhr.send();
};
Adicionando los pacientes en la tabla
En nuestro código ya tenemos las funciones que se encargan de adicionar pacientes en la tabla, vamos a aprovecharla para recorrer el array de pacientes y adicionar cada uno de ellos:
var botonBuscar = document.querySelector("#buscar-paciente");
botonBuscar.addEventListener("click",function(){
        var xhr = new XMLHttpRequest;
        xhr.open("GET","https://alura-es-cursos.github.io/api-pacientes/pacientes.json");
        xhr.addEventListener("load", function() {
              var respuesta = xhr.responseText;
              var pacientes = JSON.parse(respuesta);    
              //adicionar aquí
                        pacientes.forEach(function(paciente){
              adicionarPacienteEnLaTabla(paciente);
               });
        });
        xhr.send();
};
Si hacemos clic en el botón Buscar Pacientes veremos que los pacientes están siendo añadidos en la tabla.

imagen

Lidiando con errores
Nuestra requisición AJAX ya está implementada correctamente, solo que no estamos considerando que existe la posibilidad de que se presenten errores durante la requisición, por lo tanto, vamos a detectar los problemas y exhibir un mensaje de error para informar al usuario. Para detectar si hubo un error, debemos utilizar el código de status de la requisición HTTP, que puede ser obtenido a través de la propiedad status del XMLHttpRequest. Vamos a crear una lógica que verifique si el código del status es 200, que significa que la requisición fue exitosa, y caso contrario, vamos a exhibir los errores para el usuario.

Código

Caso la requisición muestre cualquier otro código que no sea 200, debemos exhibir un pequeño mensaje de error al usuario. Este mensaje será una etiqueta &lt;span&gt; que la colocaremos en nuestro HTML antes del botón buscar-paciente. 
&lt;span id="error-ajax"&gt;Error al buscar los pacientes&lt;/span&gt;
Luego vamos a alterar el estado del botón a través de un selector con JavaScript, iniciando el mismo con la propiedad visibility = "hidden", o sea oculto. Este bloque lo colocamos antes del querySelector del botón buscar-paciente
var errorAjax = document.querySelector("#error-ajax");
errorAjax.style.visibility = "hidden";
Para finaliza en el else de nuestro bloque if alteramos la propiedad visibility del objeto error-ajax para "visible". 

Código

Si simulamos un error, por ejemplo, removiendo una parte de la URL del servidor, verificamos si el mensaje de error de la etiqueta &lt;span&gt; va a aparecer.

imagen

(Aquí)[https://raw.githubusercontent.com/alura-es-cursos/api-pacientes/artigo-ajax-javascript-full/conexion-ajax-clinica-vida-y-salud-full.html] puedes descargar el código completo. 
¿Qué tal aprender más sobre JavaScript y sus diversos recursos? Entonces, ¡Mira nuestros <a href="https://www.aluracursos.com/curso-online-javascript-parte1-introduccion-lenguaje-web">cursos</a> aquí en Alura!---
"Matplotlib una biblioteca Python para generar gráficos interesantes"
2020-11-05
"Cuando presentamos resultados, además de los números, podemos utilizar otros elementos para transmitir mejor el mensaje. Una buena forma de presentar datos es utilizar la biblioteca matplotlib"
"yuri-oliveira"
"yuri.oliveira@alura.com.br"
"data-science"

Cuando presentamos resultados, además de los números, podemos usar otros elementos para mejor informar. Una buena manera de presentar datos es usar la biblioteca matplotlib.
Cuando estamos analizando datos, es común ver y manipular muchos números. Números de ventas, de accesos, de tasa de retorno entre otros tantos.Podemos analizar estos datos de muchas maneras, podemos usar una planilla electrónica, como Excel, o Google Sheets, podemos utilizar lenguajes como Python y R para leer nuestros datos y almacenarlos en estructuras de datos como listas, vectores, data frames, entre otros.
Estaba utilizando Python para analizar los datos de venta de una tienda de productos electrónicos. En un momento, estaba analizando los datos de venta en el semestre me encontré con la siguiente planilla:
Ene - 105235 
Feb - 107697
Mar - 110256
Abr - 109236
May - 107589
Jun - 106986
Sabemos que esta tabla muestra los datos de venta del semestre, pero ¿qué indican estos datos? ¿Tuvimos un aumento en las ventas? ¿Están bajando?
No tenemos una idea clara de lo que significan estos datos, no podemos interpretarlos fácilmente. ¿Qué podemos hacer para interpretar mejor estos datos?
Una imagen vale más que mil palabras
Ver los datos en la tabla puede no ser la mejor manera de verlos. Tenemos que seguir analizando línea por línea, valor por valor, lo que puede suponer bastante trabajo.
Por supuesto, los números son importantes para que hagamos un análisis preciso, sin embargo, cuando estamos presentando los resultados, además de los números, podemos utilizar otros elementos gráficos para transmitir mejor la información.
Una buena forma de presentar datos es mediante gráficos. Con los gráficos podemos tener una idea general de lo que nos dicen los datos.
Por ejemplo, nuestra planilla de ventas por semestre, podemos crear un gráfico que muestre las progresiones de vendas cada mes.
Pero, ¿cómo podemos crear un gráfico?
Conociendo la biblioteca
En Python, hay una biblioteca muy famosa para crear gráficos, la <a href="https://matplotlib.org/">Matplotlib</a>. Con ella, podemos elaborar diferentes tipos de gráficos. Para empezar a usar la biblioteca, tenemos que instalarla. Por lo tanto:
pip install matplotlib
¡Genial! Ya hemos instalado la biblioteca, comencemos a usarla.
Nuestra biblioteca es la matplotlib. Queremos usarla para crear, es decir, trazar gráficos. Entonces, le dijimos a Python que importara (import) desde la biblioteca matplotlib la parte de trazado de gráficos con Python (pyplot).

Código

</blockquote>
</blockquote>
</blockquote>
Creemos un gráfico con nuestra planilla de ventas semestral. Para eso, debemos decirle a pyplot cuáles son los meses y cuáles son los valores de cada mes. Una manera de hacerlo es crear dos listas, una con los meses y otra con los valores:

Código

</blockquote>
</blockquote>
</blockquote>
Ahora, basta decirle al pyplot que trace (plot) nuestro gráfico:

Código

</blockquote>
</blockquote>
</blockquote>
Le dijimos al pyplot que creara nuestro gráfico, pero, ¿dónde está? Nuestro gráfico no apareció. Cuando le decimos al pyplot que cree el gráfico, lo construye y lo almacena en una región de la memoria. Para poder ver el gráfico, debemos decirle al pyplot que lo muestre (show()):

Código

</blockquote>
</blockquote>
</blockquote>

imagen

El método plot crea un gráfico de líneas. Podemos ver que los meses quedaron en la parte horizontal del gráfico, es decir, en el eje X. Mientras que los valores quedaron en la parte vertical del gráfico, es decir, en el eje Y.
Con el gráfico, podemos ver más claramente cómo fueron las ventas en cada mes durante el primer semestre. Está claro que hasta el mes de marzo tuvimos un aumento en las ventas, luego tuvimos una pequeña reducción hasta el mes de mayo y luego volvimos a tener un aumento. ¿Una gran baja?
Si miramos el eje Y del gráfico, veremos que los valores van de 105.000 a 110.000. Es decir, tenemos cinco mil dolares de diferencia entre la base y el tope del eje Y.
Si miramos de cerca el gráfico y los números, veremos que en marzo la facturación fue cercana a los ciento diez mil y el mes siguiente bajó a un valor cercano a los ciento nueve mil.
Mirando los números, esa baja no parece haber sido tan grande, pero cuando miramos solo el gráfico, podemos pensar que tuvimos una baja mayor.
Esto se debe a que valores de nuestro eje Y son muy próximos entre sí. Por lo tanto, cualquier cambio en los valores hacia arriba o hacia abajo puede causar distorsiones en el gráfico.
Para evitar un poco este comportamiento, podemos cambiar los valores de la base y del tope del eje Y, es decir, podemos cambiar su límite (ylim()):

Código

</blockquote>
</blockquote>
</blockquote>

imagen

Al cambiar ligeramente el límite del eje Y, podemos ver que, de hecho, esas bajas en la facturación, que parecían bruscas, son más suaves de lo que parecían.
Ahora, cuando presentemos este gráfico en la reunión, será más claro para que la gente vea… ¿Vea qué? ¿De qué se trata este gráfico?
Los que lo construimos sabemos que se trata de ventas semestrales, pero ¿qué pasa con una persona que nunca ha visto este gráfico? Nuestro gráfico solo tiene números y meses.
Cuando las personas ven este gráfico, pueden preguntarse de qué se tratan estos números, ¿la cantidad de productos vendidos? ¿La ganancia en pesos o en dólares?
Para evitar estas posibles confusiones, debemos dejar claro cuál es el propósito de nuestro gráfico y qué significa cada eje.
Detallando las informaciones en el gráfico
Podemos decirle al pyplot que nombre nuestro gráfico, es decir, que le agregue un título (title):

Código

</blockquote>
</blockquote>
</blockquote>
También podemos pedirle al pyplot que escriba los significados de los valores en el eje X y en el eje Y. Es decir, podemos pedirle que etiquete los datos de estos ejes (xlabel, ylabel):

Código

</blockquote>
</blockquote>
</blockquote>
Ahora, cuando le pedimos al pyplot que muestre nuestro gráfico, veremos el título y la etiqueta de cada eje:

imagen

Ahora tenemos un gráfico mucho más descriptivo. Sabemos de qué se trata el tema y conocemos el significado de los ejes X e Y.
Para saber más
Tenga en cuenta que la forma que importamos el módulo del pyplot, siempre que necesitamos llamar alguna función de la biblioteca, tenemos que pasar por el camino completo hasta el módulo, es decir, matplotlib.pyplot. Un nombre un poco grande, ¿verdad?
Por eso, una práctica habitual es dar apodos a nuestros imports. Por ejemplo, podemos decirle a Python que estamos denominando el módulo pyplot de plt, por ejemplo:

Código

</blockquote>
</blockquote>
</blockquote>
De esta manera, siempre que queramos llamar a este módulo, simplemente lo llamaremos por el apodo:

Código

</blockquote>
</blockquote>
</blockquote>
Además del gráfico de líneas, pyplot también puede crear otros tipos de gráficos, como gráficos de barras, gráficos circulares, de dispersión, entre otros.
Además de crear el gráfico y agregarle título y etiqueta, también podemos cambiar el color de la línea y el color de fondo. Aumentar el tamaño de las letras, entre varias otras personalizaciones.
La parte de visualización de dados es una de las tareas más importantes de un científico de datos, porque con ella, además de entender los datos de una manera más intuitiva, nos ayuda a transmitir lo que dicen los datos a otras personas.
¿Qué tal aprender más sobre Python y sus diversos recursos? Entonces, ¡Mira nuestros cursos de Python para Data Science aquí en Alura!---
"¿Media o mediana? Entienda cada una"
2020-12-05
"Los promedios y las medianas son medidas ampliamente utilizadas, tanto en el análisis de datos como en las estadísticas. ¿Pero cuándo usar cada uno?"
"yuri-oliveira"
"yuri.oliveira@alura.com.br"
"data-science"

¿Media o mediana? Entienda cada una
Estaba haciendo un análisis de las calificaciones de los alumnos. Queremos ver cómo el abordaje de enseñanza influye en las calificaciones de ellos. Así que veamos las notas antes y después del cambio.
Para hacer este análisis, analizaremos las notas de una clase con 21 alumnos.
6.0, 7.1, 5.5, 3.0, 10.0, 100.0, 6.5, 8.2, 2.9, 3.5, 9.9, 
9.1, 8.2, 7.6, 9.9, 10.0, 6.7, 4.9, 10.0, 6.8, 6.0
¿Qué tan bien estuvo la clase? Es decir, ¿cuál es la nota media del curso?
Podemos sacar un promedio aritmético simple. Es decir, sume todas las calificaciones y divida por la cantidad de estudiantes. Pronto tendremos:
(6.0 + 7.1 + 5.5 + … + 6.0) / 21
El resultado de este cálculo es aproximadamente 11.51. Las notas son de 0 a 10, entonces, ¿por qué nuestro promedio es 11?
Entendiendo el promedio
El promedio está influenciado por todos los valores de la muestra. Es decir, si tenemos valores muy diferentes, se cambia el valor del promedio.
Por ejemplo, en nuestras notas de muestra, tenemos una nota con el valor 100,0. Entonces el promedio tiene un valor no tan habitual. Estos mismos valores atípicos, tanto superiores como inferiores, se conocen como outliers.
Hay muchas formas de tratar <em>outliers</em>. Uno es quitar el <em>outlier</em>. En muestras con una gran cantidad de datos esto no tiene tantos problemas, en una muestra con pocos datos, como la nuestra, eliminar un outlier puede causar mucho impacto. Entonces, ¿cómo podemos solucionar este problema?
Una forma es comprobar que ese dato de la muestra está correcto. Otra forma es reemplazar este valor con el valor que se repite más en la muestra, o bien con el valor de la mediana. Pero, ¿qué es la mediana?
Conociendo la mediana
La mediana es el valor que se encuentra en el medio de la muestra. Es decir, divide la muestra en dos partes, donde la mitad está arriba y la otra mitad está abajo. ¿Cómo podemos calcular la mediana?
Una forma de calcular la mediana es ordenando todos nuestros datos:
2.9, 3.0, 3.5, 4.9, 5.5, 6.0, 6.0, 6.5, 6.7, 6.8,
7.1, 7.6, 8.2, 8.2, 9.1, 9.9, 9.9, 10.0, 10.0, 10.0, 100.0
Ahora que hemos ordenado los datos, necesitamos saber qué datos están en el medio de nuestra muestra. Es decir, en nuestro caso tenemos 21 elementos de la muestra. Como es un número impar, simplemente agregue 1 a este valor y divídelo por 2.
Entonces, tenemos la fórmula (numero_de_elementos + 1)/2. Haciendo los cálculos, veremos que el valor del resultado es 11. Entonces, nuestro elemento mediano está en la posición numérica 11.
| Posición            | Elemento |
| ------------------- | -------- |
| 1                   | 2.9      |
| 2                   | 3.0      |
| .                   | .        |
| .                   | .        |
| .                   | .        |
| 11                  | 7.1      |
Nuestra nota mediana es 7.1. Esto significa que la mitad de nuestros datos están por debajo 7.1 y la mitad de los datos están arriba.
Ahora que tenemos la mediana, podemos reemplazar el <em>outlier</em> con su valor. Cuando reemplacemos y calculemos el nuevo promedio, veremos que su valor ha cambiado a 7.09. Y, calculando de nuevo la mediana, permanece en 7.1, pero esto no es una regla.
La mediana es el elemento del medio. Divide nuestros datos en dos partes. En nuestro caso, nuestra muestra contiene un conjunto de datos con un valor impar. Pero, ¿y si tuviéramos un valor par? ¿Cómo se calcula la mediana en este caso?
Muestra con valores pares
Para una muestra con un número par de valores, tenemos que realizar un paso similar, sin embargo, en lugar de tomar el valor central, tomamos los dos valores que están en el centro. ¿Entonces nuestra muestra tendrá dos medianas?
Con estos dos valores podemos calcular su promedio. Este promedio de los valores centrales es la mediana de la muestra.
Por ejemplo, imaginemos que tenemos la siguiente muestra; 1, 2, 5, 7, 9, 11. Necesitamos los dos valores centrales. Para eso, podemos usar la fórmula numero_elemento / 2 y (numero_de_elementos / 2) + 1.
Es decir, tenemos seis elementos. Entonces las fórmulas son 6/2 y (6/2) + 1. Con eso tenemos como resultado 3 y 4. Por tanto, nuestros elementos centrales son el tercero (5) y cuarto (7) elemento.
Realizando el cálculo medio entre ellos, obtendremos el valor 6. Es decir, en esta muestra nuestra mediana vale 6.
Para saber más
Además del promedio aritmético que realizamos, existen otros promedios. Como por ejemplo, promedios geométricos y armónicos.
Básicamente, el promedio geométrico medirá la proporción promedio de un elemento en relación al otro. El promedio armónico mide la razón entre los elementos.
Porque el promedio está muy influenciado por <em>outliers</em>, generalmente es común usar la mediana para hacer comparaciones entre muestras.
Además del promedio y la mediana, también tenemos la moda. La moda es el valor más repetido de la muestra. Podemos tener distribuciones con un valor modal (unimodal), dos valores (bimodal) y con muchos valores (polimodal). También existe el promedio ponderado.
El promedio, la mediana y la moda son medidas estadísticas que se utilizan ampliamente cuando hacemos análisis de datos. Aquí en Alura tenemos <a href="https://www.aluracursos.com/cursos-online-data-science">cursos de data science</a>. Ahí verá muchas medidas estadísticas y aprenderá a utilizarlas para analizar sus datos.---
"Nombres de clases en CSS "
2020-12-02
"Vea cómo nombrar clases CSS y mantener la organización en su proyecto"
"yuri-padilha"
"yuri.padilha@caelum.com.br"
"front-end"

Hola, si no has visto la primera publicación de la serie, haz clic <a href="https://www.aluracursos.com/blog/como-organizar-el-css-en-tu-proyecto">aquí</a> y léelo antes.
Bueno, ahora solucionemos el problema de nombres de clases CSS, recapitulemos el componente .box que creé:
-- Box
.box {}
.image {}
.title {}
Imagine ahora que nuestro componente de la barra de navegación también tiene su propio elemento de título, ¿qué nombre le daríamos a la clase de ese título?
-- Navbar
.navbar {}
.title {}
El problema con el uso de nombres tan genéricos es que los nombres de clases como este entrarán en conflicto entre sí, asegúrese de que tanto el componente box cuánto navbar tiene un .title declarado. ¿Cómo podemos hacer para solucionar esto?
Piensa conmigo, ¿el título de la navbar pertenece a qué componente? ¡La navbar en sí!
¿A qué componente pertenece el título del box? ¡El mismo box!

Código

¡Ahora sí! ¡Los estilos serán específicos para sus elementos!
Aunque hemos mejorado el código ahora, este nuevo código seguirá entristeciendo a mucha gente, especialmente a los que le harán el mantenimiento en el futuro.
Mira, pensemos en esto, ¿recuerdas nuestro elemento activo de la navbar? Entonces, pensemos que el CSS de nuestro modificador activo tiene que ser escrito por otra persona nueva en el proyecto y que ya no somos parte de ese proyecto. La persona probablemente escribirá algo como:
.active {}
Cuando inserte este modificador en el elemento de la navbar, ¿qué sucederá?
&lt;navbar …&gt;
    &lt;a .. class="item active"&gt;
...'
No pasa NADA.
AH, ¿cómo es que nada?
Bueno, en CSS hay algo llamado especificidad, cuanto más específico sea el CSS, más prioridad tendrá para cambiar el estilo del elemento. Mira esto:
&lt;navbar class="navbar"&gt;
    &lt;a href="#" class="item"&gt;Home&lt;/a&gt;
    &lt;a href="#" class="item active"&gt;Courses&lt;/a&gt;
    &lt;a href="#" class="item"&gt;Carreras&lt;/a&gt;
&lt;/navbar&gt;
¿Qué selectores de CSS tenemos que están estilizando a nuestro enlace courses?
.navbar .item {}
.active {}
¿Cuál de estos selectores crees que es más específico y tendrá más prioridad?
.navbar .item {}
Bueno, un selector con dos clases es más específico ¡que un selector con solo una!
Lo que sucederá es que la persona que creó el estilo .active tendrá que dejar este selector igual o incluso más específico que el selector de arriba. Resultando en:
.navbar .active {}
¿Qué pasa si después de eso alguien más quiere darle estilo? Tendrá que ser cada vez más específico hasta llegar a
.. 1 minuto de silencio ..
!important
Esto es horrible porque !import es un comodín para eludir la especificidad, es decir, si alguien quiere darle más estilo al elemento, ¡tendrá problemas!
Si un día te metes con temas listos para Wordpress e intentas personalizarlos, sentirás todos estos problemas en tu piel, ¡créeme!
Bueno, está bien, pero ¿cómo solucionar este problema? ¡Simple, haciendo las clases menos específicas! Intentemos dejar solo el NOMBRE del selector más específico:
.navbar {}
.navbar-title {}
.navbar-active {}
¡Observe que ahora solo tenemos una clase con un nombre compuesto! ¡Ahora .navbar-active anula .navbar-title!
Ya existe un estándar para esto y es el famoso Block Element Modifier, <a href="http://getbem.com/introduction/">BEM</a>.
Explicando las siglas de BEM tenemos:
(B)lock- Eso sería básicamente lo que SMACSS llama de Módulo y lo que aquí también llamamos de un componente, sería cualquier componente que creamos que se puede reutilizar en varias páginas, como nuestra box o de la navbar.
A partir de ahora, cuando me refiera a un block o bloque, estaré hablando de algún componente.
(E)lement - Este sería un elemento que está dentro de nuestro bloque, por ejemplo nuestros elementos dentro de navbar, así como el title y la image dentro del box, ¿recuerdas?

Código

(M) odifier - Ese sería nuestro modificador, ¿recuerdas active? navbar-itemActive.
Lo que propone BEM es organizar estos nombres, ¿qué nombres le vamos a dar a los elementos? ¿Y los modifiers? ¿Y a los blocks? Ayuda a las personas a seguir un estándar. Para BEM, este estándar sería:
block__element—modifier
Es decir, refactorizando nuestro código tendríamos:
Para el block box:
.box {}
.box__title {}
.box__image {}
Vea que en el ejemplo del box no tenemos un modifier, ¡solo el block box y los <em>elements</em> title e image!
Vayamos a nuestro block navbar ahora:
.navbar {}
.navbar__item {}
.navbar__item--active {}
¿Recuerdas que active es nuestro modifier? ¡Voilà!
¡Hicimos el BEM en nuestro CSS! ¡Así es como lo hacemos en Alura hoy, ¡utilizando tanto las técnicas descritas en esta publicación como las técnicas descritas en la publicación anterior sobre la organización de archivos!
En estas dos publicaciones solo hablamos de <a href="https://www.aluracursos.com/cursos-online-front-end/html-css">HTML y CSS</a>, para javascript ya es de otra manera, ¡quizás también escriba una publicación hablando un poco sobre JS en el futuro!
Solo lo complementaré con algunas últimas informaciones:
BEM no es restrictivo, es decir, si separas sus bloques de elements y de modifiers, ¡ya está siguiendo un estándar BEM! Mira, en Alura solíamos seguir el estándar:
Block-element--modifier
Este estándar funcionó durante un tiempo, pero a medida que el código crecía, comenzamos a encontrarlo confuso, la diferencia entre element y modifier es solo 1 guión.
Esto empezó a ser un problema. ¡Si haces un inspect en algunas páginas de Alura hoy, todavía encontrarás un código como ese!
¡Gracias por leer y un gran abrazo!---
"Ordenar listas en Python"
2020-09-25
"Aprenda a ordernar listas de números, strings y objetos en Python. Vea también como es possíble realizar una ordenación reversa."
"alexfelipe"
"alexfelipevieira@gmail.com"
"data-science"

En mi sistema de registro de productos para un supermercado, recibí una lista con algunos productos:
[nombre:chocolate valor:3.45, 
 nombre:galleta valor:2.49, 
 nombre:cafe valor:3.45, 
 nombre:jugo valor:4.3, 
 nombre:porotos valor:10.0, 
 nombre:arroz valor:8.5]
Cada producto es un objeto del tipo Producto, está representado por la siguiente clase:

Código

Note que la lista tiene productos en orden aleatorio. Pero, necesito ordenarlos, es decir, saber cuáles son los productos más caros o los más baratos, o también, ordenarlos por el nombre para facilitar la visualización de los productos. Entonces, ¿cómo lo podemos hacer?
Ordenar lista de números
En Python, cuando necesitamos ordenar listas, podemos utilizar la función <a href="https://wiki.python.org/moin/HowTo/Sorting">sorted</a>, por ejemplo, para una lista de números:

Código

Tenemos el siguiente resultado:
[4, 2, 6, 1, 3] 
 [1, 2, 3, 4, 6]
Ordenar lista de strings
¡Funciona perfectamente! Pero, ¿también funciona para textos? Veamos:

Código

Entonces, tenemos el siguiente resultado:
['chocolate', 'galleta', 'cafe', 'jugo', 'porotos', 'arroz'] 
['arroz', 'cafe', 'chocolate', 'galleta', 'jugo', 'porotos']
Ordenar lista de objetos
¡Aparentemente funciona con todo! Entonces, también podemos usarlo para objetos:

Código

Veamos el resultado:

Código

Criterio de ordenación de objetos
Oye, ¿no debería ordenar? Debería, pero primero necesitamos hacernos las siguientes preguntas:

¿Cómo ordenamos un objeto del tipo Producto?
¿Por el atributo nombre? ¿O por el valor?

Observe que, en principio no sabemos, pues en determinados momentos, podemos querer ordenar por nombre o por valor. En otras palabras, el sorted, en principio, ¡también no sabe cómo ordenar nuestro objeto!
Supongamos que queremos ordenar por nombre, ¿cómo el sorted sabría eso? ¡No lo informamos en ningún momento!
Por lo tanto, cuando queremos ordenar un objeto del tipo Producto, debemos informar ¡por qué atributo se ordenará!
Definir criterio de ordenación del objeto
Para informar al sorted por qué atributo deseamos que ordene, debemos enviar el parámetro key con el valor del atributo de la clase deseada. Intentemos por el atributo valor:
productos_ordenados = sorted(productos, key = Producto.get_valor)
Observe que, en este caso, estamos utilizando el get_valor justamente por estar escondiendo el atributo. Veamos ahora el resultado:

Código

¡Vea que ahora nuestros objetos se ordenaron por el valor! En otras palabras, ahora están ordenados desde los más baratos hacia los más caros :D
¿Intentemos también por el nombre? Alteremos y veamos si resulta:
productos_ordenados = sorted(productos, key = Producto.get_nome)
Entonces, tenemos el siguiente resultado:

Código

Realizar ordenación reversa
¡Maravilla! ¡Funcionó como lo esperado! Sin embargo, ¿si quisiera el orden inverso? Es decir, desde el más caro hacia el más barato, o entonces, desde la letra "z" hacia la "a", ¿cómo lo haremos?
¡Sencillo! basta agregar el parámetro reverse con el valor True. Veamos el resultado ordenando por el valor:
productos_ordenados = sorted(productos, key = Producto.get_valor, reverse=True)
Tenemos el siguiente resultado:

Código

Ahora con el nombre:
productos_ordenados = sorted(productos, key = Producto.get_nombre, reverse=True)
Probando el código nuevamente:

Código

¡Funciona perfectamente! Un recurso muy fácil que no exige innúmeras implementaciones para que funcione :)
Vimos en esta publicación que, cuando queremos ordenar listas en Python, podemos usar la función sorted. También vimos que funciona perfectamente para strings o números, sin embargo, cuando queremos ordenar objetos, debemos informar cómo debe ordenar el objeto, es decir, enviando un atributo del objeto por medio del parámetro key.
¿Qué tal aprender más sobre Python y sus diversos recursos? Entonces, ¡mira nuestros cursos de Python para Data Science aquí en Alura!---
"Organizar estudio y portafolio con Notion en Alura"
2020-10-23
"Aprenda a aprender, organice tus horarios, tus objetivos y tu portafolio para una experiencia de aprendizaje más profunda no solo en Alura."
"natan-souza"
"programacao"

Al final de cada curso, de cada formación, ya sea en Alura o en otro lugar, tenemos la sensación: ¿aprendí algo? ¿Esta tecnología me ayudará a ser un mejor profesional y tener una carrera más impactante? Te ayudaré con puntos importantes para responder a estas preguntas.
Organiza tu plan de estudios
Importante antes de todo define bien tu meta, si caminamos a cualquier parte llegamos a cualquier parte. ¿Por qué quieres aprender lo que quieres aprender?
Con eso en mente, recomiendo ordenar todo en una página en <a href="https://www.notion.so/">Notion</a>, herramienta de gran utilidad para los que estudian. Es como un Google Docs pero con menos cara de documento y más cara de cuaderno, donde puedes personalizar todo a tu manera. Tiene funcionalidades y cosas interesantes como:

Markdown nativo;
<a href="https://www.notion.so/pricing">Versión robusta gratuita</a>;
<a href="https://www.notion.so/pricing">Plantillas gratis</a> y duplicables Notion;
Multiplataforma;
Colaboración en tiempo real;
Lista de tareas;
Calendario;

Piensa que puedes usar Notion como una herramienta para llenar el futuro de tu personaje-Dev. Alguien hizo la analogía con la ficha de RPG, con la creación de un personaje y la evolución de su árbol de habilidades, sus clases, sus clases múltiples. Trata de dejar claras tus metas a corto, mediano y largo plazo, incluso que cambien con el tiempo. Es muy importante tener una dirección para sumergirse en la carrera tecnológica.
Y así te organizas para convertirte en un Dev em, especializándose en una tecnología, en una plataforma, pero sin olvidar que en algún momento también será necesario trabajar con personas de otras áreas.
Muestra lo que eres capaz de hacer
¿Quiere un ejemplo de cómo puede compartir lo que ha aprendido? Echa un vistazo al <a href="https://www.linkedin.com/posts/vinicius-cmatos_conclu%C3%AD-a-forma%C3%A7%C3%A3o-de-front-end-da-alura-activity-6707105282310344704-d5BL">video y publicación que realizó nuestro alumno Vinícius De Matos en Linkedin</a>. O esta increíble publicación sobre cómo Felipe Lemes <a href="https://www.linkedin.com/pulse/como-utilizei-programa%25C3%25A7%25C3%25A3o-para-otimizar-meu-trabalho-engenheiro/?trackingId=MwRnACltUD1ApatZXqnRfw%3D%3D">usó Python y programación en Ingeniería Ambiental para automatizar tareas</a>.
Puedes crear un video que muestre lo que has desarrollado y aprendido. Incluso puedes hablar un poco sobre el código del proyecto, del diseño, de las decisiones. ¡Comparte en tu Linkedin y etiquétanos! Es más fácil de lo que piensas y ayuda a consolidar los conocimientos adquiridos e a inspirar a otros.
Puede usar extensiones de Chrome para grabar un video que muestre su proyecto, pero hay varios otros programas:

<a href="https://chrome.google.com/webstore/detail/screencastify-screen-vide/mmeijimgabbpbgpdklnllpncmdofkcpn">Screencastify</a>
<a href="https://chrome.google.com/webstore/detail/screen-recorder/hniebljpgcogalllopnjokppmgbhaden?hl=pt-BR">Screen Recorder</a>

Otras herramientas para organizar tus estudios

<a href="https://evernote.com/intl/pt-br">Evernote</a>
<a href="https://trello.com/">Trello</a>
<a href="https://www.alura.com.br/artigos/docs.google.com">Google Docs</a>
Agenda física

Aprendiendo a aprender
"¿Cómo me organizo con mis estudios? No puedo organizarme... "
Consulte estos consejos <a href="https://www.aluracursos.com/blog/5-formas-de-ayudarte-a-crear-mejores-habitos">cómo crear mejores habitos</a>
Alura ofrece cursos y formaciones completas para que aprendas nuevas tecnologías del mundo de negocios. A través de nuestra comunidad activa, clases de video de alta calidad y ejercicios prácticos, ¡Estarás preparado en poco tiempo!---
"POO: ¿Qué es la programación orientada a objetos?"
2020-11-10
"La programación orientada a objetos facilita la reutilización y el mantenimiento de tu código a través del encapsulado, abstracción, polimorfismo, Design Patterns y la separación de interfaz e implementación. En este artículo dejaremos clara su diferencia con el paradigma estructurado."
johl-b
"programacao"

Programación orientada a objetos y programación estructurada
Como la mayoría de las actividades que hacemos a diario, la programación también tiene diferentes formas de hacerla. Estos modos se llaman paradigmas de programación y entre ellos están la programación orientada a objetos (POO) y programación estructurada. Cuando comenzamos a usar lenguajes como Java, C#, Python y otros que posibilitan el paradigma orientado a objetos, es común cometer errores y aplicar la programación estructurada pensando que estamos usando recursos de la orientación a objetos.
En la programación estructurada, un programa consta de tres tipos básicos de estructuras:

secuencias: son los comandos a ejecutar
condiciones: secuencias que solo deben ejecutarse si se cumple una condición (ejemplos: if-else, switch y comandos similares)
repeticiones: secuencias que deben realizarse repetidamente hasta que se cumpla una condición (for, while, do-while, etc.)

Estas estructuras se utilizan para procesar la entrada del programa, cambiando los datos hasta que se genera la salida esperada. Hasta ahora, nada que la programación orientada a objetos no haga también, ¿verdad?
La principal diferencia es que, en la programación estructurada, un programa generalmente se escribe en una sola rutina (o función) y, por supuesto, puede dividirse en subrutinas. Pero el flujo del programa sigue siendo el mismo, como si pudiéramos copiar y pegar el código de las subrutinas directamente en las rutinas que las llaman, de tal forma que, al final, solo haya una gran rutina que ejecuta todo el programa.

imagen

Además, el acceso a las variables no tiene muchas restricciones en la programación estructurada. En lenguajes fuertemente basados en este paradigma, restringir el acceso a una variable se limita a decir si es visible o no dentro de una función (o módulo, como en el uso de la palabra clave static, en lenguaje C), pero no es posible decir de forma nativa que solo se puede acceder a una variable mediante unas pocas rutinas del programa. El esquema para situaciones como estas implica prácticas de programación perjudiciales para el desarrollo del sistema, como el uso excesivo de variables globales. Vale la pena recordar que las variables globales se usan típicamente para mantener estados en el programa, marcando en qué parte de la ejecución se encuentra.
La programación orientada a objetos surgió como una alternativa a estas características de la programación estructurada. El propósito de su creación fue también acercar el manejo de las estructuras de un programa al manejo de las cosas en el mundo real, de ahí el nombre "objeto" como algo genérico, que puede representar cualquier cosa tangible.
Este nuevo paradigma se basa principalmente en dos conceptos clave: clases y objetos. Todos los demás conceptos, igualmente importantes, se basan en estos dos.
¿Qué son clases y objetos?
Imagine que recientemente compraste un auto y decidiste modelar ese auto utilizando programación orientada a objetos. Tu auto tiene las características que estabas buscando: motor 2.0 híbrido, azul oscuro, cuatro puertas, cambio automático, etc. También tiene comportamientos que probablemente fueron el motivo de tu compra, como acelerar, reducir la velocidad, encender los faros, tocar la bocina y tocar música. Podemos decir que el auto nuevo es un <em>objeto</em>, donde sus características son sus <em>atributos</em> (datos vinculados al objeto) y sus comportamientos son acciones o <em>métodos</em>.
Tu auto es un objeto tuyo pero en la tienda donde lo compraste habían otros tantos, muy similares, con cuatro ruedas, volante, cambio, espejos retrovisores, faros, entre otras partes. Tenga en cuenta que, aunque tu auto es único (por ejemplo, tiene un registro único en el Departamento de Tránsito), puede haber otros con exactamente los mismos atributos, o similares, o incluso totalmente diferentes, pero que aún se consideran <em>autos</em>. Entonces podemos decir que tu objeto se puede clasificar (es decir, tu <em>objeto pertenece a una clase</em>) como un auto, y que tu auto no es más que una instancia de esa clase llamada "auto".

imagen

Así, abstrayendo un poco la analogía, una clase es un conjunto de características y comportamientos que definen el conjunto de objetos pertenecientes a esta clase. Tenga en cuenta que la clase en sí es un concepto abstracto, como un molde, que se vuelve concreto y palpable a través de la creación de un objeto. Llamamos a esta creación de <em>instanciación de clase</em>, como si estuviéramos usando este molde (clase) para crear un objeto.
Ejemplo de Java

Código

Ejemplo en Python

Código

Encapsulamiento, herencia y polimorfismo: las principales características de la POO
Las dos bases de la POO son los conceptos de clase y objeto. De estos conceptos derivan algunos otros conceptos extremadamente importantes al paradigma, que no solo lo definen, sino que son las soluciones a algunos problemas de la programación estructurada. Los conceptos en cuestión son el <em>encapsulamiento</em>, la <em>herencia</em>, las <em>interfaces</em> y el <em>polimorfismo</em>.
Encapsulamiento
Aún usando la analogía del auto, sabemos que tiene atributos y métodos, es decir, características y comportamientos. Los métodos del auto, como acelerar, pueden usar atributos y otros métodos del auto, como el tanque de gasolina y el mecanismo de inyección de combustible, respectivamente, ya que acelerar consume combustible.

imagen

Sin embargo, si algunos de estos atributos o métodos son fácilmente visibles y modificables, como el mecanismo de aceleración del auto, esto puede darle libertad para realizar cambios, lo que resulta en efectos secundarios imprevisibles. En esta analogía, una persona puede no estar satisfecha con la aceleración del auto y cambia la forma en que se produce, creando efectos secundarios que pueden hacer incluso con que el auto ni ande, por ejemplo.
En este caso, decimos que el método de aceleración de su auto no es visible desde el exterior del mismo auto. En la POO, un atributo o método que no es visible desde afuera del mismo objeto se llama "privado" y cuando está visible, se llama "público".

imagen

Pero entonces, ¿cómo sabemos cómo acelera nuestro auto? Es simple: no lo sabemos. Solo sabemos que para acelerar hay que pisar el acelerador y el objeto sabe cómo realizar esta acción sin exponer cómo lo hace. Decimos que la aceleración del auto está encapsulada, porque sabemos lo que hará cuando ejecutemos este método, pero no sabemos cómo, y de hecho, al programa no le importa cómo lo hace el objeto, solo que lo haga.
Lo mismo ocurre con los atributos. Por ejemplo: no sabemos cómo el auto sabe qué velocidad mostrar en el velocímetro o cómo calcula su velocidad, pero no necesitamos saber cómo se hace eso. Solo necesitamos saber que nos dará la velocidad adecuada. Se puede leer o cambiar un atributo encapsulado desde <em>getters</em> y <em>setters</em>
.
Ese encapsulamiento de atributos y métodos evita la llamada <em>fuga de alcance</em>, donde un atributo o método es visible para alguien que no debería poder verlo, como otro objeto o clase. Esto evita confundir el uso de variables globales en el programa, facilitando identificar en qué estado estará cada variable en cada momento del programa, ya que la restricción de acceso nos permite identificar quién puede modificarla.
Ejemplo en Java

Código

Ejemplo en Python

Código

Herencia
En nuestro ejemplo, acabas de comprar un auto con los atributos que buscabas. A pesar de ser únicos, hay autos con exactamente los mismos atributos o formas modificadas. Digamos que compraste el modelo Fit de Honda. Este modelo tiene otra versión llamada WR-V (o "Honda Fit Cross Style"), que tiene muchos de los atributos de la versión clásica, pero con algunas diferencias muy grandes para transitar por caminos de tierra: el motor es híbrido (acepta alcohol y gasolina), tiene un sistema de suspensión diferente, y supongamos que además tenga un sistema de tracción diferente (tracción a las cuatro ruedas, por ejemplo). Vemos entonces que no solo cambian algunos atributos sino también algunos mecanismos (o métodos, traduciéndose a POO), pero esta versión "cross" sigue siendo el modelo Honda Fit, es decir,es <em>un tipo</em> del modelo.
Cuando decimos que una clase A es <em>un tipo de</em> clase B, decimos que clase A <em>hereda</em> las características de la clase B y que la clase B es <em>madre</em> de la clase A, estableciendo entonces una relación de herencia entre ellas. En el caso del auto, decimos que un Honda Fit "Cross" es <em>un tipo de</em> Honda Fit, y lo que cambia son algunos atributos (tapabarros reforzado, altura de la suspensión, etc.), y uno de los métodos de la clase (acelerar, ya que ahora hay tracción en las cuatro ruedas), pero todo lo demás sigue igual, y el nuevo modelo recibe los mismos atributos y métodos que el modelo clásico.
Ejemplo en Java

Código

Ejemplo en Python

Código

Interfaz
Muchos de los métodos de los autos son comunes en muchos automóviles. Tanto un auto como una motocicleta son clases cuyos objetos pueden acelerar, frenar, encender los faros, etc., ya que son comunes a los automóviles. 
Podemos decir, entonces, que tanto la clase "auto" como la "motocicleta" <em>son</em> "automóviles".
Cuando dos (o más) clases tienen comportamientos comunes que pueden separarse en otra clase, decimos que la "clase común" es una <em>interfaz</em>, que puede ser "heredado" por las otras clases. Tenga en cuenta que colocamos la interfaz como una "clase común", que puede ser "heredada" (con comillas), porque una interfaz no es exactamente una clase, sino un conjunto de métodos que todas las clases que heredan de ella deben tener (implementar) - por lo tanto, una interfaz no es "heredada" por una clase, sino <em>implementada</em>. En el mundo del desarrollo de software, decimos que una interfaz es un "contrato": una clase que implementa una interfaz debe proporcionar una implementación para todos los métodos que define la interfaz y, a cambio, la clase de implementación puede decir que es del tipo de interfaz. En nuestro ejemplo, "auto" y "motocicleta" son clases que implementan los métodos de la interfaz "automóvil", por lo que podemos decir que cualquier objeto de estas dos primeras clases, como una Honda Fit o una motocicleta Yamaha, son automóviles.
Un pequeño detalle: una interfaz no puede ser heredada por una clase, sino implementada. Sin embargo, una interfaz puede heredar de otra interfaz, creando una jerarquía de interfaces. Usando un ejemplo completo con autos, decimos que la clase "Honda Fit Cross" hereda de la clase "Honda Fit", que a su vez hereda de la clase "Auto". La clase "Auto" implementa la interfaz "Automóvil" que, a su vez, puede heredar (por ejemplo) una interfaz llamada "MedioDeTransporte", ya que tanto un "automóvil" como un "carro" son medios de transporte, aunque un carro no sea un automóvil.
Ejemplo en Java

Código

Ejemplo en Python

Código

Nota: crea un error de tipo NotImplementedError es solo una convicción de que, si una clase hija intenta ejecutar un método de la clase padre sin haberlo implementado, se produce el error. En Python, las interfaces se crean como clases normales que heredan las clases hijas. Hay formas de forzar la implementación por parte de las clases hijas, pero para nuestro ejemplo, este abordaje es suficiente.
Polimorfismo
Digamos que una de las razones por las que compraste un auto fue la calidad de su sistema de sonido. Pero, en su caso, digamos que la reproducción solo se puede hacer por radio o <em>bluetooth</em>, mientras está en su auto antiguo, solo se puede hacer a través de la tarjeta SD y <em>pendrive</em>. El método de "reproducir música" está presente en ambos autos, pero como su sistema de sonido es diferente, la forma en que el automóvil reproduce música es diferente. Decimos que el método "reproducir música" es una forma de polimorfismo, porque dos objetos, de dos clases diferentes, tienen el mismo método que se implementa de diferentes maneras, es decir, un método tiene <em>varias formas</em>, varias implementaciones diferentes en diferentes clases, pero que tienen el mismo efecto ("polimorfismo" proviene del griego <em>poli</em> = muchas, <em>morfos</em>= forma).
Ejemplo en Java
public class Main {
    public static void main(String[] args) {
        Automovil moto = new Moto("Yamaha XPTO-100", new MecanismoDeAceleracionDeMotos())
        Automovil auto = new Auto("Honda Fit", new MecanismoDeAceleracionDeAutos())
        List&lt;Automovil&gt; listaAutomoviles = Arrays.asList(moto, auto);
        for (Automovil automovil : listaAutomoviles) {
            automovil.acelerar();
            automovil.encenderFaro();
        }
    }
}
Ejemplo en Python
def main():
    moto = Moto("Yahama XPTO-100", MecanismoDeAceleracionDeMotos())
    auto = Auto("Honda Fit", MecanismoDeAceleracionDeAutos())
    listaAutomoviles = [moto, auto]
    for automovil in listaAutomoviles:
        automovil.acelerar()
        automovil.encenderFaro()
Tenga en cuenta que aunque son objetos diferentes, moto y auto tienen los mismos métodos acelerar y encenderFaro, que se llaman igual, a pesar de estar implementados de manera diferente.
Design Patterns
Algunos problemas aparecen con tanta frecuencia en POO que sus soluciones se han convertido en estándares de diseño de sistemas y modelado de código orientado a objetos para solucionarlos. Estos estándares de proyecto, (o design patterns) no son más que formas estandarizadas de solucionar problemas comunes en lenguajes orientados a objetos. El libro "Design Patterns", conocido como Gof:Gang of Four, es la principal referencia en este tema, conteniendo los principales estándares utilizados en grandes proyectos. 
Clean code y SOLID
En proyectos desarrollados con POO, como en cualquier otro, el código puede volverse desordenado y difícil de mantener a medio y largo plazo. Ante esta situación, se han desarrollado algunos principios de buenas prácticas de programación y código limpio, por ejemplo:

KISS (<em>Keep It Simple, Stupid</em>, "Mantenga las cosas sencillas"): Siempre que se escribe un código, debe escribirse de la manera más sencilla posible, para mantener el código más legible. Códigos demasiado complejos son más difíciles de mantener, ya que es más difícil entender qué hace y cómo lo hace.
DRY (<em>Don't Repeat Yourself</em>, "No repita"): Todo el código escrito para solucionar un problema debe escribirse solo una vez, para evitar la repetición del código. Es casi una variación de KISS, ya que la repetición del código lo hace más confuso y difícil de mantener y corregir, si es necesario.

Además de los design patterns y de los principios del código limpio existe un conjunto de técnicas, más generalizadas que los design patterns, que ayudan a crear código orientado a objeto para hacerlo más maleable, permitiendo un mantenimiento y expansión del código más fluido y sin complicaciones a lo largo del tiempo.
Alura ofrece cursos y formaciones completas para que aprendas nuevas tecnologías del mundo de negocios. A través de nuestra comunidad activa, clases de video de alta calidad y ejercicios prácticos, ¡Estarás preparado en poco tiempo!---
"Por una web más rápida: 26 técnicas de optimización de Sitios Web"
2020-10-15
"A ningún usuario le gusta perder el tiempo esperando que se carguen las páginas web. Vea cómo puedes evitar este problema."
"sergiolopes"
"slopes@gmail.com"
"front-end"

<em>La primera versión de esta publicación proviene de una conferencia en QCon sobre cómo optimizar el desempeño de la carga de páginas en la Web</em>.
¿Por qué es tan importante optimizar nuestros Sitios Web? Simplemente porque a ningún usuario le gusta perder el tiempo esperando que se carguen las páginas. Es extremadamente irritante. Y esto tiene graves consecuencias, como muestran estos estudios:

Yahoo! descubrió que por cada 400 ms de mejora del desempeño, su tráfico aumenta en un 9% (<a href="http://www.slideshare.net/stoyan/yslow-20-presentation">fuente</a>).
Al cortar 2.2s de la landing page de Firefox, Mozilla aumentó el número de descargas en un 15%, totalizando una ganancia de más de 60 millones de copias al año (fuente).
Amazon llegó a la conclusión de que solo 100 ms de mejora aumentan sus ingresos un 1% (<a href="http://blog.mozilla.com/metrics/category/website-optimization/">fuente</a>).
En uno de sus varios experimentos, Google aumentó el número de resultados por página de 10 a 30. Esto aumentó el tiempo de carga de 0,4 s a 0,9 s, lo que redujo el tráfico de búsquedas en un 20% (<a href="http://glinden.blogspot.com/2006/11/marissa-mayer-at-web-20.html">fuente</a>).
Microsoft mostró que 2 segundos más de latencia en Bing redujo la facturación en un 4,3% (<a href="http://velocityconference.blip.tv/file/2279751/">fuente</a>).
En un experimento, Caelum (empresa del grupo Alura em Brasil) aumentó el tamaño de la página de 100 kb a 300 kb, aumentando el número de requests de 12 a 42, lo que resultó en un aumento en el tiempo de carga de 2 s a 6 s. Los impactos fueron una caída del 21% en el tiempo que los usuarios pasan en el Sitio, un 28% menos de páginas visitadas y una caída del 18% en tasa de conversión.

Pero hablar de optimizaciones del navegador en un evento como QCon puede parecer básico. Tantos arquitectos, discusiones de alto nivel sobre nuevas plataformas como Node.JS y procesamiento asincrónico, varias conferencias sobre computación en la nube (cloud computing), todos usan memcache y muchas otras técnicas avanzadas.
Entonces, para contextualizar aún más la discusión, analicé los datos de los Sitios de todos los participantes del evento. Basándome en los correos electrónicos de los inscritos (descartando correos web como GMail, Hotmail, etc.), separé más de 100 dominios para pruebas, incluyendo grandes portales brasileños, empresas de tecnología, sitios web gubernamentales y otros. Envié todo al <a href="http://www.webpagetest.org/">WebPageTest.org</a> y recompilé los resultados.
El número más importante, el tiempo total de carga, ya da una idea de la situación. Los sitios analizados tardan, en promedio, 9 segundos para cargarse, algunos de los cuales tardaron más de 40 segundos. Y la gran verdad es que el desempeño final para el usuario depende mucho más del client-side que del server-side. De todos los sitios analizados, la inmensa mayoría, el 75%, tuvo un tiempo de procesamiento de menos de 400 ms en el servidor.
Hay mucho margen de mejora en la mayoría de los Sitios. Y la conferencia cubre varios temas de optimización.
Técnicas de optimización
Reduzca el tamaño de los requests
Buena práctica en cualquier aplicación distribuida es reducir el <em>payload</em>, es decir, el volumen de datos transferidos, es un principio básico. Y hay varias formas de hacerlo.
Al analizar las páginas de los participantes del evento, el tamaño medio fue de 860 kb. Además, el 35% de los Sitios tienen un tamaño superior a 1 MB, y el peor de los casos alcanzaba los increíbles 8 MB.
Habilite GZIP
Hace mucho tiempo digo que habilitar GZIP en el servidor es el primer paso. No tarda más de 30 segundos y es compatible con todos los navegadores y servidores durante los últimos 15 años. Con él, todo el contenido textual (HTML, CSS, JS, etc.) se comprime antes de ser enviado al cliente, acortando más del 50% del tráfico total.
Sin embargo, en el análisis de los Sitios, encontré que el 43% de todos los requests textuales no estaban gzipados. Más: solo el 14% de los Sitios tenía gzip en todos los requests.
Minifique JavaScript
Un código JS bien hecho está bien documentado, todo identificado y tiene nombres de variables legibles. Pero nada de eso cuenta para ejecutar el script, y el tráfico de ese montón de bytes es un desperdicio. En cuestión de minutos, es posible integrar una herramienta de minificación de JavaScript, como <a href="http://developer.yahoo.com/yui/compressor/">YUI Compressor</a>, <a href="http://code.google.com/closure/compiler/">Google Closure Compiler</a> o <a href="https://github.com/mishoo/UglifyJS">UglifyJS</a>.
Muchos Sitios generalmente incluyen algunos scripts ya minificados como jQuery (con su archivo jquery-min). A pesar de esto, de los Sitios analizados, solo el 13% minificaba todos los JavaScripts.
Minifique CSS
Minificar los archivos CSS es igualmente importante. Para eso, podemos usar el <a href="http://developer.yahoo.com/yui/compressor/">YUI Compressor</a> e incluso el <a href="http://lesscss.org/">LESS compiler</a>.
Comprima el HTML
El código HTML también se puede comprimir, eliminando espacios, comentarios e incluso ciertas comillas y cierra tags innecesarias. Google, por ejemplo, no cierra &lt;/html&gt; o &lt;/body&gt; en su home, ya que esto no perjudica a ningún navegador y ahorra algunos bytes más.
El excelente <a href="http://code.google.com/p/htmlcompressor/">HTML Compressor</a> permite varias optimizaciones y es muy configurable. Comprimir HTML no suele ser sencillo porque, en general, tratamos con páginas dinámicas.
No redimensione imágenes en HTML
Principio básico de optimizaciones, nunca dejar de reducir imágenes configurando el width y height en HTML o CSS. Siempre redimensione el archivo original y haga referencia al tamaño directo.
Optimice imágenes
Dentro de un archivo PNG o JPG, se guardan muchos datos. Además de la información de la imagen en sí, hay metadatos como EXIF y, a veces, incluso una miniatura de la imagen en sí. Nada de esto es necesario para renderizar la imagen en la pantalla y se puede eliminar. Este tipo de optimización, llamada <em>lossless</em>, sin pérdida de calidad visual, es lo mínimo que debe hacer cualquier aplicación. Con el <a href="http://smushit.com/">Smush.it</a>, por ejemplo, simplemente envíe las imágenes y recíbelas de vuelta optimizarlas. Otras herramientas incluyen el <a href="http://imageoptim.pornel.net/">ImageOptim</a> además de varias opciones de línea de comando para la automatización (pngquant, optipng, pngcrush, pngout, advpng).
La optimización de imágenes es esencial porque a menudo son la parte más pesada de las páginas Web. En el análisis de los Sitios de los conferencistas, en promedio, 47% de los bytes de la página eran imágenes.
A pesar de esto, solo el 15% de los Sitios optimizan todas las imágenes. Para 1/4 de los Sitios, la optimización de las imágenes ahorraría más del 40% de los bytes totales.
Pero también es posible aplicar transformaciones <em>lossy</em>, es decir, disminuir la calidad de las imágenes para mejorar el desempeño. Muchos diseñadores ni siquiera consideran esta posibilidad, pero el hecho es que mucho en el mundo es <em>lossy</em>. Un MP3, por ejemplo, disminuye la calidad del audio original para promover la movilidad. Disminuir la calidad de una foto JPEG con poco impacto visual notable puede generar enormes ganancias. El nuevo servicio <a href="http://www.jpegmini.com/main/home"> JPEGMini</a>, por ejemplo, tiene un algoritmo avanzado que disminuye la calidad de JPEG basándose en un modelo matemático que simula las características de la percepción humana. El resultado son imágenes que tienen menos de la mitad del tamaño y son visualmente idénticas.
Piense en el formato de las imágenes
Los formatos de imagen que se pueden utilizar en la Web son PNG, JPEG y GIF. Pero, ¿cuál usar y cómo elegir el formato correcto? Hay varios factores. PNG y GIF mantienen la fidelidad de la imagen; JPEG es un formato <em>lossy</em> cuya compresión siempre causa pérdida de calidad (de hecho, es por eso que nunca debes editar archivos JPEG directamente; cada vez que guardas el archivo, pierdes calidad). Como resultado, un PNG suele ser más interesante para gráficos cuando las fotos son más pequeñas en JPEG.
Otro punto es que los PNG admiten la transparencia del canal alfa, mientras que los GIF solo tienen transparencia total y JPEG no admite la transparencia. En general, los PNG de hoy son superiores a los GIF y la única razón para usar estos últimos es cuando hay animaciones.
Pero incluso cuando usa PNG, puede elegir entre dos formatos diferentes: PNG8 y PNG24. El PNG clásico es un PNG de 24 bits que admite millones de colores y se exporta de forma predeterminada por todas las herramientas gráficas. Pero PNG8 reduce la paleta a 8 bits, 256 colores como máximo, al igual que los viejos GIF. La ventaja de PNG8 es que tiene un tamaño mucho menor y es muy útil para imágenes con pocos colores (logotipos, gráficos simples, etc.).
Reduzca cookies y headers
Un último paso para reducir el tráfico es minimizar los encabezados involucrados en la solicitud y la respuesta. De estos, las cookies son a menudo el peor villano, ya que se envían en cada solicitud entre el cliente y el servidor. Incluso hay una recomendación de <a href="http://code.google.com/speed/page-speed/docs/request.html#ServeFromCookielessDomain">servir contenido estático de dominios sin cookies</a>.
Reduzca la cantidad de requests
Otro principio básico de cualquier sistema distribuido, minimizar el número de invocaciones remotas es fundamental para un buen desempeño. En la Web, esto significa reducir los requests realizados en la página para recursos externos: archivos JS, CSS, imágenes, Flash, videos, etc.
En el estudio de los Sitios de los participantes de QCon, el promedio de requests es de 65 por página, con un 17% que tiene más de 100 requests.
Junte archivos JavaScript
El análisis mostró que, en promedio, los Sitios llaman a 10 archivos JavaScript externos. El peor de los casos fue un Sitio que llamó a increíbles 54 archivos JS. La solución es sencilla: juntar varios archivos y reducir el total. Lo ideal es que la aplicación lo haga dinámicamente o en build time, de modo que no sea necesario hacerlo manualmente. No hay un número ideal de archivos JS, pero recomiendo, como máximo, entre 3 y 5 archivos.
Juntar archivos CSS
El mismo principio se aplica a los archivos CSS. En ese caso, recomiendo 1 o 2 archivos externos. En el análisis de los Sitios, el promedio fue de 5 archivos por página, y en el peor de los casos llegó a 24 archivos CSS externos.
Use Sprites
Aplicar la misma idea de juntar archivos a imágenes no es tan sencillo. Los sprites son imágenes que combinan varias otras en una, como la que se usa en Google:

imagen

El problema es crear estas imágenes, que es difícil de automatizar y gestionar el CSS necesario para colocar cada pieza en el lugar correcto. Hay ideas para la automatización como <a href="http://spriteme.org/">Sprite.me</a>, <a href="http://yostudios.github.com/Spritemapper/">SpriteMapper</a>, <a href="http://www.spritecow.com/">SpriteCow</a> y  <a href="http://csssprites.org/">SmartSprites</a>.
Al crear sprites, se deben considerar muchos puntos: es difícil lidiar con imágenes que necesitan repetición. Es necesario pensar en el espacio entre imágenes para facilitar el posicionamiento en el CSS, sin dejar el sprite con un área muy grande, lo que provocaría un gran uso de memoria en el navegador. Es necesario pensar en la similitud de las imágenes para que, al unirlas, no tengamos una paleta de colores más grande y poca compresión. Tenemos que decidir el formato del sprite (¿PNG? ¿JPEG?) Y cómo unificar las mismas características de calidad y compresión de diferentes imágenes.
Los Sprites son complicados de hacer, pero esenciales para una optimización seria. Al analizar los Sitios de los participantes de QCon, más de la mitad de referencia 36 imágenes o más. En el peor de los casos, se incluyeron 144 imágenes en una sola página.
Use Data URIs
Esta es una característica peligrosa pero extremadamente útil. Así como podemos embutir contenido CSS y JS en el medio del HTML cuando sea conveniente, con las <a href="http://en.wikipedia.org/wiki/Data_URI_scheme">data URIs</a>, podemos embutir imágenes y otros elementos binarios. No es un recurso para abusar, ya que aumenta el tamaño del HTML y no permite que la imagen sea almacenada en caché y referenciada en diferentes lugares. Es posible utilizar data URI en archivos CSS almacenables en caché, que es una práctica más recomendada.
La idea es transformar los datos binarios de una imagen en base64 y colocarlos directamente en el src de una imagen. Un problema es que IE solo es compatible a partir de la versión 8, aunque todos los demás navegadores lo han soportado durante mucho tiempo. Esto no le impide ofrecer diferentes versiones del Sitio para navegadores más antiguos, por ejemplo. Google Images es un ejemplo emblemático de uso de <a href="http://en.wikipedia.org/wiki/Data_URI_scheme">data URI</a>.
Configure los headers
La estrategia aquí es permitir que los recursos estáticos sean almacenados en <a href="http://code.google.com/speed/page-speed/docs/caching.html">caché por el navegador</a>, evitando nuevos requests cuando el usuario vuelva a visitar la página. En unos segundos es posible configurar el servidor para que atienda requests con valores adecuados de Expires, Last-Modified, Cache-Control y ETag.
En el estudio de los Sitios, descubrí que al acceder dos veces a la misma página, el segundo acceso dispara, en promedio, 46 nuevos requests. Y también el 87% de los sitios dispararon más de 10 requests en este segundo acceso, una fuerte indicación de que se hace poco uso de la función de caché del navegador. Un valor razonable sería mantener ese número en menos de 5 requests y, si es posible, solo 1 o 2.
Elimine el exceso de detalle y cosas innecesarias del diseño
Controvertido, este tema propone que el diseño se haga teniendo en cuenta el desempeño. Quizás muchos diseñadores y diseñadoras no estén de acuerdo, pero los números muestran que la velocidad es más importante para el usuario que los diseños detallados y cargados.
Esta práctica incluye reducir la dependencia del layout para imágenes externas, evitar el uso de fuentes externas, no usar Flash para diseño, entre otros.
El Desempeño se mide por la percepción del usuario
La percepción humana es mucho menos racional de lo que pensamos. Y, en la Web, esto refleja directamente cómo los usuarios perciben la velocidad del Sitio (y credibilidad, atractivo, etc.). Hay estudios que muestran que la percepción de los usuarios sobre el tiempo de carga es, en promedio, un 15% peor que la real. Y, cuando se le pregunta posteriormente sobre el desempeño de un Sitio, la memoria suele ser un 35% peor que la velocidad real (<a href="http://www.webperformancetoday.com/2010/06/15/everything-you-wanted-to-know-about-web-performance/">fuente</a>).
En la web, la cantidad de segundos que tarda la página en cargarse y la nota YSlow son métricas importantes, pero no es solo eso. Performance Web se trata de usabilidad y UX, y es el usuario final quien dice lo rápido que es o no un Sitio.
Existen varias técnicas de optimización que no afectan el tiempo de carga de la página y pueden no mejorar su calificación de YSlow. Son técnicas para hacer más favorable la percepción del usuario a su Sitio, dando la sensación de velocidad aunque el reloj indique lo contrario.
Especifique el tamaño de las imágenes
Fácil de implementar, esta práctica tiene un gran impacto visual para el usuario. Cuando no especificamos el tamaño de la imagen, el navegador no reserva un espacio en la página para ello. El efecto es que cuando llega la imagen, se coloca en su lugar empujando el resto del contenido. Esto da la sensación de que los elementos de la página se mueven y que la página aún no se ha cargado. Es una práctica de usabilidad terrible y da la sensación de más lentitud.
Simplemente <a href="http://code.google.com/speed/page-speed/docs/rendering.html#SpecifyImageDimensions">especificar el tamaño correcto de la imagen en el ancho y alto del HTML o CSS</a> hace que el navegador reserve espacio para la imagen incluso antes de que se complete la descarga. Cuando llega, el navegador no necesita hacer espacio y empujar el resto de elementos, dando la sensación de que la página se carga más rápido. Además, al evitar el reposicionamiento de elementos, evita <a href="http://www.phpied.com/rendering-repaint-reflowrelayout-restyle/">reflowss y repaints</a> desnecesarios.
Coloque el JavaScript al final
El código JavaScript, interno o externo, bloquea la representación de todo lo que se encuentra debajo. En algunos navegadores, incluso bloquea la descarga de componentes siguientes. Para evitar este bloqueo, coloque JavaScript lo más abajo que pueda; si es posible, justo antes de cerrar el body.
El efecto más común de JavaScript mal posicionado es que la pantalla se queda en blanco durante mucho tiempo, lo que retrasa el inicio de la renderización. El sentido común tiene JavaScripts colocados en el head, lo que hace que se bloquee la renderización de toda la pantalla. Al analizar los Sitios de los conferencistas, la espera promedio para que comience la renderización fue de 4.3 s. El peor de los casos dejó el navegador totalmente en blanco durante 25 segundos. El Sitio web de Alura, por ejemplo, comienza la renderización en aproximadamente 0,7 segundos.
Coloque el CSS al tope
CSS también bloquea la renderización de la pantalla, pero, en este caso, es mejor la mayor parte del tiempo. Dejar el CSS tendría el efecto conocido como <em><a href="http://en.wikipedia.org/wiki/Flash_of_unstyled_content">FOUC – Flash of Unstyled Content</a></em>. La página se renderiza sin estilo y, cuando se acaba de descargar el CSS, se rediseña con estilo.
Aunque esto hace que la página comience a mostrarse ante el usuario, en la mayoría de los Sitios, mostrar una página sin estilos no tiene ningún valor para el usuario. El diseño es sin estructura, sin organización, y el efecto es que la página está tardando más en cargarse. Por eso, <a href="http://code.google.com/speed/page-speed/docs/rendering.html#PutCSSInHead">coloque el CSS al tope del documento</a>, preferiblemente en el head.
Postergue la carga de lo que pueda y Abuse de la carga asíncrona
Una de las técnicas avanzadas más discutidas últimamente, y la más efectiva, es el uso de la carga asíncrona de los componentes de la página. Esto evita bloquear la renderización y hace que la página sea más responsiva.
Optimice el First-View y el Above the Fold Time
Como dice el dicho, la primera impresión es la que cuenta. Esto significa optimizar al máximo la primera visita del usuario, aquella en la que la caché del navegador estará vacía, aquella en la que aún no conoce su Sitio y aquella en la que trae todas sus expectativas.
Es necesario comprender cómo ocurre la interacción del usuario y priorizar los componentes y el orden de renderización de la página para ese primer contacto. Algunos hablan de una nueva métrica, el <em>Above the Fold Time</em> – AFT - que mide el tiempo de carga desde el inicio de la página, "arriba de la página", esa parte que el usuario ve sin desplazarse. El <a href="http://www.infinite-scroll.com/">scroll infinito</a> de Twitter es un ejemplo de esto; los datos inferiores solo se cargan cuando el usuario se desplaza allí. O la página del producto de Amazon que le permite cargar algunos componentes al final de la página solo cuando el usuario llega allí.
Incluso sin utilizar técnicas avanzadas como el desplazamiento infinito, priorizar AFT es pensar en el orden de los elementos en HTML para que las cosas que se mostrarán antes se carguen primero. Posponer ese widget de Facebook en la parte inferior de la página para que se cargue solo después del onload, por ejemplo. Proporciona un menú de opciones que no depende de JavaScript para funcionar, ya que se ejecutará en último lugar. Al final, se trata de centrarse en la primera experiencia de usuario y posponer todo lo que no sea necesario para ello.
Diseño performático
Un área que merece una publicación para sí es cómo el diseño de la página puede afectar la percepción de velocidad del usuario. Google Reader solía usar un fondo azul claro en su barra lateral y decidió intentar cambiar a blanco. Cuando se les preguntó, la mayoría de los usuarios dijeron que el "nuevo sitio" era más rápido que el anterior (<a href="http://www.phpied.com/psychology-of-performance/">fuente</a>).
La <em><a href="https://www.phpied.com/psychology-of-performance/">Psicología del Desempeño</a></em> involucra muchos temas de diseño, UX y usabilidad. Un diseño más ligero, una arquitectura de información más simple, una <em>call-to-action</em> más directa influencian directamente sobre cómo los usuarios perciben el desempeño.
Bono: más temas
Automatice
El secreto de un Sitio web con un desempeño constante y perdurable es automatizar el proceso. Haz un script que minifique JS y CSS, automatice la optimización de imágenes, etc. Cualquier proceso repetitivo debe ser automatizado, de lo contrario pronto el equipo lo dejará de lado.
Use herramientas de diagnóstico
Supervise tus páginas constantemente con herramientas de diagnóstico. Hay varias disponibles:

Paneles de monitoreo de los propios navegadores, como <a href="http://getfirebug.com/">Firebug</a>, Chrome Developer Tools, <a href="http://www.opera.com/dragonfly/">Opera Dragonfly</a>, e <a href="http://www.microsoft.com/download/en/details.aspx?id=18359">IE Dev Toolbar</a> ya nos dan muchas informaciones.
Aparte de eso, las extensiones clásicas <a href="http://developer.yahoo.com/yslow/">YSlow</a> y <a href="http://code.google.com/speed/page-speed/docs/extension.html">PageSpeed</a> (disponibles para Chrome y Firefox) presentan informes completos con sugerencias y problemas de desempeño.
PageSpeed en particular tiene una <a href="http://pagespeed.googlelabs.com/">versión online</a> muy fácil de usar.
Otra fantástica herramienta en línea es <a href="http://www.webpagetest.org/">WebPageTest.org</a>, usada para generar las estadísticas utilizadas en esta presentación. Te permite probar desde IE6 a IE10, además de Chrome y Firefox. Genera screenshots, gráficos, graba vídeos comparativos y proporciona un análisis con consejos de optimización. Además, <a href="https://sites.google.com/a/webpagetest.org/docs/private-instances">el framework es abierto y se puede ejecutar internamente</a> o instalado en una imagen de Amazon EC2.
<a href="http://analytics.google.com/">Google Analytics</a> se puede configurar para <a href="http://www.google.com/support/analyticshelp/bin/answer.py?hl=en&amp;answer=1205784&amp;topic=1282106">guardar estadísticas de velocidad del sitio</a>. Lo interesante es usar esta capacidad para cruzar datos con otras métricas para descubrir los impactos en el desempeño de los usuarios de tu aplicación.
<a href="https://www.google.com/webmasters/tools/">Google Webmasters Tools</a> muestra informaciones sobre el desempeño del sitio en comparación con otros sitios indexados por Google.


Precargue componentes
En algunos casos, al visitar una página, es casi seguro que sepa cuál será la siguiente página visitada por el usuario. Piense en la página de inicio de Google que seguramente será seguida por una visita a la página de resultados de búsqueda. O incluso en un flujo de cierre de compras desde una tienda virtual en varios pasos.
En estas situaciones, puede ser interesante que la primera página precargue elementos que se utilizarán en la página siguiente. CSS, JavaScript e imágenes se pueden precargar mediante código, anticipando la descarga de componentes que probablemente se utilizarán más adelante. Obviamente, esta práctica sólo debe usarse si has configurado los encabezados de la caché correctamente, de lo contrario, los componentes se descargarán dos veces.
Esta práctica tiene una gran ganancia de velocidad al visitar la segunda página. Sin embargo, se debe tener cuidado de que el desempeño del primero no se vea afectado. Lo ideal es hacer estas precargas solo cuando la página de inicio termine de cargar todos sus componentes, posiblemente después del onload de la misma.
Escriba código eficiente
En algunos casos raros, el desempeño puede verse afectado en gran medida por prácticas deficientes de codificación HTML, CSS o JavaScript. Sin embargo, tenga en cuenta que la mayoría de las técnicas más eficaces tienden a estar poco influenciadas por las optimizaciones de microcódigo; el problema suele ser más estructural.
Sin embargo, cuando la aplicación está cargada, repleta de ricos recursos, el código se puede optimizar. Hay varios <a href="http://code.google.com/speed/page-speed/docs/rendering.html#UseEfficientCSSSelectors">selectores CSS que hacen que la renderización sea mucho más lenta</a>. <a href="http://developer.yahoo.com/performance/rules.html#min_dom">La gran cantidad de elementos en el DOM también reduce el desempeño</a>. <a href="http://developer.yahoo.com/performance/rules.html#iframes">Usar demasiados iframes es casi un crimen</a>. Y también están las prácticas de <a href="http://www.phpied.com/extreme-javascript-optimization/">optimización de código y lógica JavaScript</a>, como dividir tareas largas en partes más pequeñas con WebWorkers o setTimeout, evitando el bloqueo de pantalla.
Dispare luego el onload
Muchos scripts esperan el evento onload para que siga su ejecución. Además, suele ser la métrica que se utiliza para medir el desempeño en herramientas como Analytics y Webmasters Tools. Desde 2010, Google ha utilizado la <a href="http://googlewebmastercentral.blogspot.com/2010/04/using-site-speed-in-web-search-ranking.html">velocidad del Sitio</a> como una de las variables del ranking de las búsquedas, y esto tiene que ver con el onload. Después del disparo del onload, el indicador de carga del navegador deja de girar, dando la impresión de que la carga está completa.
Hay varias razones para optimizar el tiempo de onload, muy explicados por <a href="http://stevesouders.com/">Steve Souders</a> en sus libros. Abusar de la carga asíncrona ayuda a implementar esta práctica.
Rompa las reglas
No te limites a los números exactos que le da su herramienta de diagnóstico. Rompa algunas reglas cuando sean mejores para el usuario. La técnica de precargar componentes en la página siguiente empeorará su calificación en YSlow, a medida que aumenta el número de requests, aumenta el tamaño total; pero es una técnica que sabemos que mejora el desempeño del usuario.
Varias de las otras reglas se pueden romper en casos específicos. Algunos dicen que las páginas de inicio de portales deben incorporar CSS y JS directamente en HTML para ahorrar requests. Algunas personas argumentan que JavaScript no debería estar al final de la página, sino justo después del fold, ya que no hay mucho problema para bloquear la renderización de la parte no visible de la página. Hay situaciones en las que desea redimensionar imágenes en HTML, como al hacer un <a href="http://www.alistapart.com/articles/responsive-web-design/">diseño responsivo</a>.
No se limite a los números, concéntrese en la experiencia del usuario.
Referencias

Conjunto de prácticas propuestas por <a href="http://developer.yahoo.com/performance/rules.html">Yahoo!</a> y <a href="http://code.google.com/speed/page-speed/docs/rules_intro.html">Google</a>.
Livros de Steve Souders, <a href="http://www.amazon.com/High-Performance-Web-Sites-Essential/dp/0596529309/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1315598131&amp;sr=1-1">High Performance Web Sites</a> y <a href="http://www.amazon.com/Even-Faster-Web-Sites-Performance/dp/0596522304/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1315598155&amp;sr=1-1">Even Faster Web Sites</a>.
<a href="http://www.bookofspeed.com/">Book of Speed</a>, de Stoyan Stefanov y <a href="http://www.phpied.com/">su blog</a>.
Buenas conferencias del evento VelocityConf de 2011, 2010, 2009 y años anteriores.
<a href="http://www.perfplanet.com/">PerfPlanet</a>, un agregador de blogs de excelentes autores sobre Web Performance.
Excelente colección de enlaces de StrangeLoop en su <a href="http://www.strangeloopnetworks.com/web-performance-optimization-hub/">Web Performance Hub</a>.

Alura ofrece cursos y formaciones completas para que aprendas nuevas tecnologías del mundo de negocios. A través de nuestra comunidad activa, clases de video de alta calidad y ejercicios prácticos, ¡Estarás preparado en poco tiempo!---
"Portafolio en el área tecnología: ¡una guía para construir un ideal!"
2020-10-28
"¡Sepa como hacer un portafolio ideal!"
"gabriel-ferreira"
"gabriel.ferreira@caelum.com.br"
"programacao"

¿Estás buscando empleo en el área de tecnología? Entonces, es muy probable que ya hayas completado los registros de empresas y agencias, ¿verdad? En los datos solicitados, ¿había un campo que decía portafolio?
Porque, cada vez más, este documento se ha demostrado ser obligatorio para la participación en los procesos de selección, además de fundamental para quienes ya están en el mercado pero quieren estar siempre abiertos a nuevas oportunidades.
Y no solo eso: si se hace bien, el portafolio puede ser decisivo entre un “el trabajo es tuyo” y un menos entusiasta “guardaremos tu currículum para una próxima oportunidad”.
Hasta ahora estamos seguros de que has entendido su importancia, pero, para que quede claro, hay una explicación directa de qué es el portafolio: una recopilación de todos los trabajos principales realizados por un profesional.
Es una especie de resumen de lo que has hecho a lo largo de tu carrera. Es el escaparate para que programadores, diseñadores, especialistas en marketing digital y tantos otros se presenten al mundo.
A continuación, presentamos una guía completa para crear un portafolio en el área de tecnología. ¡Revisa todo con cuidado y no pierdas más tiempo para crear el tuyo e impulsar tu carrera!
1. ¿Cuál es la mejor opción: física u online?
Uno de los primeros pasos es pensar en el formato que lo difundirás y presentarás a los reclutadores y clientes. Hasta hace unos años, era común preparar una carpeta ordenada, incluyendo imágenes e informaciones de tus principales trabajos.
Pero, seamos realistas, a pesar de todos los cuidados que implica este método, no es algo exactamente funcional. Imagínate la situación: en cada entrevista o reunión, tener que andar trayendo una carpeta; para cada proceso de selección, preparar copias para dejárselas al entrevistador. Nada práctico, ¿verdad?
Por lo tanto, para facilitar la vida del candidato y del reclutador, la solución recomendada es el portafolio online. Además de la practicidad de la presentación, este formato es más sencillo de actualizar, incluir o eliminar trabajos, más económico que tenerlos impresos, accesible desde cualquier lugar las 24 horas del día y permite una mayor difusión.
Pero tenga en cuenta: cuando se te pida que presente tu portafolio en el momento de la entrevista de trabajo, no confíe únicamente en lo virtual: Internet puede fallar o puede que no haya una red en la sala donde se llevará a cabo la conversación.
Por eso, lleve un pendrive o un drive externo con los trabajos que desea presentar. Así, no es por falta de internet que te quedarás sin mostrar tus proyectos.
2. ¿Cuáles son las herramientas para crear un portafolio en el área de tecnología?
Elegir la herramienta ideal para crear tu portafolio es un paso que requiere paciencia y perseverancia hasta encontrar la que entiendes y te adaptas mejor. La clave es hacer pruebas con algunas y no rendirse al principio.
Haz tu registro, busca entender mejor la plataforma y pide ayuda y opinión a tus amigos antes de darte por satisfecho. Aparte de eso, elige una herramienta que puedas actualizar fácilmente y que ofrezca un diseño funcional, hermoso y profesional, de acuerdo con tu área de actuación.
Para ayudarte con esta misión, enumeramos a continuación algunas herramientas que son utilizadas por muchos profesionales para crear un portafolio en el área de tecnología.
2.1 Carbonmade
Una plataforma interesante para crear un portafolio en el área de tecnología, el <a href="https://carbonmade.com/?utm_source=blog&amp;utm_campaign=rc_blogpost">Carbonmade</a> permite organizar los trabajos a través de álbumes, divididos por temas y con descripciones específicas.
Su uso es muy fácil: simplemente regístrate y elige un diseño preferido. Hay varios listos; Determina cuál tiene más que ver con tu estilo y área de actuación.
Los modelos no son muy personalizables, es decir, está indicado para quienes no quieren tener mucho trabajo pensando en layout y quieren completar su portafolio lo antes posible. Además, la versión gratuita solo permite subir imágenes. Si tienes videos y audios, necesitas usar la versión pagada, que es más completa y con más opciones de layout.
2.2 Cargo Collective
¿Tienes conocimientos técnicos y deseas utilizarlos para crear tu portafolio? Entonces el <a href="http://cargocollective.com/?utm_source=blog&amp;utm_campaign=rc_blogpost">Cargo Collective</a> ¡es para ti!
La herramienta cuenta con buenas opciones de personalización para aquellos que entienden de CSS y HTML, es decir, para hacer tu página de la forma que quieras, completamente exclusiva.
Pero, si no tienes los conceptos básicos de programación, ten la seguridad de que el Cargo también es para ti. La plataforma cuenta con más de cuarenta opciones de modelos a disposición de los usuarios, que permiten una presentación de los trabajos de una manera hermosa y funcional. Simplemente elige el que más te guste y sigue adelante.
En pocos pasos, y sin mucho trabajo, tu página profesional estará lista para ser difundida a todos los interesados. ¡Todo muy fácil y gratis!
2.3 DevianArt
<a href="https://www.deviantart.com/?utm_source=blog&amp;utm_campaign=rc_blogpost">DevianArt</a> se enorgullece de ostentar el título de la comunidad más grande del mundo para la difusión de trabajos artísticos. Y, en realidad, mucha gente lo usa: hay más de 20 millones de usuarios.
Los modelos disponibles tienen un aspecto profesional y son fáciles de usar. En el plan gratuito, solo se permite subir hasta cien imágenes por usuario. Sin embargo, mire el lado positivo: la comunidad es grande, por lo que incluso con esa cantidad hay buenas posibilidades de obtener visualizaciones.
Pero si quieres una opción más completa, existen planes pagados con más funciones y posibilidades de personalización. Por fin, si tienes tu propio dominio, puedes usarlo para crear un sitio web con tu propio nombre.
2.4 Wordpress
<a href="https://br.wordpress.com/create/?utm_source=blog&amp;utm_campaign=rc_blogpost">Wordpress</a>, aunque no es exactamente una herramienta específica para la creación de portafolios en línea, satisface muy bien esta demanda. Es una de las plataformas de creación de sitios web y blogs más grandes del mundo.
La plataforma ofrece una <a href="https://br.wordpress.org/themes?utm_source=blog&amp;utm_campaign=rc_blogpost">gran cantidad de temas</a>, simplemente elige el que se adapte a tu área y estilo. Algunos de ellos tienen más de 700 mil instalaciones activas, como el tema Twenty Seventeen, pero como el diseño es personalizable cada sitio es completamente diferente del otro.
Wordpress te permite incluir varias extensiones y widgets, que hacen que la página sea más completa y llena de funciones. Como la comunidad que trabaja en la plataforma es muy amplia, siempre hay actualizaciones y correcciones de errores.
Además, en tu sitio web es posible publicar fotos, videos y textos de manera práctica y organizada, es decir, es una herramienta para ser utilizada por programadores, diseñadores y profesionales de marketing, entre otros. Si tienes tu propio dominio y quieres usarlo para este proyecto, será muy bienvenido.
2.5 Github
<a href="https://github.com/?utm_source=blog&amp;utm_campaign=rc_blogpost">Github</a> es una plataforma utilizada por programadores para compartir y difundir códigos, proyectos, programas con la comunidad, formada principalmente por entusiastas del open source. Utilizada desde los más novatos hasta los profesionales experimentados del área, permite que varias personas trabajen juntas en el mismo proyecto.
Al igual que el portafolio, es una herramienta importante, ya que las empresas y los clientes pueden conocer el trabajo que realizan los desarrolladores. Además, es posible interactuar con otros usuarios, hacer networking y recibir contactos profesionales.
Los proyectos en Github están ordenados por carpetas, las cuales contienen una amplia variedad de archivos, tales como: html, documentos de texto, php, css, pdf, jpeg, gráficos, entre tantos otros.
Para usarlo, no hay límite de carga de archivos, pero en la cuenta gratuita todos los archivos de las carpetas serán públicos y cualquier persona los podrá acceder. Cualquiera que desee mantener la privacidad y el acceso solo a un grupo específico, debe actualizar a una cuenta pagada.
2.6 LinkedIn
Una herramienta que no es precisamente para crear portafolio en línea, pero que responde a la necesidad de dar a conocer trabajos y proyectos, y lo mejor, para todas las áreas. <a href="https://pt.linkedin.com/?utm_source=blog&amp;utm_campaign=rc_blogpost">LinkedIn</a> está considerada como la red social más grande del mundo dirigida a asuntos profesionales.
En la plataforma, es posible informar toda tu experiencia y recibir recomendaciones de compañeros y ex jefes. Además, se permite divulgar enlaces, videos, fotos y documentos. Por fin, existe la opción de escribir artículos y publicar en la red, siendo un excelente portafolio para demostrar tus ideas y opiniones, especialmente para quienes trabajan directamente con texto, como los profesionales del marketing digital.
3. ¿Qué incluir en tu portafolio?
Una vez elegida la plataforma, llega la parte más importante: el contenido. Es hora de mostrar realmente tu trabajo y promoverte, después de todo, un diseño hermoso en una herramienta increíble no es suficiente si no tienes algo bueno que mostrar, ¿verdad?
A continuación, vea cómo elegir los trabajos que deben formar parte de tu portafolio para el área de tecnología:
3.1 Variedad
El primer consejo es la variedad de proyectos. Al seleccionar lo que se expondrá, busque un poco de todo. Si puedes, elige materiales que involucren a diferentes tipos de público. Además, diversifica al máximo tus clientes, como tiendas, agencias, oficinas, fábricas y cualquier otra cosa que tengas en tu carrera.
La idea es mostrar tu versatilidad a posibles reclutadores y clientes, asegurándose de que pueda trabajar con diferentes temas y necesidades.
Para ilustrar mejor la situación, imaginemos un diseñador que ha realizado trabajos relacionados con la música y esta es su área favorita. ¡Excelente! Tiene que mostrar estas creaciones en su portafolio, pero no solo ellas: es necesario diversificar.
Esto significa incluir proyectos de diferentes áreas, como producciones dirigidas a niños, otra para la rama de viajes y turismo, otra para un despacho de abogados ... Es decir, de ramas completamente diferentes que tienen sus propios requisitos, lenguajes y particularidades.
Así, es posible demostrar la versatilidad del profesional, el conocimiento y el interés en una amplia variedad de temas, además de la flexibilidad, algo muy valorado por el mercado.
Entonces, no importa cuánto tiempo haya estado trabajando en el mismo segmento, intenta producir piezas diferentes. El consejo aquí es hacer un trabajo a modo de ejercicio, que, aunque no se divulgue, es útil para demostrar tus habilidades. Incluir proyectos universitarios también es una buena opción.
3.2 Orden de presentación
Piense en el orden en que se presentan los trabajos. Aquí, la primera impresión es la que cuenta, así que resalta algo realmente increíble, ya sea en la primera página o en los primeros álbumes. La idea es impresionar en el acto y generar un sentimiento positivo.
3.3 Calidad
Elige solo piezas de alta calidad. Después de todo, este es su escaparate profesional y debe contener solo lo mejor. Es muy común que los profesionales tengan en su carrera algo que no sea muy bueno o que no tenga nada que ver con la actualidad. Este tipo de trabajo se puede dejar fuera.
3.4 Cuidado con los derechos de autor
¿Puedo poner todo lo que he hecho en la vida? Esta es una pregunta común y hay algunas consideraciones. Antes de alimentar tu portafolio, debes considerar los problemas de derechos de autor.
Hay empresas y agencias que establecen en sus contratos que el material creado por los empleados es de su propiedad. Esto impide su publicación en cualquier otro medio, aunque no sea con fines comerciales o publicitarios, a riesgo de generar una demanda judicial.
Pero si creaste todo y no hay nada formalizado en el contrato sobre la exclusividad de difusión, puedes incluirlo sin problemas. Toma nota de este consejo: mantén las puertas abiertas y una buena educación con las empresas, agencias y clientes a los que has atendido. Informarles sobre la publicación e incluya las respectivas informaciones sobre el nombre de la empresa, año de realización, etc.
3.5 Quién está al comienzo de su carrera, ¿cómo lo hace?
Para aquellos que ya actúan hace años, es muy fácil llenar un portafolio. Pero, ¿quién está al comienzo de su carrera? En este caso, la única solución es producir mucho, no de forma comercial, sino aprender técnicas, desarrollar métodos y ganar experiencia.
Vale crear programas, aplicaciones y sitios web que no serán publicados, pero que podrían ser un terreno fértil para muchas ideas. Busque en la web referencias para sus creaciones.
Aquí también vale el criterio de diversificación: construye proyectos con distintas propuestas para ampliar tus conocimientos. Además, los trabajos universitarios son bienvenidos. Los mejores deben componer la página.
La clave es tener actitud y no ser perezoso para desarrollarse. ¡Recuerde que esto te puede ayudar a conseguir un buen trabajo en el área de la tecnología!
4. ¿Qué evitar en el portafolio?
Si hay lo que se debe incluir, también hay lo que se debe evitar. En este momento, la autocrítica es fundamental y muy valorada en el mercado.
Como mencionamos, la calidad de los proyectos es fundamental, así que no incluyas nada solo para llenar espacios y mostrar volumen y gran producción. El efecto de esto será todo lo contrario: cualquier reclutador o gerente experimentado se dará cuenta de que algo no está bien ahí.
Algunos proyectos, por los que quizás tengas un cariño especial, deben mantenerse alejados de tu portafolio, como los materiales que elaboraste a familiares, siguiendo sus gustos.
La idea no es censurar, pero este tipo de trabajos suele tener un aspecto de principiante, y esa no es exactamente la imagen que quieres transmitir a un posible jefe o empresa, ¿verdad?
Si, en algún momento, participaste de un proyecto que generó polémica y que hoy se puede malinterpretar, es mejor no revelarlo también. La idea es mostrar todo lo que tienes de mejor.
5. ¿Puedes ser osado al crear el portafolio?
Ya hemos presentado algunas herramientas que ayudan a construir un buen portafolio, algunos más personalizables, otros menos. En general, todos atienden esta necesidad de forma satisfactoria.
Sin embargo, hay profesionales que quieren ir mucho más allá y crear algo completamente diferente a lo que todo el mundo está acostumbrado. Esto es genial, ya que un poco de atrevimiento y creatividad son muy valorados en la vida profesional.
Algunos ya han creado un portafolio en formato de <a href="https://vimeo.com/79303487?utm_source=blog&amp;utm_campaign=rc_blogpost">pasaporte</a> o en versión <a href="http://www.rleonardi.com/interactive-resume/?utm_source=blog&amp;utm_campaign=rc_blogpost">Super Mario Bros</a>. Se fueron al extremo de la osadía y, en estos casos, el resultado final fue sorprendente.
Sin embargo, debes tener cuidado antes de andar desperdiciando tu creatividad. Buscar algo poco convencional es genial, pero el discernimiento es necesario. ¿Estás seguro de que podrías hacer algo de este estilo con calidad o te convertirías en un principiante?
Para tu área de actividad, ¿esto contará positivamente? ¿Trabajar con algo diferente como esto realmente te conviene o simplemente lo hiciste porque lo encontraste divertido?
Todo esto tiene que ver con el autoconocimiento, conocer tu estilo y darte cuenta de lo mucho que realmente quieres atreverte. Crea algo que sorprenda, pero tómatelo con calma para evitar causar una mala impresión.
6. Consejos adicionales para crear tu portafolio en el área de tecnología
Para que pueda crear tu portafolio, hemos seleccionado algunos consejos más que serán importantes durante el proceso de desarrollo. ¡Vea a continuación!
6.1 Cuida tu marca personal
Piensa que la presentación de tu portafolio es una especie de escaparate sobre tu trayectoria. Tú eres el creador, por lo que cuidar tu marca personal será indispensable.
Por lo tanto, es necesario seleccionar una foto de aspecto profesional (dejar la que tiene peluca y anteojos divertidos lejos de ella), escribir tu biografía de manera correcta e interesante, y atentar para que el correo electrónico de contacto si el suyo es algo así como soychicarebelde123@hotmail, es mejor crear uno más serio. Tener tu propio dominio también es un elemento que demuestra profesionalismo.
Otro punto especial es tu nombre. Evite el uso de apodos, términos extranjeros, acrónimos o abreviaturas que no significan mucho. ¡Tu nombre es tu marca! Manténgalo lo más claro y sencillo posible: esto ayudará a ponerse en contacto con futuros clientes y empleadores.
6.2 Sea formal e informal en la medida cierta
El área de tecnología es bien conocida por su informalidad, ya sea en el proceso de creación de proyectos o en la flexibilidad de horarios y dresscode, muchos en el sector trabajan en shorts y chanclas, por ejemplo.
No hay problema con eso, en realidad es bastante interesante. Pero el portafolio debe coordinar bien lo formal y lo informal. Al ser demasiado serio, se vuelve poco característico, pero si es demasiado informal, corre el riesgo de parecer inmaduro. Por eso, el consejo es ser sutil, preferir la elegancia y el buen gusto, sin exagerar. De esa manera, atraerá a una gama más amplia de personas y posibles empleadores y clientes.
6.3 Manténgase actualizado
Entienda tu portafolio como un organismo vivo que necesita ser alimentado, cuidado y bien tratado para crecer y dar frutos. Es posible que la primera versión no haya quedado tan buena, por lo que la actualización constante ayudará a lograr el alto nivel de calidad deseado.
Además, la idea es que haya producción constante, según las nuevas tecnologías, funcionalidades y necesidades del mercado. Esto requiere la inclusión de nuevos trabajos con cierta frecuencia.
6.4 Trabaje en la divulgación de tu portafolio
Ya que creaste un material rico, lleno de buenos contenidos, que cuenta un poco de tu conocimiento y tu trayectoria como profesional de tecnología, ¿por qué no revelarlo?
Las redes sociales están ahí para eso. Comparte con tus amigos y familiares en tu página personal de Facebook y, si lo deseas, incluso crea una página. Crea un perfil de Instagram, ten un blog y mantenlo siempre actualizado: esto aumenta las posibilidades de que tu trabajo aparezca en los resultados de búsqueda de Google.
Claro que sí, <a href="https://www.aluracursos.com/blog/como-crear-un-perfil-atractivo-para-reclutadores-en-linkedin">no te olvides de LinkedIn</a>, la mejor red social para incluir un enlace a tu página.
En esta publicación buscamos contribuir al proceso de producción de tu portafolio en el área de tecnología. Como ves, se necesita dedicación para encontrar la mejor herramienta para producir piezas nuevas cuando no hay mucha experiencia profesional, y también una buena organización para mantener la actualización constante.
Por eso, enfatizamos: ten en cuenta que este documento es realmente importante y puede ser la diferencia entre el sí y el no para una vacante.
Trátalo con cuidado y atención, haga revisiones y, siempre que pueda, pida la opinión de los demás. A veces, un mirar de quien no está acostumbrado a esta producción es capaz de dar ideas o tener percepciones brillantes, que solo se sumarán a tu material. ¡Ahora, manos a la obra y comienza a construir tu página ahora mismo!
Por fin, ¡consulta nuestros cursos en Alura para seguir desarrollándote!---
"Trabajando con precisión en números decimales en Python"
2020-09-29
"Es muy posible que ya hayas encontrado pequeños errores de precisión con números float. ¡Entiendas esto y cómo resolverlo en Python!"
"yanorestes"
"yan.orestes@alura.com.br"
"data-science"

Es muy posible que ya hayas encontrado pequeños errores de precisión con números float, esto me pasó a mí cuando trabajé en una aplicación en Python para controlar los gastos y ganancias de la empresa donde trabajo.
Al principio, es sencillo, simplemente guardo los valores en variables y luego los paso a una base de datos propia. En julio, tuvimos 5 ventas de $ 99.91 y compramos 3 equipos de $ 110.10:

Código

A partir de eso, los expertos en finanzas de la compañía realizan análisis para intentar mejorar nuestros resultados.
Mi código es muy simple, pero tiene una lógica clara que debería funcionar bien. A pesar de eso, a fin de mes el jefe terminó retándome. Esto se debe a que algunos cálculos no coincidieron con los resultados reales que tuvimos. Estaba confundido y fui a probar mi código para verificar si todo está como debería:

Código

Mira los resultados que obtuve:
499.54999999999995
330.29999999999995
Espera… ¿qué? Haciendo las cuentas manualmente, o en la calculadora, los resultados son diferentes: 499.55 y 330.3. ¿Por qué Python me entregó estos números largos y, sobre todo, incorrectos?
El problema del float
La lógica de nuestras cuentas está correcta, el problema, como hemos visto, está en los mismos resultados que nos da Python. Python no sabe hacerlas bien, ¿sería eso?
Bueno, la respuesta puede ser sí ... ¡y no! En primer lugar, esta pregunta no es exclusiva de Python, sino de la computación y de cómo se ocupa de los números de punto flotante (nuestro querido float). Además, no es exactamente un problema; ¡vamos a entender!
En el nivel más bajo, las computadoras funcionan con la diferencia en dos estados eléctricos: bajo y alto voltaje, encendido y apagado, verdadero y falso. Por lo tanto, tenemos el binario, el famoso 0 y 1, y es gracias a este sistema que las computadoras pueden ser tan rápidas con algunas cosas.
Sin embargo, al utilizar el formato binario para los números de punto flotante, las computadoras no pueden representar con precisión exacta algunas fracciones (como 0.98 y 0.1). De esta manera, estos números se redondean automáticamente al más cercano que se ajuste a la posibilidad del binario, lo que resulta en un pequeño error de precisión.
En general, este error es demasiado pequeño para ser considerado relevante, pero hay situaciones en las que no podemos ignorarlo, ¡como ahora!
En nuestro caso, como estamos tratando con dinero, necesitamos una mayor precisión. Hemos visto cómo redondear y formatear valores monetarios antes, pero incluso esta forma puede dar lugar a pequeños errores de redondeo que queremos evitar. ¿Y ahora?
Trabajando con enteros
Mientras trabajamos con dinero, podemos pensar rápidamente en una alternativa que evitaría el problema de los números de punto flotante, trabajando solo con números enteros. Pero ¿cómo? Sabemos que 1 dólar equivale a 100 centavos, entonces simplemente podemos trabajar con esta subunidad y evitar números decimales.
En nuestro caso, tuvimos $ 188.98 y $ 1113.10 que también se puede representar, respectivamente, por 18898¢ y 1310¢ - ¡dos números enteros!
Como estamos trabajando con Python, aún evitamos (al principio) el problema de <a href="https://en.wikipedia.org/wiki/Integer_overflow">overflow de número entero</a> estándar, que es muy limitado en algunos lenguajes (como en Java, que solo llega a 2.147.483.647).
Dado que la base de datos está guardando números enteros, ahora podemos simplemente dividir por 100 al imprimir los valores, lo que solucionaría los problemas. Mira:
´´´
ganancias_julio, gastos_julio = toma_valores_en_la_base ()
print (ganancias_julio / 100)
print (gastos_julio / 100)
´´´
Y la respuesta:
´´´
188.98
13.1
´´´
¡Genial! Con el código ordenado, lo compartí con las sucursales internacionales de mi empresa. Sin embargo, rápidamente recibí varias quejas que mostraban errores en los cálculos. Pero ¿por qué?
La primera queja provino directamente de nuestra filial en Túnez. El programa mostraba cálculos que eran claramente incorrectos para ellos: la base de datos almacenaba 10000 milim y el valor impreso era de 100 <a href="https://pt.wikipedia.org/wiki/Dinar_tunisiano">dinares tunecinos</a>, cuando debería ser 10. Esto se debe a que, en Túnez (y en varios otros países) la subunidad de moneda principal no proviene de la centésima (1/100) pero de la milésima (1/1000) -1 dinar tunecino equivale a 1000 milim.
Entonces, tenemos un gran problema potencial con la internacionalización del código. De hecho, incluso si trabajamos con una sola ubicación, el peligro permanece. En el mundo financiero, las subunidades cambian con el tiempo debido a la inflación y la deflación.
Si almacenamos números enteros, tendremos que migrar los valores almacenados cada vez que haya un cambio, lo que puede dificultar enormemente el mantenimiento de todo el sistema.
Lo ideal aún sería poder trabajar con la unidad monetaria principal, con números decimales, pero con exactitud. ¿Es posible?
Trabajar con precisión con el tipo Decimal
Debido a esta necesidad recurrente de lidiar con números no enteros exactos, la mayoría de los lenguajes de programación nos brinda tipos específicos para lidiar con esto.
En el caso de Java, por ejemplo, tenemos el BigDecimal. En Python, tenemos todo el módulo <a href="https://docs.python.org/3/library/decimal.html">decimal</a> y, más concretamente, el tipo Decimal. Importándolo, su uso es directo:

Código

Ahora, mira el resultado:
499.55
330.3
¡Exactamente como en la calculadora! Los analistas de la empresa ya no tendrán ningún problema más con los cálculos.
Usando la precisión exacta cuando la necesitamos
Empezamos con un problema tipo float de Python, no conseguía darnos un resultado exacto de un cálculo. Pronto comprendimos que el problema no era Python en sí, sino el float y cómo lo maneja la computadora.
Como se trataba de dinero, la precisión en los cálculos era fundamental. Entonces, necesitábamos alguna solución. Echamos un vistazo a cómo podemos convertir todo en números enteros (por ejemplo, convertir el valor monetario de Dólares a centavos), lo que a veces puede ser una buena salida.
Sin embargo, tratar todos los números como enteros tiene sus consecuencias negativas, como posible overflow y problemas de mantenimiento de código. Queríamos una solución mejor y ... ¡lo logramos!
Aprendimos que la mayoría de los lenguajes de programación tiene algún tipo numérico exacto para evitar este problema. En el caso de Python, este tipo es elDecimal, con <a href="https://floating-point-gui.de/formats/exact/#arbitrary-precision-decimal">precisión arbitraria</a>. Con él, nuestros cálculos ganaron la precisión necesaria y terminamos con todo el problema inicial.
Una intuición natural después de conocer los tipos numéricos exactos en lenguajes de programación, como el Decimal, es querer usarlos para todo. A pesar de esto, es importante analizar siempre si vale la pena - los tipos exactos exigen más tiempo de procesamiento.
Por lo general, un pequeño error en el décimo decimal de un número es irrelevante y la precisión exacta no es necesaria. Por lo tanto, siempre tenemos que analizar el contexto de nuestro propio programa antes de aplicar una decisión.
¿Ya conocía el tipo Decimal? ¿Y toda esta confusión con el float? ¿Qué tal aprender más sobre Python y sus diversos recursos? Entonces, ¡Mira nuestros cursos de Python para Data Science aquí en Alura!---
"Primeros pasos en Inteligencia Artificial (IA) "
2020-10-19
"Alguna vez te has preguntado ¿qué tipo de carrera en IA quieres empezar y qué vas a hacer con ella? ¿Coordinar? ¿Programar? ¿Innovar?"
"cassia-sampaio"
"cassia.sampaio@caelum.com.br"
"data-science"

Alguna vez te has preguntado ¿qué tipo de carrera en IA quieres empezar y qué vas a hacer con ella? ¿Coordinar? ¿Programar? ¿Innovar? Creo que todas estas cosas son posibles.
En la primera, gestionarías un equipo de IA, en la segunda formarías parte de ese equipo y en la tercera, trabajarías en un laboratorio de innovación o con investigación.
En primer lugar, me gustaría dedicar esta publicación a Flávio Andre Virgilio, mi alumno de Alura e inspirador de la respuesta, a Mayra Oliveira, mi revisora, que me incentivó a hacer la publicación, y a todos aquellos que quieran iniciarse en el área de IA. , pero no ven una dirección clara.
Basado en esto y en mi experiencia, es bueno que:

te guste la lógica. Algoritmos son la base de la IA, cuanto más desarrollado sea tu raciocinio lógico, mejor.
tengas interés en temas filosóficos, neurocientíficos, matemáticos, físicos e incluso psicológicos.. En Filosofía, además del área de Lógica, la Teoría del Conocimiento propone pensar cómo definir qué es conocer algo, y esto es importante para la IA.
sepas un lenguaje de programación. Entonces puedes aplicar algoritmos, lógica y teorías usando una computadora. Recomiendo Node (para las API de servicios), Python y Java (para códigos y bibliotecas). C o C ++ son buenos también. Intente programar en algunos de estos lenguajes y vea con cuál sientes más afinidad.

Considero estos 3 puntos básicos, incluso para saber si este es el camino. Aún hablando de manera personal, si tiene pasión por las cosas antes mencionadas, continúa. IA puede tener un mercado en expansión ahora, pero siempre seremos buenos en lo que amamos y estamos felices de hacerlo.
Ahora vamos a las referencias más prácticas.
Ya has pensado en los puntos anteriores y sabes que tienes un super interés. Ahora practica. Intenta tomar un problema simple y resolverlo hasta el final. Y luego tome uno a continuación, otro, y así sucesivamente.
Esto es importante para que sientas lo que es desarrollar una solución.
¿Y cómo hacerlo?

con los cursos de Machine Learning, y de Estadística en <a href="https://www.aluracursos.com/cursos-online-data-science">Alura</a>
con los articulos del blog <a href="https://www.aprendemachinelearning.com/">Aprende Machine Learning</a> (en español)
con los ejemplos o competiciones de <a href="https://www.kaggle.com/">Kaggle</a> (en inglés)
ejecutando los ejemplos de <a href="https://ai.google/education/#?modal_active=none">Google AI</a>  (en inglés)
tomando el curso <a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-034-artificial-intelligence-fall-2010/lecture-videos/">Inteligencia artificial</a> del MIT (en inglés)
también por cursos de Machine Learning e IA de <a href="http://www.andrewng.org/courses/">Andrew Ng</a> (en inglés)
Leyendo y siguiendo los ejemplos del libro de Inteligencia Artificial de Russell y Norvig (gratis en inglés en este sitio web <a href="http://aima.cs.berkeley.edu/">Universidad de Berkeley</a>)
explorando este mapa mental de <a href="http://scikit-learn.org/stable/tutorial/machine_learning_map/index.html">Sci-kit learn</a> (en inglés)

Además, te animo a que no te detengas ahí. Una vez que hayas completado el primer proyecto, compártelo. Muestre a las personas cercanas, crea un blog, envía un enlace en Twitter, participa en los Meetups de IA en su ciudad.
Independientemente de cómo clasifiques este conocimiento que has adquirido, principiante, intermedio o avanzado, siempre es bueno que lo compartas y que se multiplique.
Podría agregar referencias a esta publicación para siempre, sin embargo, espero que te haya dado alguna dirección para que te entusiasmes y comiences.
¡Empieza con algunos algoritmos!
Alura ofrece cursos y formaciones completas para que aprendas nuevas tecnologías del mundo de negocios. A través de nuestra comunidad activa, clases de video de alta calidad y ejercicios prácticos, ¡Estarás preparado en poco tiempo!---
"Python datetime: trabajando con fechas"
2020-09-29
"Formatación, timezone y el módulo datetime. Sepa como manejar las zonas horarias y las fechas usando Python con ejemplos prácticos"
"yanorestes"
"yan.orestes@alura.com.br"
"data-science"

Tomemos un ejemplo concreto de fechas y horas para poder programar en Python y con el módulo datetime: una compañía nos contrató para implementar su sistema de puntos, controlando cuándo llega y se va un empleado. El sistema debe mostrar la fecha y la hora en cada registro, como confirmación para el empleado.
date de datetime
Conocemos el módulo <a href="https://docs.python.org/3/library/datetime.html">datetime</a> de la biblioteca nativa de Python, por lo que incluso sabemos cómo obtener la fecha actual a través de la clase <a href="https://docs.python.org/3/library/datetime.html#date-objects">date</a>, simplemente impórtelo y llame al método today ():

Código

Como esperado:
python
2020-9-1
Pero calma. ¡Sería bueno si pudiéramos imprimir la fecha en formato DD / MM / AAAA para evitar confusiones! El problema es que el date fuerza automáticamente el estándar ANSI cada vez que intentamos imprimir.
Formateando nuestra fecha en un string.
Dado que la clase date puede proporcionar cada sección de la fecha por separado, podemos resolver este problema con un formato de string:
python
fecha_en_texto = ‘{}/{}/{}’.format(fecha_actual.day, fecha_actual.month, fecha_actual.year)
Lo que resulta en:
python
1/9/2020
Mejor, pero todavía no es exactamente lo que queríamos. Tenga en cuenta que tanto el día como el mes no tienen el prefijo 0, lo que no está en el estándar deseado. En este caso, incluso podríamos evitar esto simplemente agregando un 0 antes:
python
fecha_en_texto = ‘0{}/0{}/{}’.format(fecha_actual.day, fecha_actual.month,fecha_actual.year)
Lo que funcionaría, pero causaría problemas si el día o mes fuera mayor o igual a 10:
python
010/010/2020
Formatear fechas en strings usando el método strftime ()
Para evitar más complicaciones, la clase de fecha resuelve esto con un único método: strftime (), que toma como parámetro el formato que queremos en nuestra string de fecha, por lo tanto, nos da más libertad para decidir cómo queremos mostrar la fecha.
Este formato utiliza códigos mejor explicados en la <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior">documentación</a>. Al final del texto, también damos una breve explicación sobre ellos. En nuestro caso se ve así:
python
fecha_en_texto = fecha_actual.strftime(‘%d/%m/%Y’)
print(fecha_en_texto)
E asi:
01/09/2020
En el caso de nuestro ejemplo que resultó en 010/010/2020:
python
10/10/2020
Ahora solo necesitamos encontrar una manera de almacenar el tiempo también. ¿Quién puede encargarse de eso? Como habrás adivinado, el mismo módulo datetime desde el que importamos la clase date también tiene clases que facilitan la manipulación de los tiempos.
El tipo de fecha y hora para cuidar de fechas y horas juntos
Si bien podemos usar el tipo <a href="https://docs.python.org/3.6/library/datetime.html#time-objects">time</a>, destinado exclusivamente para tiempos, el módulo nos brinda una solución mucho más apropiada para nuestro problema con el tipo <a href="https://docs.python.org/3/library/datetime.html#datetime-objects">datetime</a>: sí, tiene el mismo nombre que el módulo, ¡cuidado con la confusión!
Una de las ventajas de la clase datetime es que puede manejar la fecha y la hora al mismo tiempo. La única diferencia en nuestro uso es que, en lugar del método today (), usaremos el método now ():

Código

El resultado es como el anterior:
01/09/2020
Aunque ya estamos usando la clase datetime, que incorpora la hora, necesitamos declarar en el formato que pasamos como parámetro a strftime () que también queremos mostrar la hora y los minutos:
python
fecha_y_hora_en_texto = fecha_y_hora_actuales.strftime(‘%d/%m/%Y %H:%M’) print(fecha_y_hora_en_texto)
Y ahora si:
01/09/2020 12:30
¡Perfecto! Hasta ahora hemos aprendido a tomar la fecha actual con date, datetime y incluso hemos aprendido a formatear fechas, transformándolas en strings. ¿Pero y si tuviéramos que ir para otro lado?
Convertir una strong a datetime
Si tuviéramos una string de date y quisiéramos transformarla en datetime, ¿qué haríamos? De nuevo, un método simple resuelve todo, esta vez strptime (), desde la misma clase datetime:

Código

El problema de la zona horaria
Revisé la configuración de una de estas computadoras y descubrí que su reloj estaba en una zona horaria diferente a la de Bogotá, donde se encuentra la compañía. 
No podemos dejar que el tiempo en nuestro programa dependa de cada máquina, porque no podemos garantizar que todas las máquinas que ejecutan este programa estén en la zona horaria que deseamos. Lo ideal, entonces, sería forzar la zona horaria para donde quieras.
Zona horaria con clase de timezone
A partir de Python 3, tenemos la clase <a href="https://docs.python.org/3/library/datetime.html#timezone-objects">timezone</a>, también del módulo datetime:

Código

Veamos qué se imprime en la pantalla:
python
Traceback (most recent call last):
  File "teste.py", line 4, in &gt;
    fuso_horario = timezone()
TypeError: Required argument 'offset' (pos 1) not found
La excepción TypeError que recibimos indica que no se encontró el argumento offset, esperado en el constructor timezone. Realmente no hicimos ese argumento. Pero, ¿qué significa? 
El parámetro offset representa la diferencia entre la zona horaria que queremos crear y el <a href="https://es.wikipedia.org/wiki/Tiempo_universal_coordinado">tiempo universal coordinado</a> (UTC). En nuestro caso, en Bogotá, tenemos una diferencia de -5 horas, mejor conocida como UTC-5. Sabiendo esto, intentemos nuevamente:
python
zona_horaria = timezone(-5)
print(zona_horaria)
Ahora que hemos configurado el parámetro de compensación, veamos qué aparece en la pantalla:
python
Traceback (most recent call last):
  File "teste.py", line 4, in &lt;module&gt;
    fuso_horario = timezone(-5)
TypeError: timezone() argument 1 must be datetime.timedelta, not int
Esta vez, el mensaje de excepción es diferente, lo que indica que el argumento pasado al constructor timezone debe ser del tipo datetime.timedelta, no un entero, que es lo que pasamos.
Calcular la diferencia horaria con la clase timedelta
La clase <a href="https://docs.python.org/3/library/datetime.html#timedelta-objects">timedelta</a> tiene el propósito de representar una duración y, en nuestro caso, una diferencia entre horarios. Ahora, ejemplifiquemos en una variable e intentemos imprimir, para ver qué sucede:
python
diferencia = timedelta()
print(diferencia)
Mira lo que apareció:
0:00:00
De acuerdo, 0 días, 0 horas y 0 minutos. Pero necesitamos que nuestro objeto timedelta se corresponda con la diferencia UTC, a -5 horas:
python
diferencia = timedelta(-5)
print(diferencia)
¿Qué aparece ahora?
-5 days, 0:00:00
¿Que? -¿5 días? ¡Queríamos -5 horas! El problema es que el constructor timedelta recibe varios otros argumentos más allá de la hora, en ese orden: 

<em>days</em>  (dias)
<em>seconds</em> (segundos)
<em>microseconds</em> (microsegundos)
<em>milliseconds</em> (milisegundos)
<em>minutes</em> (minutos)
<em>hours</em> (horas)
<em>weeks</em> (semanas)

Entonces, si solo le enviamos un -5, ese número se interpreta como si fuera en días. Podemos pasar 0 para los primeros 5 parámetros y -5 para las horas, pero esto es un poco extraño, teniendo en cuenta que, de hecho, solo queremos definir las horas.
Usando la funcionalidad de Python de parámetros con nombre, es posible especificar que estamos configurando el parámetro horas (<em>hours</em>), de la siguiente manera:
python
diferencia = timedelta(hours=-5)
print(diferencia)
Y ahora:
-1 day, 19:00:00
Bueno, si ponemos -5, ¿por qué apareció todo esto? Resulta que timedelta entiende -5 horas como 0 días, 0 horas y 0 minutos - 5 horas, es decir, -1 día, 19 horas.
Resolviendo el problema de zona horaria
Ahora, creemos un objeto de zona horaria correspondiente a UTC-5, indicando esta diferencia con respecto a UTC como parámetro del constructor:
python
zona_horaria = timezone(diferencia)
print(zona_horaria)
Tenemos justo lo que queríamos:
UTC-05:00
Finalmente, podemos convertir el tiempo de la máquina al de Bogotá, utilizando el método astimezone ():

Código

Ahora todo está estandarizado:
01/09/2020 12:30
Ahora tenemos todo arreglado con la zona horaria, pero ¿y si le mostramos nuestro código a otro programador, él entendería lo que significa -5? ¿No es muy fácil, verdad? 
De hecho, para cada zona horaria tendríamos que investigar cuál es su diferencia con UTC, que es un problema molesto. ¿No hay una manera más simple y elegante de resolver este problema? 
Resolviendo el problema de zonas horarias con pytz
La comunidad de Python, ante esta necesidad, creó varias bibliotecas para facilitar la manipulación de <em>timezones</em>,, como <a href="https://pythonhosted.org/pytz/">pytz</a>. Para instalar pytz, puede usar <a href="https://pypi.python.org/pypi/pip">pip</a> desde la terminal:
python
pip install pytz
<em>Es probable que la instalación en sistemas basados en UNIX requiera permiso sudo.</em>
Una vez instalado, podemos importar su clase timezone y es fácil obtener la zona horaria que queremos:

Código

Tenga en cuenta que ponemos el timezone como América / Bogota. ¿Pero qué pasa si queremos conocer otras posibilidades, como Ciudad de México, São Paulo, Buenos Aires? Puede ver la lista de zonas horarias compatibles con pytz iterando sobre pytz.all_timezones:

Código

¡Trabajar con fechas para nosotros ya no será un problema!
Más Python y fechas
A lo largo de esta publicación, utilizamos varios códigos de formato de fecha, como el estándar %d/%m/%Y% H:%M. ¿Pero qué significa?
Estos códigos están definidos por la <a href="http://man7.org/linux/man-pages/man3/strftime.3.html">documentación del strftime (3)</a>. Los utilizados en nuestros ejemplos son:

%d: el día del mes representado por un número decimal (del 01 al 31)
%m: el mes representado por un número decimal (del 01 al 12)
%Y: el año representado por un número decimal que incluye el siglo
%H - La hora representada por un número decimal usando un reloj de 24 horas (de 00 a 23)
%M: el minuto representado por un número decimal (de 00 a 59)

Conclusión
Comenzamos la publicación con la necesidad de manipular las fechas con Python y vimos cómo hacerlo usando el tipo date. Aprendimos cómo agregar nuestra fecha a una hora usando la clase datetime, y cómo formatear esta información en un string que nos sea fácil de leer.
Terminamos teniendo un problema con la zona horaria y vimos cómo resolverlo con la clase timezone en Python 3. También vimos una manera más simple de resolver este problema con la biblioteca pytz, creada por la comunidad Python.
¿Qué tal aprender más sobre Python y sus diversos recursos? Entonces, ¡Mira nuestros cursos de Python para Data Science aquí en Alura!---
"Python: trabajando con diccionarios"
2020-10-08
"El diccionario es una de las estructuras más importantes y utilizadas en Python, en este artículo aprenderemos buenas prácticas y cómo trabajar con él."
"yanorestes"
"yan.orestes@alura.com.br"
"data-science"

Estoy programando un sistema de agenda telefónica en Python . Para eso, necesito almacenar los números de los contactos. Al principio, podemos pensar en usar una lista:
python
telefones = ['1234-5678', '9999-9999', '8765-4321', '8877-7788']
Bien, tenemos los números de teléfono almacenados. Pero ... ¿cuál es el punto de tener una lista de números sueltos? ¿De quién es el número en la segunda posición?
Necesitamos conectar de alguna manera los teléfonos a sus respectivos contactos. Un tipo que puede ayudarnos con eso es <a href="https://docs.python.org/3/c-api/tuple.html">la tupla</a>:
python
contacto = ('Yan', '1234-5678')
Para no necesitar una variable para cada contacto, podemos ponerlos directamente en una lista de contactos:
python
contactos_lista = [('Yan', '1234-5678'), ('Pedro', '9999-9999'),
                    ('Ana', '8765-4321'), ('Marina', '8877-7788')]
¡Muy bien! Si queremos acceder al número de teléfono de Marina, podemos hacer:
print(contactos_lista[3][1])
Y el resultado:
8877-7788
¡Lo hicimos! Ahora, el número de Pedro: ... Pero espera, ¿cuál es la posición de Pedro en nuestra lista de contactos?
Tenga en cuenta que, tal como están las cosas, apenas importa tener guardados los nombres de los contactos, porque solo podemos acceder a cada contacto por su posición en la lista. ¿No hay mejor manera?
Mapear contactos con un diccionario
Hasta ahora tenemos una lista de contactos donde al menos cada contacto tiene su nombre y teléfono conectados. Sin embargo, por ahora, solo podemos acceder a un contacto individualmente por su posición en la lista, y no por su propio nombre.
Lo ideal sería mapear el nombre de cada contacto con su teléfono, evitando otros problemas.
Por ejemplo, podemos decir que el contacto Yan tiene el número de teléfono 1234-5678. Entonces, cuando queremos saber cuál es el número de teléfono de Yan, simplemente ve a su nombre. De esa manera, no necesitamos memorizar en qué posición de la lista está el teléfono, solo necesitamos saber su nombre de contacto.
Tenga en cuenta que, en este caso, estamos creando una especie de diccionario, similar a los diccionarios de portugués o inglés. En estos diccionarios, tenemos una clave que es la palabra que estamos buscando, que en nuestro caso es el nombre del contacto.
Cuando encontramos esa palabra, podemos ver su significado, es decir, el valor de esa palabra en el idioma, que en nuestro caso es el número de teléfono.
Este tipo de estructura se usa ampliamente en varios lenguajes de programación (pero generalmente tiene otro nombre, como <a href="https://pt.wikipedia.org/wiki/Vetor_associativo">matriz asociativa</a>. Con él, logramos comportarnos de manera similar a los diccionarios.
Bueno, digamos a Python que cree uno de estos diccionarios para nosotros. En Python, usamos llaves ( {}) para construir nuestros diccionarios. En este caso, le decimos a Python que la clave 'Yan'tiene ( :) el valor 1234-5678como su teléfono:
python
contactos = {'Yan': '1234-5678'}
print(type(contactos))
Y mira el tipo de variable contactosque acabamos de crear:
python
&lt;class 'dict'&gt;
dict- De hecho, un diccionario. ¿Pero tendremos que volver a escribir todos los datos de contacto que ya hemos incluido en nuestra lista de contactos? También podemos crear un diccionario usando su función de constructor dict()y pasando, como parámetro, una lista de tuplas, como en nuestro caso:

Código

Y ahora:
python
{'Yan': '1234-5678', 'Pedro': '9999-9999', 'Ana': '8765-4321',
  'Marina': '8877-7788'}
Bien, tenemos nuestra estructura lista! Pero espere un minuto, nuestro diccionario no está en orden alfabético, no tiene orden ... ¿Cómo podemos acceder a sus artículos?
Acceder a elementos en un diccionario
Podemos acceder a sus valores de manera similar a cómo accedemos a los valores de una lista, por ejemplo, con la diferencia de que usamos las teclas que definimos en lugar de los índices numéricos:
python
print(contatos['Ana'])
Y el resultado:
8765-4321
¡Todo bien! Hasta que, después de un tiempo, quiso ver si podía encontrar el número de teléfono de un viejo amigo Javier. Hice lo siguiente:
python
print(contatos['Javier'])
Pero mira lo que apareció en la pantalla:
python
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
KeyError: 'Javier'
Um ... una excepción de tipo KeyErrorque indica que Javierno se encontró la clave . Pero es un poco extraño imprimir todo este mensaje para el usuario, ¿no? Puede ser confuso ... ¿No podemos reemplazar eso?
Los diccionarios tienen un método específico para buscar valores, get(), en el que podemos pasar como parámetros la clave que queremos y un valor predeterminado para devolver si no se encuentra esa clave:
python
print(contactos.get('Yan', 'Contacto no encontrado'))
print(contactos.get('Javier', 'Contacto no encontrado'))
Y el resultado:
python
1234-5678
Contacto no encontrado
¡Mucho mejor ahora!
También podemos verificar si un contacto está en nuestro diccionario usando la palabra clave in:
python
print('Yan' in contactos)
Y la respuesta:
python
True
¡Como esperado!
En estos días, encontré un número suelto aquí y quería verificar si estaba en mi calendario:
python
print('9999-9999' in contactos)
Esta vez, mira el resultado:
python
False
Huh Pero ese número está en la agenda, ¡es el número de Pedro! ¿Por qué fue el resultado False, entonces?
Resulta que in, usado de esta manera, verifica solo las claves del diccionario, no los valores. Para obtener valores, podemos usar el método values():
python
print('9999-9999' in contactos.values())
Y la respuesta:
python
True
¡Ahora si! Tenemos nuestra estructura de mapeo y ya podemos visualizar sus datos. Pero ahora, ¿qué más podemos hacer?
Agregar valores al diccionario
Encontré a mi amigo Javier y finalmente decidí agregar su número a mi directorio telefónico. Pero ... ¿cómo puedo hacer esto con nuestro diccionario de contactos? Traté de usar un método append(), como en las listas, y mira lo que apareció:
python
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
AttributeError: 'dict' object has no attribute 'append'
Este método no existe ... Traté de crear otro diccionario y agregarlo, pero el resultado fue este:
python
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: unsupported operand type(s) for +: 'dict' and 'dict'
¡Tampoco funciona! La sintaxis de agregar un elemento a un diccionario es ligeramente diferente a la de otros tipos de Python, pero también bastante objetiva. Por ejemplo, si queremos agregar a Javier a nuestro diccionario de contactos, simplemente asigne su número de teléfono a la tecla 'Javier':
python
contatos['Javier'] = '8887-7778'
print(contatos)
Ahora mira el diccionario:
python
{'Yan': '1234-5678', 'Pedro': '9999-9999', 'Ana': '8765-4321',
  'Marina': '8877-7788', 'Javier': '8887-7778'}
¡Funcionó!
Eliminar elementos del diccionario
Desafortunadamente, mi amiga Marina perdió su teléfono celular y, en consecuencia, ya no poseía el número guardado en mi diccionario de contactos. Ahora necesitamos eliminar el elemento que le corresponde. ¿Pero como?
Una manera simple es usar la <em>statement</em> del , así:
python
del contactos['Marina']
print(contactos)
Y ahora, nuestro diccionario:
python
{'Yan': '1234-5678', 'Pedro': '9999-9999', 'Ana': '8765-4321',
  'Javier': '8887-7778'}
¡Correcto! Pero, ¿qué pasa si intentamos eliminar un elemento que no existe?
python
del contactos['Catarina']
Mira lo que pasa:
python
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
KeyError: 'Catarina'
¡Um KeyError, como el que obtuvimos al intentar obtener un artículo que no existía! Para evitar esta excepción, también tenemos un método de diccionario que puede ayudarlo -  pop().
El método pop(), además de eliminar el elemento con la clave especificada del diccionario, nos devuelve el valor de ese elemento. También podemos definir un valor de retorno predeterminado, en caso de que no se encuentre la clave:

Código

Es el resultado:

Código

¡Todo está bien ahora! Lástima que tengo pocos contactos en la agenda ...
Poniendo dos diccionarios juntos
Le pedí a mi amigo Pedro que me ayudara a aumentar mi agenda agregando algunos amigos más como contactos. Me dio su agenda:
python
contactos_de_pedro = {'Yan': '1234-5678', 'Fernando':'4345-5434',
                        'Luiza':'4567-7654'}
¿Y entonces? ¿Cómo agregamos todos estos contactos a mi calendario? Podemos intentar hacer uno loop yendo a través de los contactos de Pedro y agregándolos uno por uno:

Código

Ahora veamos mi diccionario:
python
{'Yan': '1234-5678', 'Pedro': '9999-9999', 'Ana': '8765-4321',
  'Javier': '8887-7778', 'Fernando': '4345-5434', 'Luiza': '4567-7654'}
Ok, funcionó! ¿Pero no hay una manera más simple de hacer esto, evitando el ciclo for?
Tenga en cuenta que queremos combinar nuestros dos diccionarios en uno: el primero. Queremos actualizar el primer diccionario para que también contenga los valores del segundo. Para esto, tenemos nuestro propio método: el update(). Podemos reemplazar el bucle con la llamada al método:
python
mis_contactos.update(contactos_pedro)
print(mis_contactos)
¡Y el resultado sigue siendo correcto, con un código más sucinto!
El problema del prefijo para comprensión del diccionario
Imagine si necesitemos adicionar algum código, por ejemplo él código de algun pais o region como prefijo, por ejemplo el 9. ¿Y ahora? ¿Tendré que usar el método update()para cambiar todos los valores? No tiene sentido…
Lo ideal sería tener una lógica más objetiva, que simplemente copiara todo el diccionario de contactos, pero agregara uno 9 a cada valor. Al principio, una idea es hacer esto con uno for, que debería funcionar, pero ¿existe una forma más simple?
Más sintáctico y elegante que un bucle for tradicional es lo que podemos hacer con lo que ya sabemos por la sintaxis de lista de comprensión, pero esta vez aplicado a los diccionarios de comprensión de diccionario . La idea es la misma y la sintaxis es similar:
python
mis_contactos_nuevo = {nombre: '9' + mis_contactos[nombre] for nombre in mis_contactos}
print(mis_contactos_nuevo)
Es el resultado:
{'Yan': '91234-5678', 'Pedro': '99999-9999', 'Ana': '98765-4321',
  'Javier': '98887-7778', 'Fernando': '94345-5434', 'Luiza': '94567-7654'}
¡Lo hicimos! ¡Ahora podemos manejar bien nuestro horario!
Para saber mas
Los diccionarios son cambiables
Un detalle que puedes haber notado hasta ahora es que a lo largo de la publicación, generalmente modificamos (ya sea agregando, eliminando o actualizando) el diccionario en el acto, sin la necesidad de crear otro objeto.
Esto se debe a que los diccionarios, como las listas, son modificables . Es importante estar al tanto de esto, para no molestarnos en las posibles complicaciones que la diferencia de mutabilidad implica en los objetos en Python.
<em>Views</em> vs. listas
Usamos el método values()para verificar si el diccionario tenía un valor específico, pero nunca pudimos ver qué devuelve. Vamos a probar:
valores = mis_contactos_nuevo.values()
print(valores)
Aquí llegamos a un punto interesante. Cuando ejecutamos este código en Python 2 , mira lo que aparece
['91234-5678', '99999-9999', '98765-4321', '98887-7778',
  '94345-5434', '94567-7654']
Una lista que contiene los valores, a la derecha. Ahora, en el intérprete de Python 3:
dict_values(['91234-5678', '99999-9999', '98765-4321',
                '98887-7778', '94345-5434', '94567-7654'])
El resultado es similar, pero de un tipo diferente dict_values. ¿Que es eso? Esta clase es lo que llamamos <a href="https://docs.python.org/3/glossary.html#term-dictionary-view">vista de diccionario</a>, que no es más que una ventana a los valores del diccionario.
<em>Views</em> suelen ser ventajosas en comparación con las listas, precisamente porque son solo una apertura, no una estructura en sí mismas. Por lo tanto, siempre están actualizados:

Código

En el intérprete de Python 2:
['91234-5678', '99999-9999', '98765-4321', '98887-7778',
  '94345-5434', '94567-7654']
La lista era como la anterior. En Python 3:
dict_values(['911122-3344', '99999-9999', '98765-4321',
                '98887-7778', '94345-5434', '94567-7654'])
La variable valoresactualizada juntos! Además de esta ventaja, también ahorramos memoria con <em>vistas</em> , ya que siempre ocupan el mismo espacio, como una ventana:
print(valores.__sizeof__())
Con la lista en Python 2, el resultado:
112
Ahora, con la <em>view</em> en Python 3:
24
Mucho menos!
El tipo de mapeo en Python
Las tuplas y las listas pueden ayudarnos mucho a organizar nuestros datos en programas, pero a veces necesitamos un tipo más directo y específico para el mapeo basado en la clave y el valor.
Para esta necesidad, en Python tenemos el tipo de diccionario , que es modificable y nos proporciona varios métodos para facilitar la manipulación de datos en esta estructura.
En esta publicación, aprendimos no solo cómo crear un diccionario, sino también cómo acceder a elementos dentro de él, agregar otros, eliminar e incluso unir un diccionario con otro. Otra característica interesante que pudimos explorar es la comprensión del diccionario, que nos permite crear un diccionario poderoso con una sintaxis más simple.
¿Qué tal aprender más sobre Python y sus diversos recursos? Entonces, ¡Mira nuestros cursos de Python para Data Science aquí en Alura!---
"¿Qué es front-end y back-end?"
2020-09-27
"¿Qué es Front-end? ¿Qué es Back-end? ¿Developers full-stack? Cual es la diferencia de cada programador?"
"omariosouto"
"mario.souto@caelum.com.br"
"front-end"

Front-End o Back-End developer son términos para diferenciar dónde termina especializándose un programador. Si está ingresando al mundo del desarrollo, lo más probable es que clasifique a todos como programadores y programadoras, pero los sistemas se han vuelto tan complejos que necesitamos que cada uno sea responsable por partes específicas de una aplicación.
¿Qué es Front-End?
Podemos clasificar como parte visual de un sitio web, con aquello que conseguimos interactuar. Quien trabaja con Front-End está a cargo de desarrollar una interfaz gráfica mediante código, generalmente con las tecnologías base de la Web (HTML, CSS y JavaScript). Algunas personas pueden confundir un poco este trabajo con lo que hace un diseñador (en el pasado había una entidad llamada Webmaster que hacía todo eso y algo más), pero la diferencia aquí es que el diseñador usará alguna herramienta visual para diseñar la interfaz, desde Photoshop a Sketch, y quien hace front-end estará más cerca del código en sí, que se ejecutará en un navegador Web como Chrome, Firefox o Safari.

imagen

Es importante entender cómo funciona la web para saber qué diferencia a quien hace front-end del back-end.
¿Qué es Back-End?
Back-End, como su nombre indica, surge de la idea de lo que hay detrás de una aplicación. Puede ser un poco abstracto al principio, pero piense que para poder usar Facebook a diario, los datos de su perfil, amigos y publicaciones deben guardarse en algún lugar, siendo este lugar una base de datos y se deben procesar desde allí. ¡No basta solo el front-end en HTML y CSS! Back End trabaja en buena parte de los casos, haciendo el puente entre los datos que vienen del navegador hacia la base de datos y viceversa, siempre aplicando las debidas reglas de negocio, validaciones y garantías en un entorno donde el usuario final no tiene acceso y pueda manipular algo.

imagen

Es común que los desarrolladores Back-End trabajen con herramientas de línea de comando, sitios web (haciendo que HTML sea dinámico), análisis de datos (aunque esto sea más bien lo que hace un Data Scientist). Todo esto se puede hacer con varios lenguajes diferentes, como: PHP, Ruby, Java, Clojure, C# entre tantos otros.
¿Dónde se encaja el desarrollador de aplicaciones móviles?
Existe una discusión sobre si aquellos que trabajan como Front-End también son desarrolladores Móviles. En la práctica no, pero puede serlo. Explicando un poco más sobre las tecnologías que involucran las aplicaciones móviles son al principio completamente diferentes a las que citamos para Web siendo estas para android: Java, Kotlin; Y para iOS: Swift y Objective C. Desde el inicio de los dispositivos móviles, ha habido alternativas para desarrollar como Phonegap o Apache Cordova que permiten crear un sitio web que sea instalable como aplicación (hoy tenemos la propuesta de las PWA).
En la práctica son mundos distintos, lo que puede generar una intersección entre el Front-End y el mundo móvil sería React Native por usar tanto un framework súper popular en la Web como el lenguaje JavaScript. Incluso con toda esta familiaridad, las diferencias de las plataformas aún separan a los profesionales que trabajan con sitios web y aplicaciones en dos líneas diferentes.
¿Es posible ser Full Stack?
Bueno, ambas vertientes del Front y del Back-End tienen un <a href="https://github.com/kamranahmedse/developer-roadmap">sendero muy largo</a> dependiendo de qué tan profundo conocedor de ambas quieres ser. Una definición común es que cualquiera que trabaje con Front-End y Back-End es un fullstack. Con los años como desarrollador es un tanto natural que después de comenzar por uno de los lados, se aprende cómo funciona el otro, por ejemplo yo comencé como desarrollador PHP y hoy estoy 100% enfocado en Front-End, aunque no sea un experto en Back-End los conceptos que conozco me ayudan a solucionar problemas en este lado, no tan bien como Front-End, pero consigo.
A lo que vale la pena atentar aquí es que algunas empresas esperan que también tenga conocimiento de Devops y de SQL y base de datos.
Mi consejo aquí es que, si está comenzando su carrera céntrese en un área, estúdiala mucho y según se vaya sintiendo cómodo y quiera explorar nuevos temas, el conocimiento vendrá de manera más natural.
Conclusión
Vimos que quien trabaja con sitios web se llama Front-End, quien hace aplicaciones es un desarrollador móvil y que el Back-End se encarga de la aplicación que está detrás de estos 2 tipos, entre otros casos. Vimos que para ser Full Stack, puede ser necesario aprender mucho.
Alura ofrece cursos y formaciones completas para que aprendas nuevas tecnologías del mundo de negocios. A través de nuestra comunidad activa, clases de video de alta calidad y ejercicios prácticos, ¡Estarás preparado en poco tiempo!---
"¿Qué es la Metodología Ágil?"
2020-10-13
"Entonces, decidimos dejar de seguir una metodología en cascada y seguir una metodología más fluida.."
"giulia-losnak"
"giulia.losnak@alura.com.br"
"inovacao-gestao"

En este artículo, les voy a contar cómo decidimos dejar de seguir una metodología en cascada para seguir una metodología más ágil. 
Una vez fuí contratada por una empresa que desarrollaba software y aplicaciones para otras empresas. En esta empresa, uno de mis primeros trabajos fue ayudar en el desarrollo de una aplicación que tenía como objetivo permitir que las personas encuentren restaurantes baratos cerca de donde ellas se encontraban.
Cuando conocí al equipo de desarrollo, me explicaron que seguían una estructura clásica: planificación, análisis, diseño, documentación, codificación, realizar testeos, implementar y, si es necesario, realizar el mantenimiento de la aplicación.
Esta es una metodología de desarrollo llamada en cascada, lo que significa que el proceso se lleva a cabo a través de fases y una de ellas solo se inicia cuando finaliza la anterior y, por lo tanto, no es necesario volver a un trabajo específico, visto que se ha completado totalmente.
Sin embargo, nos tomó mucho tiempo la etapa de planificación, análisis y documentación de todo el proyecto y el cliente estaba impaciente porque no habíamos mostrado nada nuevo hasta ese momento.
Además, lo que habíamos hecho no era material para presentarle al cliente, ya que la documentación es para consulta de analistas, arquitectos, desarrolladores y evaluadores del proyecto, es decir, absolutamente nada de eso agrega valor al cliente.
Luego, el cliente nos informó que el software ahora tenía un propósito diferente al inicial. Intentamos realizar los ajustes, sin embargo, después de analizar vimos que prácticamente tendríamos que  planificar y empezar de nuevo toda la documentación. Consciente de todo el tiempo que demoramos en hacer la primera planificación, el cliente canceló todo el proyecto y perdimos ese trabajo.
A esa altura ya habíamos aprendido que ese método no funcionaba. ¿Y cuál fue nuestro error?
Agilidad
Comenzamos a pensar en formas de hacer que los próximos proyectos sean llevados a cabo más rápido. Entonces, decidimos no continuar con esta metodología en cascada y seguir una metodología más ágil.
Pero entonces, ¿Cómo podemos hacer eso? ¿Eliminar todas las reglas?
Con eso en mente, dividimos las tareas entre todos los miembros del equipo. Entonces, decidimos que cada persona tomaría una actividad definida para llevar a cabo en ese mes y desarrollaría sólo aquello.
Cuando comenzamos el proyecto, lo desarrollamos de esta manera: las tareas se dividieron y cada tarea se asignó a una persona que tenía más facilidad para desarrollarla.
Sin embargo, como el equipo se dividió, no sabíamos qué estaba haciendo cada uno y qué parte estaba lista o no. Esto, con el tiempo, comenzó a dejarnos confusos, sin saber en qué fase estábamos y cuándo podríamos comenzar a desarrollar otro requisito.
Y la situación empeoró cuando tocó presentarle al cliente, porque como no sabíamos el estado de cada etapa, algunas partes estaban completamente avanzadas y otras en estado inicial.
Sin mencionar que algunas personas estaban teniendo dificultades para realizar sus tareas, sin embargo, no podían pedir ayuda, ya que no había una comunicación entre el equipo.
Además, teníamos los requisitos, pero no sabíamos por qué eran necesarios y esto nos dejaba confundidos sobre cómo hacerlo de la mejor manera para el usuario.
Nos dimos cuenta de que un método sin reglas tampoco funcionaba. ¿Y cómo podríamos resolverlo? ¿Volver a las reglas que tampoco funcionaron?
Entonces, decidimos tratar de colocar algunas premisas que se cumplirían durante el proceso.
Foco en las personas y sus interacciones más que en los procesos y sus herramientas
Cuando nos dimos cuenta de que había un obstáculo para que el equipo se pueda comunicar de forma correcta, decidimos que deberíamos tener una mayor integración entre nosotros, a través de almuerzos y conversaciones durante el café.
Y, además, conocer el trabajo del otro, a través de reuniones donde cada uno podría decir lo que estaba haciendo, lo que iba a hacer a continuación y si tenía alguna dificultad o facilidad. En estas reuniones planificamos lo que haríamos a continuación, además de integrar a todo el equipo en el proceso de desarrollo.
Concordamos que los procesos y las herramientas son importantes, pero son realizados y utilizados por las personas del equipo. Por lo tanto, la interacción entre todos debe ser fluida y equilibrada para que la eficacia de los procesos y las herramientas se produzca sin mayores problemas.
Además, para cada requisito, en lugar de escribir lo que necesitamos hacer, por ejemplo, agregar un campo de búsqueda, escribimos cómo  esto ayudará al usuario, por ejemplo, el usuario necesita buscar términos para encontrar las funciones del software de modo más rápido .
Software funcionando vale más que una documentación completa e integral
Como perdimos mucho tiempo con la documentación, decidimos que nuestro enfoque estaría más en el desarrollo, visto que agrega mucho valor al cliente.
Entonces, cuando recibimos un proyecto, analizamos cómo cada requisito puede ayudar al usuario y comenzamos a desarrollarlo.
De esta manera, tenemos menos trabajo con la documentación, ya que lo hacemos por partes, al mismo tiempo que desarrollamos el <em>software</em> y se lo presentamos al cliente.
Más colaboración con los clientes y menos interacciones para discutir negociaciones y contratos
También definimos que el cliente debería estar más presente en todo el proceso de desarrollo, evaluando lo que se ha hecho e indicándonos las próximas prioridades.
Además, de esta manera, si el proyecto necesita algo más, el cliente puede informarnos fácil y rápidamente, ya que el cliente es parte del proyecto y participa en cada etapa.
Para tener esta colaboración, a menudo programamos una reunión por mes con el cliente. En ella, mostraremos lo que se hizo, recibimos nuevas exigencias o cambios de las anteriores entregas de forma frecuente y sin tener que desechar todo el proyecto, porque, si hay algún cambio, lo sabremos pronto.
Responder y adaptarse a los cambios es más importante que seguir el plan inicial
Ya que las necesidades del cliente y del proyecto cambian, siempre debemos estar atentos. Entonces, en lugar de planificar todo el proyecto de una sola vez, ahora planificamos cada etapa individualmente y junto con el cliente.
Al tener este contacto más directo con el cliente y al desarrollar parte por parte, podemos adaptarnos a los cambios más rápidamente ya que tendremos que rediseñar solo una parte y no la totalidad.
Después de unos meses, esta nueva forma mostraba resultados debido a los beneficios que brindaba ese método, que entre ellos eran: satisfacción del cliente, mejor gestión de prioridades, mejor visibilidad de los proyectos, ya que todos sabían lo que estaba sucediendo; mayor productividad del equipo, ya que estaba más motivado por seguir un ritmo más saludable valorizando la objetividad y simpleza del sistema en desarrollo.
Fue cuando se contrató a un nuevo integrante para el equipo, así que le explicamos cómo habíamos organizado las tareas, respondió que era una metodología ágil, y que la forma en que lo hacíamos seguía los valores del manifiesto ágil.
Manifiesto ágil
El <a href="https://agilemanifesto.org/">Manifiesto para el Desarrollo Ágil de Software</a> fue escrito en 2001 por un grupo de 17 desarrolladores. Ellos agruparon y refinaron varios conceptos de metodología de desarrollo ágil en el manifiesto.
Estos conceptos iban en sentido contrario al método en cascada, es decir, rígido, donde se deben seguir las reglas y una orden específica, y contra el método sin regla ni definición, que se pierde. La metodología ágil está en el medio entre lo rígido y lo libre.
Este manifiesto tiene cuatro valores y doce principios que deben incluirse en la rutina de la empresa.
Los valores, que ya estábamos siguiendo son:

Individuos e interacciones sobre procesos y herramientas
Software funcionando sobre documentación extensiva
Colaboración con el cliente sobre negociación contractual
Respuesta ante el cambio sobre seguir un plan

Y no es que solo la parte antes del "más que" sea importante, sin embargo, es una prioridad más alta que lo que viene después.
Ahora, los <a href="https://agilemanifesto.org/principles.html">principios</a> detrás de los valores, que siempre deben tenerse en cuenta mientras se desarrolla el software, son:

Nuestra mayor prioridad es satisfacer al cliente mediante la entrega temprana y continua de software con valor.
Aceptamos que los requisitos cambien, incluso en etapas tardías del desarrollo. Los procesos Ágiles aprovechan el cambio para proporcionar ventaja competitiva al cliente.
Entregamos software funcional frecuentemente, entre dos semanas y dos meses, con preferencia al periodo de tiempo más corto posible.
Los responsables de negocio y los desarrolladores trabajamos juntos de forma cotidiana durante todo el proyecto.
Los proyectos se desarrollan en torno a individuos motivados. Hay que darles el entorno y el apoyo que necesitan, y confiarles la ejecución del trabajo.
El método más eficiente y efectivo de comunicar información al equipo de desarrollo y entre sus miembros es la conversación cara a cara.
El software funcionando es la medida principal de progreso.
Los procesos Ágiles promueven el desarrollo sostenible. Los promotores, desarrolladores y usuarios debemos ser capaces de mantener un ritmo constante de forma indefinida.
La atención continua a la excelencia técnica y al buen diseño mejora la Agilidad.
La simplicidad, o el arte de maximizar la cantidad de trabajo no realizado, es esencial.
Las mejores arquitecturas, requisitos y diseños emergen de equipos auto-organizados.
A intervalos regulares el equipo reflexiona sobre cómo ser más efectivo para a continuación ajustar y perfeccionar su comportamiento en consecuencia.

El manifiesto ágil es como una base filosófica para las metodologías ágiles y, en base a estos valores y principios, se han creado muchos. Entre ellos, Scrum, Kanban y EXtreme Programming, conocido como XP.
Ahora que nuestro equipo ya conoce los valores del manifiesto ágil, podemos utilizar algunas de las metodologías a seguir en el desarrollo del día a día. 
¿Estás interesado en los métodos Agile y Scrum o quieres mejorar la gestión de equipos en tu empresa? ¡Consulta los cursos de Alura para guiarte en el proceso de convertirte en un experto en Agile y Scrum!---
"¿Qué es Management 3.0 y por qué aplicarlo en su empresa? "
2018-07-03
"Descubra cómo Management 3.0 puede ayudarlo a retener talento, involucrar tu equipo  y hacer crecer tu negocio."
"lenka-rejfirova"
"lenka.rejfirova@caelum.com.br"
"inovacao-gestao"

La gestión colaborativa es un estilo de liderazgo, en el que todos en la empresa participan en las decisiones comerciales y en el éxito del negocio. Se ve perfecto, ¿no?
Bueno, pero ... ¿Cómo poner esto en práctica? Primero, comprendamos de dónde proviene la Gestión 3.0 y cuáles son los principios de este estilo de administración de equipos.
¿Qué es la gestión 3.0?
<em>"La gestión es demasiado importante para dejarla solo a los gerentes".</em>
La cita anterior es de Jurgen Appelo. Es un gerente holandés, escritor, orador y hace muchas otras cosas, y probablemente estaba muy cansado de ver que las compañías no logran administrar los equipos repitiendo los mismos viejos patrones. Por lo tanto, creó un concepto que comenzó a llamar Management 3.0.
¿Pero qué puede hacer Management 3.0 por tu empresa? Según Jurgen, el concepto aporta una gestión más humanizada a la empresa, en la que las personas deben ser el activo más importante de la organización.
Uno de los objetivos de Gestión 3.0 es involucrar a los empleados y, por lo tanto, acelerar el crecimiento del negocio, con todos en la empresa centrados en un objetivo común: entregas rápidas, efectivas y ágiles para crear productos increíbles. Esto también reduce la rotación de personal y aumenta la satisfacción.
Jim Highsmith, consultor ejecutivo de Thoughtworks, dice que <em>"Management 3.0 sirve a los líderes involucrados en la transformación Agile y Lean como una guía provocativa para que ellas y ellos mismos se vuelvan ‘ágiles".</em>
Para explicar su visión de Management 3.0 (o Management 3.0), Appelo contextualiza las formas de gestión de personas de la siguiente manera:
Management 1.0
Orientado a comandos, con baja libertad en decisiones y creaciones. El poder está en manos de unas pocas personas, la estructura de toma de decisiones es de arriba hacia abajo.
Management 2.0
Un estilo que busca aportar mejoras en la gestión y desarrolla algunas nuevas técnicas de gestión más eficaces, como la metodología Six Sigma, la Gestión de calidad total (TQM) y otras. Aun así, la estructura de decisión sigue siendo muy vertical.
Management 3.0
Busca valorar personas y equipos. El objetivo es crear un entorno donde todos sean responsables por el éxito del negocio y depende de los equipos cómo se realizan las tareas, eliminando la verticalidad del sistema de gestión.
6 principios del Management 3.0

imagen

Jurgen Appelo ve a las compañías como redes y sugiere aplicar 6 visiones para el éxito de la gestión del equipo. Dado que el holandés es famoso por su sentido del humor durante las conferencias y talleres, en su libro sobre Management 3.0, ilustra este concepto de seis visiones con este hermoso dibujo de un marciano:
Las 6 visiones para el éxito con Management 3.0 son las siguientes:
Energizar personas
Para que la estrategia sea exitosa, es importante involucrar a las personas y mantenerlas siempre creativas y motivadas para hacer lo mejor.
Capacitar personas
Los equipos deben estar autoorganizados y, por lo tanto, necesitan autorización y confianza de la gerencia.
Alinear restricciones
Si bien se alienta a los equipos a autogestionarse, es importante traer reglas y limitaciones para que una mayor libertad no se vuelva tóxica para la empresa.
Desarrollar habilidades
Un equipo, dado que se autoorganiza, también debe ser autosuficiente. Por esta razón, es necesario capacitar a los empleados y también se pueden crear equipos multidisciplinarios, en los que todos puedan hacer su parte para avanzar en un proyecto.
Aumentar las estructuras
Con un mayor enfoque en la comunicación y la colaboración entre equipos, se fomenta un crecimiento consciente del negocio con un enfoque en la calidad.
Mejorar todo
Finalmente, se buscan mejoras constantes y los errores deben verse como oportunidades de mejora. Con esto, es posible apalancar el negocio de una manera sostenible y predecible.
¿Gestión 3.0 o métodos ágiles?
Tu que has leído hasta aquí puede preguntarte ahora: De acuerdo, pero ¿no es esto lo mismo que Agile?
Yo también cuestioné. La realidad es que Jurgen Appelo tiene una formación en desarrollo de software y, por lo tanto, las 6 visiones de Management 3.0, así como el mayor enfoque en las personas, recuerdan el Manifiesto Ágil. Incluso podemos decir que Management 3.0 no nacería si los métodos Agiles no hubieran existido.
De esta manera, podemos decir que, incluso si el concepto se desarrolló para ser utilizado principalmente en empresas de TI, la Gestión 3.0 también se adapta a otras áreas, brindando un nuevo enfoque para administrar equipos con el fin de tener personas más comprometidas y productivas, apuntando a una organización más ágil.
Finalmente, las dos metodologías, Management 3.0 y Agile, se pueden usar al mismo tiempo, combinadas entre sí, y muchas compañías lo hacen.
Simone Pittner, Coach ágil de Adaptworks, caracteriza a Management 3.0 como una "forma de pensar" y sugiere que muchas prácticas de métodos ágiles, como Scrum o Kanban, ya se adhieren bien a las ideas del Management 3.0.
Según Pawel Brodzinski, CEO de Lunar Logic, una empresa de desarrollo de Polonia, conocida por trabajar con métodos Agiles, Management 3.0 no se trata solo de agilidad, sino sobre todo de una gestión saludable, sensata y práctica.
Cómo adoptar Management 3.0
Management 3.0 es un concepto y no exactamente una metodología que trae un paso a paso a seguir para realizar mejoras en una empresa.
Sin embargo, comprender los 6 puntos de vista del pequeño monstruo que creó el gurú de la agilidad y la gestión 3.0 es fundamental para alinear la gestión y la comunicación entre los equipos y escalar el éxito de la empresa en su conjunto con procesos más eficientes y ágiles.
Y no tienes que aplicar todas las visiones a la vez: con calma, decida dónde sería mejor comenzar y piense en las estrategias que mejor se adapten a tus equipos.
André Faria, CEO de Bluesoft, también explica que es necesario considerar antes de aplicar una gestión más colaborativa en general: cada persona en la empresa trabaja de manera diferente y puede preferir una u otra forma de gestión; mientras uno se siente más cómodo ejerciendo su función de manera más autónoma, otro puede funcionar mejor si se lo diriges más de cerca, sin tener que tomar muchas decisiones por sí mismo.
Empresas que usan Management 3.0
Entre los ejemplos más famosos de uso de una estrategia de Gestión 3.0 se encuentra Google, que proporciona el 20% del tiempo para que las personas desarrollen proyectos que consideran relevantes para las mejoras en sus sectores o en la empresa (Energizar personas).
En Pixar, siempre después del lanzamiento de una nueva película, hay una presentación sobre lo que salió bien y lo que salió mal en este proyecto (Mejorar todo).
Zappos ejecuta la visión 2 (Empoderar personas) con la ausencia de un script para realizar llamadas telefónicas. Por lo tanto, las personas en el centro de llamadas dirigen las llamadas de los clientes con mayor autonomía y confían en la administración para hacer esto, y necesitan seguir solo una regla: servir bien al cliente. En 2018, Zappos fue galardonada como la marca de "mejor servicio al cliente" en los Estados Unidos.
La consultora Taller aplica los conceptos de Management 3.0 colocando a las personas primero y capacitando a los equipos con libertad y confianza. 
De manera similar, Thoughtworks es conocido por valorar la diversidad de las personas que trabajan en la empresa (Empoderar personas, Energizar personas), pero también sigue la visión de Incrementar estructuras al enfocar en la excelencia del software y siempre apreciando Crecimiento empresarial sostenible.
Por dónde empezar ahora: ideas y cursos
¿Estás interesado en los métodos Agile y Scrum o quieres mejorar la gestión de equipos en tu empresa? ¡Consulta los cursos de Alura para guiarte en el proceso de convertirte en un experto en Agile y Scrum!---
"Quiero trabajar en una startup. ¿Qué necesito hacer?"
2020-10-17
"Tu objetivo es trabajar en una startup. ¿Pero estás haciendo todo lo posible para lograrlo? "
"adriano-almeida"
"adriano.almeida@caelum.com.br"
"inovacao-gestao"

Tu objetivo es trabajar en una startup. ¿Pero estás haciendo todo lo posible para lograrlo? En esta publicación, aprenderás buenas prácticas para buscar un puesto en tu área y, sobre todo, en la puesta en marcha de tus sueños.
¿Quieres apostar que las buenas oportunidades están a solo unos pasos de distancia? A continuación se presentan las actitudes que hemos resaltado para ayudarte a alinearse con tu objetivo.
Comprender qué es una startup
Las startups se han vuelto muy conocidas en los últimos tiempos debido a su rápido crecimiento y su tendencia a la innovación, que atraen la atención de muchos profesionales y empresarios.
Estos nuevos modelos de negocios están compuestos por personas que arriesgan una idea irreverente que, cuando tiene éxito, puede cubrir una demanda del mercado que muchos aún no han identificado.
A través de la tecnología y los recursos digitales, la mayoría de las veces estas nuevas empresas ingresan al mercado siendo escalables y replicables, además de poder crecer en un corto período de tiempo.
Si todavía no tenías estos conceptos claros en mente y este es tu objetivo profesional, lo primero que debes hacer es estudiar más sobre este tipo de empresa. Después de todo, no sirve de nada querer entrar en un juego sin conocer las reglas básicas, ¿verdad? Hecho esto, mira los próximos pasos.
Tener un buen currículo y portafolio
Las startups son entornos compuestos por jóvenes como usted, pero al igual que estas empresas se diferencian del mercado, los profesionales que lograron formar parte de ellas también sabían cómo destacarse.
Saber cómo presentar tu perfil profesional de una manera atractiva es, sin duda, un requisito previo para conseguir un trabajo en cualquier tipo de empresa. Sin embargo, en el caso de startups, buenos currículos y portafolios pueden significar cosas diferentes en comparación con el mercado tradicional.
¿La razón de eso? Estas personas sabían cómo presentar sus habilidades, experiencias y, principalmente, su objetivo.
Tu currículo, en primer lugar, merece una buena curación de tus experiencias y habilidades. Intente resaltar información básica y esencial que muestre de manera intuitiva el camino que has tomado y hacia dónde deseas ir. No permitas que el material se alargue demasiado - idealmente, no debe tener más de dos páginas.
Toda la información colocada en su currículo debe ser verdadera, desde la ortografía correcta de los nombres de las empresas para las que trabajaste o internaste hasta los resultados que lograste al trabajar para ellas. No intentes señalar algo que no esté de acuerdo con la realidad, después de todo, deseas establecer una imagen confiable desde el principio.
Por supuesto, no solicitarás una sola vacante. En medio de tu investigación, ciertamente habrá diferentes oportunidades y la descripción de una vacante no siempre es la misma que la de otra.
Quieres que tu currículo sea adecuado para cada vacante a la que te postulas, así que siempre adapta tu currículo de acuerdo con el puesto y la compañía. No hacerlo puede llevarte a enviar información incompleta que puede hacerte perder la oportunidad de participar en un proceso de selección.
Para muchas ofertas de trabajo en startups, también debes presentar un portafolio de producciones autorales, y debes hacerlo de la manera ideal. Ponga en tu portafolio tus mejores producciones, siempre siguiendo la misma premisa de que diferentes vacantes pueden buscar diferentes perfiles profesionales.
Comprender lo que valoran las startups
Independencia
Busque cursos, talleres y certificaciones online gratuitos. Ponga en práctica tus conocimientos y convierta tus resultados reales en un <a href="https://www.aluracursos.com/curso-online-pitch-entrevistas-presentaciones-impactantes">diferencial que se señale en una entrevista</a>.
Investigue diariamente y conozca los conceptos básicos sobre todos los pasos que involucran el área de especialización en la que tienes la intención de trabajar. Esto te convertirá en un profesional que, incluso trabajando en una empresa en crecimiento con un número reducido de empleados, es capaz de superar pequeños obstáculos sin necesidad de la ayuda de terceros, optimizando los procesos de la empresa.
Innovación
Siempre esté actualizado y ejercite tu creatividad en función de los conocimientos adquiridos en tus estudios autónomos. Siempre tengas en cuenta el contexto en el que se inserta la empresa y en qué etapa del desarrollo de inicio se encuentra, de modo que, si obtienes la vacante, serás un empleado activo y diferencial.
Al proponer nuevas soluciones a un problema, ten en cuenta que no todos creerán en el éxito de tu propuesta, pero eso es lo que la hará innovadora.
Capacidad comunicativa
No dudes en compartir ideas, conocimientos y consejos con colegas. Intenta interactuar con ellos también. Muchas startups realizan talleres internos impartidos por sus propios empleados. Quién sabe, es posible que no te destaques por un conocimiento o habilidad e incluso puedes comenzar a construir una imagen además de eso.
Postura práctica
Surgirán problemas en cualquier momento para ser resueltos. Esto será parte de tu vida diaria y resolverlos se convertirá en tu rutina. Para hacer esto, deberás tener en cuenta que a menudo hacer que algo funcione no significa hacerlo de manera óptima, y para una startup esto es esencial.
Saber qué esperar de este tipo de trabajo
Ambiente
Ya puedes ver que, en una startup, todo es rápido. No te preocupes: este ritmo, muy similar al de los jóvenes como tu, facilita tu adaptación. Este tipo de empresa generalmente tiene un ambiente joven, con un clima ideal para aquellos que buscan aprendizaje y crecimiento individual y colectivo al mismo tiempo.
Comportamiento de los profesionales.
En este tipo de ambiente, no debe haber egoísmo y competencia entre los empleados. Son un equipo que, en conjunto, tiene como objetivo mejorar su sector y la propuesta de la compañía en su conjunto. Todo se hace a través de una colaboración constante.
Intensidad de trabajo
Al igual que con cualquier empresa, tendrás objetivos que cumplir, pero no son tus enemigos. En las startups, los indicadores por los cuales te miden son oportunidades para que crezcas. Descubra qué compañías están más enfocadas en estas métricas en comparación con otras y analice cuál podría mejorar en momentos de mayor presión.
Deberás ser muy productivo e incluso desarrollar técnicas para garantizar esto, si es necesario. Realizar múltiples tareas de manera organizada mientras se trata de interrupciones será tu desafío inicial y tu rutina futura.
Carrera
Las startups son muy dinámicas y necesitan profesionales que se ajusten a este perfil. En una empresa tradicional, tendrías que esperar muchos años para desarrollar tu carrera. Las startups, por otro lado, promueven oportunidades para que muestres tu valor y mejore tu conocimiento mucho más rápido.
Además, tu camino dentro de la empresa no necesita ser lineal en absoluto. Si te destacas, incluso puedes convertirte en el jefe de un nuevo departamento a medida que la empresa crece.
El desarrollo de habilidades interpersonales e intrapersonales influye positivamente no solo en tu carrera sino también en tu vida personal. Consulta nuestros cursos en Alura para seguir desarrollándote.---
"select count(*), count(1) y count(nombre): batalla de los counts de SQL"
2020-10-14
"
Conozca las diferencias entre las diversas posibilidades de contar filas de tablas con count en una base de datos"
"guilherme-silveira"
"guilherme.silveira@caelum.com.br"
"data-science"

Cuando vamos a usar el count en la base de datos, nos enfrentamos con varias opciones de SQL, conozca las diferencias entre las diversas posibilidades de contar las filas de la tabla con el recuento en una base de datos.
Como ejemplo, ¿cuántos productos tiene mi empresa?

Código

</blockquote>
Pero...

Código

</blockquote>
¿Cómo así? ¿SQL está loco? ¿De nuevo?

Código

</blockquote>
¡El select count verifica el número de líneas no nulas dentro del recuento que desea hacer! Si tenía un nombre nulo, ¡no contaba! ¿Resultado? Error =/
Ten mucho cuidado con tus counts. Entonces, ¿qué debo decirte? Si deseas contar valores no nulos, use count(campo), como lo hicimos nosotros:

Código

</blockquote>
Pero si deseas contarlos a todos, count estrella en él para no correr el riesgo, contará la cantidad de registros devueltos, independientemente de los valores nulos:

Código

</blockquote>
¿Y el 1? ¿Por qué count(1)?

Código

</blockquote>
El count (1) sería una alternativa para count(campo) porque estaría seguro de que nunca sería nulo, y que no necesitaría leer el campo... sucede que se vuelve extraño select count (1), y ¿deseas tener un código extraño o un código legible?
Como dije, prefiero contar estrellas ... ¿y tú, contas estrellas, contas 1, o contas id?
Y ahora, el desafío: ¿cuál es el resultado del SQL a seguir?

Código

</blockquote>
¿Te gustaran estas prácticas y consejos de SQL? ¿Qué tal aprender más sobre Data Science? Entonces, ¡Mira nuestros cursos aquí en Alura!---
"Técnica Pomodoro: gestiona tu tiempo con sencillez"
2020-10-30
vascoginde
"Entienda la técnica pomodoro, importante en la gestión del tiempo."
inovacao-gestao

En mi vida diaria en Alura, reviso guiones de cursos, ejercicios, clases grabadas, acompaño y ayudo a los instructores y instructoras en distintas actividades. Todo esto para garantizar la calidad que brindamos.
Hoy tengo 3 guiones para revisar, 2 cursos ya listos para ser vistos, 2 reuniones y escribir este artículo.
La idea es hacer todo esto hoy, para no retrasar el trabajo de nadie. Tengo mucho tiempo para cumplir con estas actividades. Pero, ya me di cuenta de que a menudo dejo una o dos para el día siguiente. Esto sucede por 3 razones:
<ol>
Tiendo a dispersarme fácilmente con cosas no relacionadas con el trabajo (conversas con los compañeros, redes sociales, etc.);
En el medio de una actividad, empiezo a hacer otra y no termino la primera;
Lo peor de todo: la dilación, que en algunos momentos nos persigue.
</ol>
Usaré una técnica que me ayudará a mantener mi atención durante cada actividad. Y también me permitirá tener más disciplina y mitigar la dilación. Esta es la Técnica Pomodoro. ¡Si! ¡La Técnica del Tomate (“Pomodoro” es tomate en italiano)!
¡Y no! No voy a dejar de hacer todo lo que hago para preparar pasta. Pero sí, ¡usar un cronómetro y marcar el tiempo de mis actividades!
Los fundamentos
Acompáñame, la técnica es sencilla:
Elige una tarea que debe hacerse y anótela en un papel.
Puede ser una tarea pequeña, una gran tarea. O incluso esa tarea que llevas días postergando. ¡No importa! Lo que importa es que esta tarea necesita de toda tu atención. ¿Tienes más de una? Escribe todo, entonces.
Configure tu cronómetro para que suene después de 25 minutos. Jura con los pies juntos a ti mismo: Dedicaré 25 minutos a esta tarea y no me interrumpiré. ¡Sé que puedes hacerlo!
Trabaja en esta tarea hasta que suene el cronómetro. Comprométete con esta tarea en los próximos 25 minutos, ¡no olvides el juramento! Si por acaso te acuerdas de otra tarea importante, escríbala debajo de la que estás haciendo y vuelve al trabajo.
Cuando suena el cronómetro, raya esta tarea del papel. ¡Felicidades! Te quedaste 1Pomodoro completo, sin interrupciones, ¡en una sola tarea! (cada período de 25 minutos corresponde a 1 Pomodoro).
Haga un breve descanso. Medita, camina, toma un café, intercambia una idea con un colega (que también está en su descanso). Lo importante es: no hagas nada relacionado con el trabajo durante el máximo de 5 minutos. ¡Tu cerebro te lo agradecerá más tarde!
Cada 4 Pomodoros haga una pausa más larga. Después de completar 4 Pomodoros, puede tomar un descanso más largo, de 20 a 30 minutos. Tu cerebro utilizará este tiempo para asimilar nuevas informaciones y descansar antes de la próxima ronda de Pomodoros.
Algunos consejos e informaciones
Creo que hasta acá ya te quedó claro: usa el dispositivo que quieras, no tienes por qué ser un temporizador de cocina con forma de tomate. Yo usé mi móvil.
De hecho, el celular solo se usará para contar el tiempo, ¿de acuerdo? Tenga en cuenta que en los puntos 5 y 6 anteriores no mencioné en ningún momento Facebook, Twitter o WhatsApp. Deja las redes sociales para el almuerzo. Si es extremadamente importante utilizar un medio de comunicación, utilice su chat preferido o llame.
Eso sí, hay situaciones en las que no hay forma, tendrás que interrumpir tu tarea en el medio, ya sea para una reunión de emergencia, o para ayudar a un colega. De todos modos, habrá casos externos que estarán fuera de tu control. Cuando vuelvas a concentrarte en tu trabajo, ¡reinicia el cronómetro! Eso es porque habrá perdido el tiempo cronometrado. E incluso si pausa el cronómetro, volverás menos concentrado.
Tenga en cuenta que esta medida de tiempo Pomodoro es un valor estimado. Es un buen momento porque es corto, las personas tienden a poder mantenerse concentradas por un período máximo de 30 minutos. Con la práctica, puede utilizar tu propia unidad de medida en dependiendo de tus tareas y concentración.
¡Adapte la técnica de acuerdo! Ella existe para ser tu aliada. No temas modificarla cuando notes que lo principal que ya lograste: disciplina y enfoque para cumplir con tus tareas diarias.
Ahora es tu turno
La ideología detrás de esta técnica no es de ninguna manera transformarnos en pequeños robots programados para realizar tareas de vez en cuando, sino ayudarnos a cumplir con tareas en pequeños ciclos y aumentar nuestra productividad. La promesa de concentrarse por un día completo en varias cosas es mucho más difícil de cumplir que la de concentrarse en una cosa cada 25 minutos.
Empecemos. Tome una hoja de papel o tu cuaderno de anotaciones y escriba una o más tareas que debes cumplir hoy. Configure el cronómetro para que suene en 25 minutos y ¡fuerza, concentración y disciplina!
Escribí este artículo usando la Técnica Pomodoro ¡y valió mucho la pena! Para cumplir con mis actividades, comencé a hacer estos bloques de 25 minutos, respetando los descansos y, con el tiempo, el trabajo comenzó a fluir. ¡Espero que también te sea de gran ayuda!
El desarrollo de habilidades interpersonales e intrapersonales influye positivamente no solo en tu carrera sino también en tu vida personal. Consulta nuestros cursos en Alura para seguir desarrollándote.---
"Tomando partes de texto en Java"
2020-10-23
"Aprenda a tomar partes de un texto en una String en java"
"alexfelipe"
"alexfelipevieira@gmail.com"
"programacao"

Me estoy preparando para la certificación de Oracle y tuve que lidiar con la siguiente situación:
¿Cómo tomar una parte de una String? Revisemos la clase Libro:

Código

Agregar un libro nuevo:

Código

¿Y esta descripción gigantesca? Imprimamos el libro y veamos qué pasa:

Código

Si solo un libro ocupa todo ese espacio, ¡imagínate una lista con varios! No será genial... ¿Qué tal, en el momento de la impresión, si tomamos solo los primeros 30 caracteres? Podemos hacer esto usando el método substring() de la clase String. Y entonces suscribamos el método toString() de la clase Libro:

Código

Imprimiendo el libro de nuevo:
nombre: Autor de Java EE: Descripción de Alberto Souza: La especificación Java EE y sus…
¡Muy bien! Pero, ¿qué significan los parámetros 0 y 30? El método substring() tiene la siguiente firma: substring(int beginIndex, int endIndex). El índice inicial comienza en 0, así que pongo 0 como primer parámetro, pero ¿qué pasa con el segundo parámetro? ¿Anda a la casa 30? Veamos:

imagen

¡Como podemos ver, el índice final no es incluido! Esta es una de las precauciones que debemos tomar... Además del índice inicial y final, el método substring() también recibe solo el índice inicial:
return "nombre: " + nombre + "\\nautor: " + autor + "\\ndescripcion: " + descripcion.substring(30);
Imprimiendo el libro de nuevo:

Código

He ¿¿qué pasó?? Cómo podemos ver, falta una parte de la descripción, es decir, cuando usamos el substring() con un solo parámetro, informamos que queremos que se lleve la parte de la String desde el índice informado, es decir, desde el índice 30 hasta el final.
Genial, vimos que el substring() tiene la capacidad de recoger una parte de la String según el índice, pero ¿por qué debería empezar siempre con 0? Vamos a suponer que necesitamos hacer una paginación tomando los siguientes 30 caracteres de un texto y que ahora el índice inicial comienza con 1 y se incluye el índice final:
String page1 = texto.substring(1, 30); ...
Aparentemente ha mejorado, pero veamos la segunda página:
String page2 = texto.substring(31, 60); ...
¿Y entonces? ¿Tomará 30 o 29 caracteres? Ahora verifiquemos con el estándar actual:
String page1 = texto.substring(0, 30); 
String page2 = texto.substring(30, 60);
Tenga en cuenta que es mucho más natural comprender que los siguientes 30 caracteres se devolverán en cada página. Debido a esta situación, se adoptó el valor predeterminado de comenzar en 0 y ¡no incluir el último índice!
En Alura tenemos toda una formación con varios cursos de Java, desde lo más básico con el lenguaje hasta conceptos más avanzados como clases, poliformismo y herencia. Pero no te asustes con esos términos, ellos son abordados con un proyecto práctico que junto con nuestra metodología y didáctica hacen que el contenido sea mucho más fácil de ser aprendido.---
"Trabajando con archivos y directorios en Python "
2020-10-27
"Aprenda a trabajar con archivos y directorios utilizando Python"
"alexfelipe"
"alexfelipevieira@gmail.com"
"programacao"

En mi sistema de registro de productos, necesito crear una función que, desde un archivo CSV con datos de productos, pueda leer este archivo y separar todos los productos que contiene. Para representar un producto tenemos la siguiente clase:

Código

Inicialmente tenemos el archivo datos.csv con el siguiente contenido:
nombre, valor camiseta, 25.0 chaqueta, 125.0 zapatillas, 80.0 pantalones cortos, 40.0
En mi sistema, leeré este archivo del directorio "archivos/productos/", por lo tanto, crearemos la variable archivo indicando la ruta y nombre del archivo leeremos:
archivo = 'archivo/productos/datos.csv'
Implementando la función de lectura del archivo
Ahora necesitamos crear una función que se encargará de leer estos productos a través de la variable archivo, así que crearemos la función leer_productos() pasando el archivo como parámetro:

Código

Primero, necesitamos abrir el archivo CSV, es decir, usaremos la función open enviando la variable archivo y usando el parámetro 'rb' que indica lectura:
def leer_productos(archuivo):
   archivo_abierto = open(archivo, 'rb')
En Python, para leer un archivo CSV, podemos usar la función reader del módulo csv, sin embargo, necesitamos importar el módulo:

Código

Observe que también agregamos el parámetro delimiter que ya separa cada información de un criterio, en este caso, cada información estará separada en el momento en que aparezca una coma, y además, estamos devolviendo la función reader que es exactamente el archivo leído.
Entonces hagamos una prueba, haremos la llamada a la función leer_productos y lo devolveremos a la variable datos:

Código

Ejecutando nuestro código obtenemos el siguiente resultado:
IOError: [Errno 2] No such file or directory: 'archivo/productos/datos.csv'
Comprobando la existencia del archivo
¡Ups! ¡No pudo encontrar mi archivo! ¿Por qué pasó esto? Veamos dentro del directorio donde está mi proyecto:

Código

</blockquote>
De hecho, no existe tal directorio, entonces, ¿qué debemos hacer? Antes incluso de intentar obtener el archivo, ¡tenemos que comprobar si al menos existe! En otras palabras, primero debemos verificar si la ruta que queremos encontrar existe, si no es así, ¡debemos crearla!
Entonces, nuestro primer paso es separar la variable archivo en dos, es decir, el archivo y la ruta:
ruta = 'archivo/productos' 
archivo = ruta + '/datos.csv'
A continuación, creemos la función verificar_archvo, que se encargará de verificar si el directorio existe y el archivo también, si no existe, ¡debe crearlos! Así que vamos a crearlo:

Código

Comprobando la existencia del directorio
¿Cuál es nuestro próximo paso? Es precisamente para comprobar que el directorio no existe. Para eso, en Python, podemos usar el módulo <a href="https://docs.python.org/2/library/os.html">os</a> con funciones capaces de realizar <a href="https://es.wikipedia.org/wiki/Llamada_al_sistema">llamadas de sistema</a>.
En nuestro primer caso, usaremos la función path.exists que comprueba si existe un archivo o directorio con el parámetro especificado:

Código

Tenga en cuenta que estamos comprobando si el directorio no existe, si esto es cierto, ¿que debemos hacer? ¡Necesitamos crear el directorio! Pero, ¿cómo creamos un directorio en Python? ¡Sencillo! En módulo os, también tenemos la función makedirs que crea directorios:

Código

Nuestro paso siguiente es verificar la existencia del archivo dentro de este directorio. Podemos usar nuevamente la función path.exists del módulo os. De la misma manera que hicimos con el directorio, si el archivo no existe, necesitamos crearlo.
Crear el archivo
Para crear un archivo usaremos la función open pasando el segundo parámetro con el valor "w" que indica la creación para escrita:

Código

Finalmente, devolvemos la variable archivo para leerla en la función leer_productos:

Código

Ahora, basta que llamemos la función verificar_archivo devolviendo su resultado para la variable archivo, y luego, llamamos la función leer_productos enviando la variable archivo como parámetro:
arquivo = verificar_archivo() datos = leer_productos(archivo)
Exhibiendo las informaciones
Ahora vamos a imprimir los datos para comprobar los valores, sin embargo, en lugar de hacer un for procedimentalmente, utilizaremos el recurso de comprensión de lista:
print [dato for dato in datos]
Ejecutando el código obtenemos el siguiente resultado:
[['nombre', ' valor'],
 ['camiseta', ' 25.0'],
 ['chaqueta', ' 125.0'], 
 ['zapatillas', ' 80.0'],
 ['pantalones cortos', ' 40.0']]
Tenga en cuenta que el primer valor sigue siendo el encabezado, es decir, las líneas 'nombre' y 'valor'. Para eliminar este encabezado simplemente llame la función next antes de iterar la variable datos:
next(datos) print [dato for dato in datos]
Finalmente, solo necesitamos almacenar los valores en objetos del tipo Producto:
productos = [Producto(dato[0], dato[1]) for dato in datos] print productos
Ejecutando el código nuevamente, obtenemos el siguiente resultado:
[nombre:camiseta valor: 25.0,
nombre:chaqueta valor: 125.0,
nombre:zapatillas valor: 80.0,
nombre:pantalonescortos valor: 40.0]
Situaciones inesperadas
¡Tenga en cuenta que todos los datos se han leído sin ningún problema! Sin embargo, si la ruta "archivo/productos" en lugar de ser un directorio, ¿es un archivo? ¿Qué pasaría con nuestro código?
¡Hagamos una simulación! Primero voy a cambiar el nombre del directorio "archivo/productos" a "archivo/productos1" y luego, voy a crear un archivo llamado "productos" dentro del directorio "archivo":

imagen

Probando nuestro código, tenemos el siguiente resultado:

Código

Vea que intentó abrir el archivo con la función open, pero, se dio cuenta de que el "archivo/productos" ¡es un archivo! En otras palabras, permitimos que nuestro algoritmo siguiera adelante ... Entonces, ¿qué debemos hacer?
Antes de que nuestro algoritmo intente abrir el archivo, ¡debemos asegurarnos de que la ruta sea válida! Entonces, justo cuando verificamos si no existe la ruta:
if not os.path.exists(ruta): os.makedirs(ruta)
Podemos agregar un elif que se activará si hay un archivo o directorio de acuerdo con la ruta especificada, y luego, verificará si la ruta no es un directorio:
if not os.path.exists(ruta): os.makedirs(ruta) elif not os.path.isdir(ruta):
Si es cierto, es decir, la ruta especificada no es un directorio, simplemente arrojamos un error de IOError advirtiendo que la ruta que estamos usando no es un directorio:
if not os.path.exists(ruta): os.makedirs(ruta) elif not os.path.isdir(ruta): raise IOError(ruta + "¡no es un directorio!")
Ahora, cuando existe un archivo o directorio en la ruta especificada y no es un directorio, ¡detenemos automáticamente nuestro algoritmo! Veamos el resultado de la prueba:
Traceback (most recent call last): File "/home/alex-felipe/python/dir.py", line 22, in &lt;module&gt; archivo = verificar_archivo() File "/home/alex-felipe/python/dir.py", line 11, in verificar_archivo raise IOError(ruta + "¡no es un directorio!") IOError: archivo/productos ¡no es un directorio!
Vea que ahora, incluso en casos excepcionales como este, nuestro algoritmo puede manejar y tomar las decisiones necesarias.
Conclusión
En esta publicación vimos los problemas que podemos tener al leer archivos dentro de directorios, es decir, antes de tener que leer un archivo siempre necesitamos verificar si la ruta, en este caso, el directorio y el archivo, realmente existen, si no, necesitamos crearlos, si sí, ¡simplemente leemos!
¿Qué tal aprender más sobre Python y sus diversos recursos? Entonces, ¡Mira nuestros cursos de Python para Data Science aquí en Alura!---
"Vinculando elementos con HTML5 "
2020-10-28
"Para facilitar la navegación dentro de una página, una buena idea es poder crear una guía que oriente al usuario, los vinculos."
"leticia-mayumi"
"leticia.mayumi@alura.com.br"
"front-end"

En el blog de Alura tenemos algunas publicaciones muy largas sobre ciertos temas que demandan mucho contenido, pero eso hace que el desplazamiento de la página sea gigante.
Esto es lo que pasó, por ejemplo, con la publicación que escribió Sérgio Lopes <a href="https://www.aluracursos.com/blog/por-una-web-mas-rapida-26-tecnias-de-optimizacion-de-paginas-web">Para una web más rápida: 26 técnicas de optimización de Sitios Web</a>:

imagen

Pero, ¿y si quisiera leer solo un tema específico de este texto? Tendría que desplazarme durante mucho tiempo, intentando encontrar la parte que me interesa...
Para facilitar la navegación dentro de la propia página, una buena idea sería poder crear un índice que guiara al usuario sobre el contenido del texto, como un sumario de un libro, por ejemplo.
Crear una lista de tópicos
Para empezar, una buena idea sería crear una lista que contenga todos los tópicos de que tratará el texto, algo como:

Código

Esto resultaría en una lista de tópicos, que podríamos agregar inmediatamente después de la introducción del texto:

Código

¿Sería esta lista por sí sola suficiente para facilitar la búsqueda de temas dentro del texto? Aun así, el usuario tendría que desplazarse mucho para llegar a estos temas en la lista...
Pero, ¿y si pudiéramos saltar de una parte a otra de la página, yendo directamente a dónde necesitamos? Esto facilitaría la navegación, ¡ayudando al usuario a moverse más rápido por la página!
Entonces, una buena idea sería vincular los elementos de la lista con los tópicos correspondientes a lo largo del texto. ¡Con HTML logramos esta funcionalidad de una manera sencilla!
Vinculando puntos en la página
Con HTML podemos crear una especie de vínculo que enlaza diferentes elementos sin salir de la misma página. Es decir, primero necesitamos agregar algo que identifique a cada elemento para que podamos llamarlos de acuerdo con esta identificación.
Por ejemplo, si tomamos el primer tópico del texto:

Código

Luego determinaremos una identificación (id) para este elemento.
&lt;h3 id="habilite-gzip"&gt;#1 - Habilite GZIP&lt;/h3&gt;
En este caso, el id como referencia habilite-gzip, por ejemplo. Cada caso pedirá una especificidad diferente.
Bien, con eso definido, ahora necesitamos crear un enlace al tópico dentro del texto, desde el índice del inicio.
En los elementos del índice agregamos exactamente esto: ¡enlaces!
&lt;li&gt;&lt;a href="#"&gt;#1 - Habilite GZIP&lt;/a&gt;&lt;/li&gt;
Tenga en cuenta que no tenemos ningún enlace para insertar en nuestra referencia de link (href)... Pero entonces, ¿qué entra en (href)?
¿Recuerda que agregamos una identificación (id) específica para ese tópico, en la tag h3, que lo involucra? Es exactamente esta referencia la que indicaremos en href.
&lt;li&gt;&lt;a href="#habilite-gzip"&gt;#1 - Habilite GZIP&lt;/a&gt;&lt;/li&gt;
Es decir, para indicar que queremos saltar dentro de la página directamente a la id indicada, se añadió un "#" antes de la indicación (id). Con esto, el enlace que creamos crea un vínculo dentro de la propia página, escaneando toda la página hasta encontrar la id correspondiente a lo indicado en href. :)
Ahora sí, ¡conseguimos vincular un enlace con otro punto dentro de la misma página!
Otros usos
Además de este índice de tópicos, hay otras formas de utilizar el vínculo, como los botones "Volver al principio". Algo como:

imagen

En estos casos, también tenemos un vínculo, pero nos devuelve al origen.
Independientemente del caso de uso, es importante tener en cuenta que este tipo de función sólo es relevante en páginas con mucho contenido, es decir, páginas donde el desplazamiento es tan grande que el usuario puede perderse en el medio del camino y, en consecuencia, puede perjudicar la usabilidad de nuestro sitio web.
Mejorando la navegabilidad
Si consideramos que hoy los <a href="https://www.nngroup.com/articles/how-users-read-on-the-web/">usuarios son lectores con poco envolvimiento en la lectura de textos completos</a>, considere que el vínculo de elementos dentro de la propia página es algo muy interesante para lograr una mejor navegabilidad.
De esta forma, facilitamos la búsqueda de lo que realmente interesa al usuario, dentro de nuestra página e incrementamos las posibilidades de mantenerlo interesado en lo que consideramos importante para su conversión.
Eso sí, a pesar de ser un recurso interesante, es importante utilizarlo con cautela, buscando analizar bien el contexto para validar si de hecho, es necesario utilizar este mecanismo.
Si te interesa este tema, aquí en Alura tenemos capacitaciones de front-end, para principiantes y para aquellos que ya son desarrolladores web. En ellas, verás cómo programar en Javascript, HTML y CSS para construir sitios web.---
"VisualStudio Code: instalación, teclas de acceso directo, plugins e integraciones"
2020-10-30
"VsCode es el editor de moda en el mundo Front End, pero ¿es realmente útil? ¿Puedes trabajar con otros lenguajes? Veamos juntos las características principales que van ayudarte a ser más productivo."
"omariosouto"
"mario.souto@caelum.com.br"
"front-end"

Tengo que admitir que en los últimos dos años, no importa cuánto entre una actualización o algo así, se vuelve extraño, prácticamente no puedo imaginarme sin VSCode. Lo uso como si fuera prácticamente una extensión de mi brazo, esto es malo cuando estoy emparejando con alguien que usa otro editor... Pero de todas formas este es un tema para otra publicación, la idea aquí es intentar pasar un poquito de cómo VSCode con sus features hoy me ayudan a ser productivo incluso pasando una lista de plugins e integraciones que tiene (créame, es posible codificar en Java).
¿Por dónde empezar?
Para descargar el editor basta acceder <a href="https://code.visualstudio.com/download">el sitio web en el área de descargas</a>, el soporte de hoy es muy bueno.

imagen

Mucha gente piensa que VsCode es solo para Front Enders, pero esto es una falacia, por supuesto, cada lenguaje tiene una herramienta elegida por la comunidad, pero VSCode encaja bien en varios casos como cito más abajo en la publicación.
Cómo comenzar y teclas de acceso directo que te harán volver a esta publicación en el futuro

¿Cómo buscar archivos? Ctrl + P o Command + P, es súper útil para proyectos grandes o con muchos archivos, cuando trabajaba con Angular fue lo que me salvó.


imagen


¿Cómo ejecutar comandos? <em>Ctrl + Shift + P</em> o <em>Command + Shift + P</em>, lo uso mucho para ejecutar el comando para aplicar lint al archivo en el que estoy trabajando y para hacer una forcé refresh cuando siento que algo en VsCode está fallando

imagen


¿Cómo seleccionar varias líneas?


imagen


Con el mouse: <em>Alt + Click</em> u <em>option + Click</em>


Con las flechas hacia arriba y hacia abajo: Alt + Ctrl + Click u option + Command + Click


Cómo hacer solo find para la próxima ocurrencia: <em>Ctrl + D</em> o <em>Command + D</em>, es sin duda uno de los comandos que más utilizo a diario, ya que facilita cambios de cosas repetidas en la página. 


imagen

¿Cómo hacer refactorizaciones en el código? <em>F2</em> Es el comando que más he usado cuando necesito cambiar nombres de variables y funciones, lo mejor es que VSCode es muy inteligente para lidiar con alcances e imports en otros archivos (en la mayoría de los casos).

imagen

¿Cómo utilizar el terminal integrado? Hoy en día es súper común que necesitemos del terminal para tareas como ejecutar pruebas, alguna tarea de build y VSCode tiene un terminal integrado que puede ser muy útil para evitar muchos cambios de pestañas e incrementar la productividad. Este te dejo un <a href="https://code.visualstudio.com/docs/editor/integrated-terminal">enlace a la documentación</a>, porque hay un tutorial genial sobre cómo cambiar de terminal entre otros puntos.
Si desea otros datos, te recomiendo encarecidamente que acceda la <a href="https://code.visualstudio.com/docs/getstarted/keybindings">Documentación de VsCode</a>

¿La integración con git es realmente buena?
Confieso que durante mucho tiempo tuve el sueño de ser ninja en Git, quería saber todos los comandos de memoria; y ser el mayor hackerman a la hora de solucionar conflictos y todo, sin embargo, el tiempo pasa y hoy en día para ser más productivo, luego de consolidar mi base estoy utilizando los recursos proporcionados por VsCode para facilitar procesos que ya hacía por estándar:
Review pré commit
Hoy en día creo que es mucho más fácil revisar todos los archivos que moví antes de hacer un commit dada la coloración que hace VSCode sobre lo que eliminaste y lo que se agregó, ten cuidado con este recurso porque puede hacerlo mucho más difícil cambiar de herramienta en el futuro (y así fue como no pude adaptarme a Web Storm).

imagen

<em>Imagen directa de la documentación de VSCode</em>
Resolución de conflictos más clara
Quien nunca ha resuelto el conflicto de merge incorrecto debería lanzar la primera piedra. Ya me he perdido mucho con esto y hoy usando VSCode me siento mucho más seguro, ¡nuevamente su interfaz para interactuar con los procesos de git brilla! Echa un vistazo a esta imagen y ya te dejo la invitación para probar con algún conflicto que quizás estés resolviendo ahora (o más adelante).

imagen

<em>Imagen directa de la documentación de VSCode</em>
Apoyos

<a href="https://flutter.dev/docs/development/tools/vs-code">Flutter</a>: Este es mi bebé :)
<a href="https://code.visualstudio.com/docs/languages/javascript">JavaScript / TypeScript</a>: Este es sin duda el mejor apoyo, creo que es mejor que VsCode para trabajar hoy con JS solo si usas algo como WebStorm.
<a href="https://code.visualstudio.com/docs/languages/java">Java</a>
<a href="https://code.visualstudio.com/docs/languages/go">Go</a>
<a href="https://code.visualstudio.com/docs/languages/python">Python</a>
<a href="https://marketplace.visualstudio.com/items?itemName=betterthantomorrow.calva">Clojure</a>: Para clojure sigo prefiriendo IntelliJ Community.
Extras:
Debugger: Si trabajas con Back End y echas de menos un debug interesante, VsCode tiene un soporte muy bueno para trabajar con Node, Java y varias otras herramientas, basta buscar cómo configurar

Plugins geniales
En general evito los plugins, en la época del sublime era muy adicto y terminé sufriendo cuando formatee la computadora y perdí todo... Una de las ventajas de VSCode para mí, es que tiene mucha cosa de forma nativa y prácticamente no siento la necesidad de agregar cosas adicionales, lo que uso y que podría tener sentido para ti son las siguientes extensiones.

<a href="https://marketplace.visualstudio.com/items?itemName=artdiniz.quitcontrol-vscode">Quit Control</a>: Esta extensión es OBLIGATORIA, en caso de que no quieras frustrarte presionando Command + Q o su equivalente en Windows y perder lo que estaba trabajando.
<a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens">Git Lens</a>: Este complemento es básicamente un Git Blame integrado con tu código, puedes saber quién agregó un código determinado y cuándo, me ayuda mucho en caso de duda para hablar con la persona o alguien que trabajó en conjunto.
<a href="https://marketplace.visualstudio.com/items?itemName=codezombiech.gitignore">Gitignore</a>: Este agrega un buen soporte para trabajar con gitignore dentro de la herramienta, en general terminas usándolo en pocos momentos en el proyecto, pero como dije que dejaría todo lo que uso, entonces que siga en la lista
<a href="https://quokkajs.com/">Quokka JS</a>: Este lo uso para tener un feedback visual de los datos entre las variables que estoy trabajando cuando estoy solucionando problemas de maratón de programación.
<a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint">EsLint</a>: Linter es vida y poder ejecutarlo usando <em>Command + Shift + P</em> es maravilloso y me hace más cómodo que ordenar todo manualmente o ejecutar el eslint a través de terminal.

Conclusión
Hay mucha pelea entre lo que es una IDE y lo que es un editor de texto, pero en la práctica lo que realmente hace la diferencia es lo productivo que eres con la herramienta. 
Si te interesa este tema, aquí en Alura tenemos capacitaciones de front-end, para principiantes y para aquellos que ya son desarrolladores web. En ellas, verás cómo programar en Javascript, HTML y CSS para construir sitios web.---